

  a class enclosed div
Looking at - undefined
Element construct Element {
  children: [],
  tagName: 
   { [Function: DivDad]
     __super__: Component { constructor: [Object], render: [Function] } },
  attrs: {},
  _Halvalla: { tagName: 'divDad', propertyName: 'attrs', children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 
   { [Function: DivDad]
     __super__: Component { constructor: [Object], render: [Function] } },
  '1': {} }
shipping Element {
  children: [],
  tagName: 
   { [Function: DivDad]
     __super__: Component { constructor: [Object], render: [Function] } },
  attrs: {},
  _Halvalla: { tagName: 'divDad', propertyName: 'attrs', children: undefined } }
output length 0
Looking at - undefined
Looking at - undefined
Looking at - undefined
March Teacup Element {
  children: [],
  tagName: 
   { [Function: DivDad]
     __super__: Component { constructor: [Object], render: [Function] } },
  attrs: {},
  _Halvalla: { tagName: 'divDad', propertyName: 'attrs', children: undefined } }
Component construct DivDad {
  render: [Function],
  tagName: 'divDad',
  attrs: {},
  children: [Function],
  _Halvalla: 
   { propertyName: 'attrs',
     children: [Function],
     tagname: 'divDad' } }
Component arguments { '0': 'divDad', '1': {}, '2': [] }
Looking at - undefined
March Teacup DivDad {
  render: [Function],
  tagName: 'divDad',
  attrs: {},
  children: [Function],
  _Halvalla: 
   { propertyName: 'attrs',
     children: [Function],
     tagname: 'divDad' } }
Teacup::tag Typeof props to render object
Teacup::tag early result <divDad>
Looking at - undefined
March Teacup function (){ return fn.apply(me, arguments); }
Looking at - undefined
Looking at - undefined
shipping [String: 'wow']
output length 0
Looking at - undefined
Element construct Element {
  children: [String: 'wow'],
  tagName: 'div',
  attrs: { class: 'bango', className: 'bango' },
  _Halvalla: { tagName: 'div', propertyName: 'attrs', children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'div',
  '1': { class: 'bango', className: 'bango' },
  '2': [String: 'wow'] }
shipping Element {
  children: [String: 'wow'],
  tagName: 'div',
  attrs: { class: 'bango', className: 'bango' },
  _Halvalla: { tagName: 'div', propertyName: 'attrs', children: undefined } }
output length 0
Looking at - undefined
Looking at - undefined
Looking at - undefined
March Teacup Element {
  children: [String: 'wow'],
  tagName: 'div',
  attrs: { class: 'bango', className: 'bango' },
  _Halvalla: { tagName: 'div', propertyName: 'attrs', children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <div class="bango">
Looking at - undefined
March Teacup [String: 'wow']
shipping wow
output length 0
Looking at - undefined
Final Render wow
Teacup::tag final result <div class="bango">wow</div>
shipping <div class="bango">wow</div>
output length 0
Looking at - undefined
Final Render <div class="bango">wow</div>
Teacup::tag final result <divDad><div class="bango">wow</div></divDad>
shipping <divDad><div class="bango">wow</div></divDad>
output length 0
Looking at - undefined
Final Render <divDad><div class="bango">wow</div></divDad>
    âœ“ without decoration


  1 passing (23ms)

