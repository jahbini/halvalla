
> halvalla@1.6.0 pretest /Users/jim/clones/halvalla
> npm run compile


> halvalla@1.6.0 compile /Users/jim/clones/halvalla
> coffee --compile --output lib/ src/


> halvalla@1.6.0 test /Users/jim/clones/halvalla
> npm run test-mithril; npm run test-react; npm run test-teacup; rm test


> halvalla@1.6.0 test-mithril /Users/jim/clones/halvalla
> rm test; ln -s test-mithril test; mocha



  a class enclosed div
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Activvating NEW
Component construct DivDad {
  view: [Function],
  tagName: 'divDad',
  attrs: undefined,
  children: [Function],
  _Halvalla: 
   { birthName: 'Bishop James',
     propertyName: 'attrs',
     children: [Function],
     tagname: 'divDad' } }
Component arguments { '0': 'divDad' }
shipping { tag: 
   DivDad {
     view: [Function],
     tagName: 'divDad',
     attrs: undefined,
     children: [Function],
     _Halvalla: 
      { birthName: 'Bishop James',
        propertyName: 'attrs',
        children: [Function],
        tagname: 'divDad' } },
  key: undefined,
  attrs: {},
  children: [ null ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Mary',
     tagName: 'divDad',
     propertyName: 'attrs',
     children: [ null ] } }
output length 0
reinspect Supplicant Mary
reinspect Supplicant Mary
Looking at - Supplicant Mary
March Halvalla - to component { tag: 
   DivDad {
     view: [Function],
     tagName: 'divDad',
     attrs: undefined,
     children: [Function],
     _Halvalla: 
      { birthName: 'Bishop James',
        propertyName: 'attrs',
        children: [Function],
        tagname: 'divDad' } },
  key: undefined,
  attrs: {},
  children: [ null ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Mary',
     tagName: 'divDad',
     propertyName: 'attrs',
     children: [ null ] } }
Constructor name Object
Tagname of March component type object divDad
Looking at - All Done! We close bag now

Looking at - Supplicant Mary
March Teacup Supplicant Mary
Component without teacup renderer: divDad
Teacup::tag Typeof props to render object
Looking at - some anonymous bozo wow
March Halvalla - to component [String: 'wow']
Constructor name String
shipping [String: 'wow']
output length 0
Looking at - All Done! We close bag now

Looking at - Supplicant John
March Teacup Supplicant John
CELL! { tag: 'div',
  key: undefined,
  attrs: { class: undefined, className: 'bango' },
  children: undefined,
  text: 'wow',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant John',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <div class="bango">
Teacup::tag final result <div class="bango">wow</div>
shipping <div class="bango">wow</div>
output length 0
Looking at - All Done! We close bag now

Final Render <div class="bango">wow</div>
Teacup::view final result <div class="bango">wow</div>
shipping <div class="bango">wow</div>
output length 0
Looking at - All Done! We close bag now

Final Render <div class="bango">wow</div>
    ✓ without decoration

  classes
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo wowoie
March Halvalla - to component [String: 'wowoie']
Constructor name String
shipping [String: 'wowoie']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'h2',
  key: undefined,
  attrs: { class: undefined, className: 'wowie zowie' },
  children: undefined,
  text: 'wowoie',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Patricia',
     tagName: 'h2',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Supplicant Patricia
reinspect Supplicant Patricia
Looking at - Supplicant Patricia
March Halvalla - to component { tag: 'h2',
  key: undefined,
  attrs: { class: undefined, className: 'wowie zowie' },
  children: undefined,
  text: 'wowoie',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Patricia',
     tagName: 'h2',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Object
Tagname of March component type object h2
Looking at - All Done! We close bag now

Looking at - Supplicant Patricia
March Teacup Supplicant Patricia
CELL! { tag: 'h2',
  key: undefined,
  attrs: { class: undefined, className: 'wowie zowie' },
  children: undefined,
  text: 'wowoie',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Patricia',
     tagName: 'h2',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <h2 class="wowie zowie">
Teacup::tag final result <h2 class="wowie zowie">wowoie</h2>
shipping <h2 class="wowie zowie">wowoie</h2>
output length 0
Looking at - All Done! We close bag now

Final Render <h2 class="wowie zowie">wowoie</h2>
    ✓ with text children

  a simple div
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
shipping { tag: 'div',
  key: undefined,
  attrs: undefined,
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Robert',
     tagName: 'div',
     propertyName: 'attrs',
     children: [] } }
output length 0
reinspect Supplicant Robert
reinspect Supplicant Robert
Looking at - Supplicant Robert
March Halvalla - to component { tag: 'div',
  key: undefined,
  attrs: undefined,
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Robert',
     tagName: 'div',
     propertyName: 'attrs',
     children: [] } }
Constructor name Object
Tagname of March component type object div
Looking at - All Done! We close bag now

Looking at - Supplicant Robert
March Teacup Supplicant Robert
CELL! { tag: 'div',
  key: undefined,
  attrs: undefined,
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Robert',
     tagName: 'div',
     propertyName: 'attrs',
     children: [] } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <div>
Looking at - All Done! We close bag now

Final Render 
Teacup::tag final result <div></div>
shipping <div></div>
output length 0
Looking at - All Done! We close bag now

Final Render <div></div>
    ✓ simple div without decoration

  multiple tags
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo function () {
          div("wow1");
          return div("wow2");
        }
March Halvalla - to component function () {
          div("wow1");
          return div("wow2");
        }
Constructor name Function
Looking at - some anonymous bozo wow1
March Halvalla - to component [String: 'wow1']
Constructor name String
shipping [String: 'wow1']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'div',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: 'wow1',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Jennifer',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
output length 0
Looking at - some anonymous bozo wow2
March Halvalla - to component [String: 'wow2']
Constructor name String
shipping [String: 'wow2']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'div',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: 'wow2',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Michael',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
output length 1
reinspect Supplicant Michael
reinspect Supplicant Michael
Looking at - Supplicant Michael
March Halvalla - to component { tag: 'div',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: 'wow2',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Michael',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Object
Tagname of March component type object div
Looking at - All Done! We close bag now

shipping { tag: 'div',
  key: undefined,
  attrs: { class: undefined, className: 'wow' },
  children: 
   [ { tag: 'div',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: 'wow1',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'div',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: 'wow2',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Elizabeth',
     tagName: 'div',
     propertyName: 'attrs',
     children: [ [Object], [Object] ] } }
output length 0
Looking at - some anonymous bozo function () {
          div("first");
          return div("second");
        }
March Halvalla - to component function () {
          div("first");
          return div("second");
        }
Constructor name Function
Looking at - some anonymous bozo first
March Halvalla - to component [String: 'first']
Constructor name String
shipping [String: 'first']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'div',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: 'first',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant William',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
output length 0
Looking at - some anonymous bozo second
March Halvalla - to component [String: 'second']
Constructor name String
shipping [String: 'second']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'div',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: 'second',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Linda',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
output length 1
reinspect Supplicant Linda
reinspect Supplicant Linda
Looking at - Supplicant Linda
March Halvalla - to component { tag: 'div',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: 'second',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Linda',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Object
Tagname of March component type object div
Looking at - All Done! We close bag now

shipping { tag: 'h2',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: 'div',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: 'first',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'div',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: 'second',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant David',
     tagName: 'h2',
     propertyName: 'attrs',
     children: [ [Object], [Object] ] } }
output length 1
reinspect Supplicant David
reinspect Supplicant David
Looking at - Supplicant David
March Halvalla - to component { tag: 'h2',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: 'div',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: 'first',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'div',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: 'second',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant David',
     tagName: 'h2',
     propertyName: 'attrs',
     children: [ [Object], [Object] ] } }
Constructor name Object
Tagname of March component type object h2
Looking at - All Done! We close bag now

Looking at - Supplicant Elizabeth
March Teacup Supplicant Elizabeth
CELL! { tag: 'div',
  key: undefined,
  attrs: { class: undefined, className: 'wow' },
  children: 
   [ { tag: 'div',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: 'wow1',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'div',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: 'wow2',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Elizabeth',
     tagName: 'div',
     propertyName: 'attrs',
     children: [ [Object], [Object] ] } }
Teacup::tag Typeof props to render object
Teacup::tag early result <div class="wow">
Looking at - Supplicant Jennifer
March Teacup Supplicant Jennifer
CELL! { tag: 'div',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: 'wow1',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Jennifer',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <div>
Teacup::tag final result <div>wow1</div>
shipping <div>wow1</div>
output length 0
Looking at - All Done! We close bag now

Final Render <div>wow1</div>
Looking at - Supplicant Michael
March Teacup Supplicant Michael
CELL! { tag: 'div',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: 'wow2',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Michael',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <div>
Teacup::tag final result <div>wow2</div>
shipping <div>wow2</div>
output length 0
Looking at - All Done! We close bag now

Final Render <div>wow2</div>
Teacup::tag final result <div class="wow"><div>wow1</div><div>wow2</div></div>
shipping <div class="wow"><div>wow1</div><div>wow2</div></div>
output length 0
Looking at - All Done! We close bag now

Final Render <div class="wow"><div>wow1</div><div>wow2</div></div>
Looking at - Supplicant David
March Teacup Supplicant David
CELL! { tag: 'h2',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: 'div',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: 'first',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'div',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: 'second',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant David',
     tagName: 'h2',
     propertyName: 'attrs',
     children: [ [Object], [Object] ] } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <h2>
Looking at - Supplicant William
March Teacup Supplicant William
CELL! { tag: 'div',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: 'first',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant William',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <div>
Teacup::tag final result <div>first</div>
shipping <div>first</div>
output length 0
Looking at - All Done! We close bag now

Final Render <div>first</div>
Looking at - Supplicant Linda
March Teacup Supplicant Linda
CELL! { tag: 'div',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: 'second',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Linda',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <div>
Teacup::tag final result <div>second</div>
shipping <div>second</div>
output length 0
Looking at - All Done! We close bag now

Final Render <div>second</div>
Teacup::tag final result <h2><div>first</div><div>second</div></h2>
shipping <h2><div>first</div><div>second</div></h2>
output length 0
Looking at - All Done! We close bag now

Final Render <h2><div>first</div><div>second</div></h2>
    ✓ with multiple text children

  multiple tags
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo wow
March Halvalla - to component [String: 'wow']
Constructor name String
shipping [String: 'wow']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'div',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: 'wow',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Barbara',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
output length 0
Looking at - some anonymous bozo wowoie
March Halvalla - to component [String: 'wowoie']
Constructor name String
shipping [String: 'wowoie']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'h2',
  key: undefined,
  attrs: { class: undefined, className: 'wowie' },
  children: undefined,
  text: 'wowoie',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Richard',
     tagName: 'h2',
     propertyName: 'attrs',
     children: undefined } }
output length 1
reinspect Supplicant Richard
reinspect Supplicant Richard
Looking at - Supplicant Richard
March Halvalla - to component { tag: 'h2',
  key: undefined,
  attrs: { class: undefined, className: 'wowie' },
  children: undefined,
  text: 'wowoie',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Richard',
     tagName: 'h2',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Object
Tagname of March component type object h2
Looking at - All Done! We close bag now

Looking at - Supplicant Barbara
March Teacup Supplicant Barbara
CELL! { tag: 'div',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: 'wow',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Barbara',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <div>
Teacup::tag final result <div>wow</div>
shipping <div>wow</div>
output length 0
Looking at - All Done! We close bag now

Final Render <div>wow</div>
Looking at - Supplicant Richard
March Teacup Supplicant Richard
CELL! { tag: 'h2',
  key: undefined,
  attrs: { class: undefined, className: 'wowie' },
  children: undefined,
  text: 'wowoie',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Richard',
     tagName: 'h2',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <h2 class="wowie">
Teacup::tag final result <h2 class="wowie">wowoie</h2>
shipping <h2 class="wowie">wowoie</h2>
output length 0
Looking at - All Done! We close bag now

Final Render <h2 class="wowie">wowoie</h2>
    ✓ with text children

  Attributes
    with a hash
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
shipping { tag: 'a',
  key: undefined,
  attrs: { href: '/', title: 'Home' },
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Susan',
     tagName: 'a',
     propertyName: 'attrs',
     children: [] } }
output length 0
reinspect Supplicant Susan
reinspect Supplicant Susan
Looking at - Supplicant Susan
March Halvalla - to component { tag: 'a',
  key: undefined,
  attrs: { href: '/', title: 'Home' },
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Susan',
     tagName: 'a',
     propertyName: 'attrs',
     children: [] } }
Constructor name Object
Tagname of March component type object a
Looking at - All Done! We close bag now

Looking at - Supplicant Susan
March Teacup Supplicant Susan
CELL! { tag: 'a',
  key: undefined,
  attrs: { href: '/', title: 'Home' },
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Susan',
     tagName: 'a',
     propertyName: 'attrs',
     children: [] } }
Teacup::tag Typeof props to render object
Teacup::tag early result <a href="/" title="Home">
Looking at - All Done! We close bag now

Final Render 
Teacup::tag final result <a href="/" title="Home"></a>
shipping <a href="/" title="Home"></a>
output length 0
Looking at - All Done! We close bag now

Final Render <a href="/" title="Home"></a>
      ✓ renders the corresponding HTML attributes
    Boolean true value
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
shipping { tag: 'br',
  key: undefined,
  attrs: { foo: true, bar: true },
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Joseph',
     tagName: 'br',
     propertyName: 'attrs',
     children: [] } }
output length 0
reinspect Supplicant Joseph
reinspect Supplicant Joseph
Looking at - Supplicant Joseph
March Halvalla - to component { tag: 'br',
  key: undefined,
  attrs: { foo: true, bar: true },
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Joseph',
     tagName: 'br',
     propertyName: 'attrs',
     children: [] } }
Constructor name Object
Tagname of March component type object br
Looking at - All Done! We close bag now

Looking at - Supplicant Joseph
March Teacup Supplicant Joseph
shipping <br foo="foo" bar="bar" />
output length 0
Looking at - All Done! We close bag now

Final Render <br foo="foo" bar="bar" />
      ✓ is replaced with the attribute name.  Useful for attributes like disabled
    Boolean false value
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
shipping { tag: 'br',
  key: undefined,
  attrs: { foo: false, bar: false },
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Jessica',
     tagName: 'br',
     propertyName: 'attrs',
     children: [] } }
output length 0
reinspect Supplicant Jessica
reinspect Supplicant Jessica
Looking at - Supplicant Jessica
March Halvalla - to component { tag: 'br',
  key: undefined,
  attrs: { foo: false, bar: false },
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Jessica',
     tagName: 'br',
     propertyName: 'attrs',
     children: [] } }
Constructor name Object
Tagname of March component type object br
Looking at - All Done! We close bag now

Looking at - Supplicant Jessica
March Teacup Supplicant Jessica
shipping <br />
output length 0
Looking at - All Done! We close bag now

Final Render <br />
      ✓ is omitted
    null and undefined value
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
shipping { tag: 'br',
  key: undefined,
  attrs: { foo: null, bar: undefined },
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Thomas',
     tagName: 'br',
     propertyName: 'attrs',
     children: [] } }
output length 0
reinspect Supplicant Thomas
reinspect Supplicant Thomas
Looking at - Supplicant Thomas
March Halvalla - to component { tag: 'br',
  key: undefined,
  attrs: { foo: null, bar: undefined },
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Thomas',
     tagName: 'br',
     propertyName: 'attrs',
     children: [] } }
Constructor name Object
Tagname of March component type object br
Looking at - All Done! We close bag now

Looking at - Supplicant Thomas
March Teacup Supplicant Thomas
shipping <br foo bar />
output length 0
Looking at - All Done! We close bag now

Final Render <br foo bar />
      ✓ renders just the attribute name
    string value
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
shipping { tag: 'br',
  key: undefined,
  attrs: { foo: 'true', bar: 'str' },
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Margaret',
     tagName: 'br',
     propertyName: 'attrs',
     children: [] } }
output length 0
reinspect Supplicant Margaret
reinspect Supplicant Margaret
Looking at - Supplicant Margaret
March Halvalla - to component { tag: 'br',
  key: undefined,
  attrs: { foo: 'true', bar: 'str' },
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Margaret',
     tagName: 'br',
     propertyName: 'attrs',
     children: [] } }
Constructor name Object
Tagname of March component type object br
Looking at - All Done! We close bag now

Looking at - Supplicant Margaret
March Teacup Supplicant Margaret
shipping <br foo="true" bar="str" />
output length 0
Looking at - All Done! We close bag now

Final Render <br foo="true" bar="str" />
      ✓ is used verbatim
    number value
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
shipping { tag: 'br',
  key: undefined,
  attrs: { foo: 2, bar: 15.55 },
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Charles',
     tagName: 'br',
     propertyName: 'attrs',
     children: [] } }
output length 0
reinspect Supplicant Charles
reinspect Supplicant Charles
Looking at - Supplicant Charles
March Halvalla - to component { tag: 'br',
  key: undefined,
  attrs: { foo: 2, bar: 15.55 },
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Charles',
     tagName: 'br',
     propertyName: 'attrs',
     children: [] } }
Constructor name Object
Tagname of March component type object br
Looking at - All Done! We close bag now

Looking at - Supplicant Charles
March Teacup Supplicant Charles
shipping <br foo="2" bar="15.55" />
output length 0
Looking at - All Done! We close bag now

Final Render <br foo="2" bar="15.55" />
      ✓ is stringified
    array value
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
shipping { tag: 'br',
  key: undefined,
  attrs: { foo: [ 1, 2, 3 ] },
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Sarah',
     tagName: 'br',
     propertyName: 'attrs',
     children: [] } }
output length 0
reinspect Supplicant Sarah
reinspect Supplicant Sarah
Looking at - Supplicant Sarah
March Halvalla - to component { tag: 'br',
  key: undefined,
  attrs: { foo: [ 1, 2, 3 ] },
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Sarah',
     tagName: 'br',
     propertyName: 'attrs',
     children: [] } }
Constructor name Object
Tagname of March component type object br
Looking at - All Done! We close bag now

Looking at - Supplicant Sarah
March Teacup Supplicant Sarah
shipping <br foo="1,2,3" />
output length 0
Looking at - All Done! We close bag now

Final Render <br foo="1,2,3" />
      ✓ is comma separated
    data attribute
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
shipping { tag: 'br',
  key: undefined,
  attrs: { 'data-name': 'Name', 'data-value': 'Value' },
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Christopher',
     tagName: 'br',
     propertyName: 'attrs',
     children: [] } }
output length 0
reinspect Supplicant Christopher
reinspect Supplicant Christopher
Looking at - Supplicant Christopher
March Halvalla - to component { tag: 'br',
  key: undefined,
  attrs: { 'data-name': 'Name', 'data-value': 'Value' },
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Christopher',
     tagName: 'br',
     propertyName: 'attrs',
     children: [] } }
Constructor name Object
Tagname of March component type object br
Looking at - All Done! We close bag now

Looking at - Supplicant Christopher
March Teacup Supplicant Christopher
shipping <br data-name="Name" data-value="Value" />
output length 0
Looking at - All Done! We close bag now

Final Render <br data-name="Name" data-value="Value" />
      ✓ expands attributes
    nested hyphenated attribute
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo function () {
            return div({
              'on-y': 'boop'
            });
          }
March Halvalla - to component function () {
            return div({
              'on-y': 'boop'
            });
          }
Constructor name Function
shipping { tag: 'div',
  key: undefined,
  attrs: { 'on-y': 'boop' },
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Karen',
     tagName: 'div',
     propertyName: 'attrs',
     children: [] } }
output length 0
reinspect Supplicant Karen
reinspect Supplicant Karen
Looking at - Supplicant Karen
March Halvalla - to component { tag: 'div',
  key: undefined,
  attrs: { 'on-y': 'boop' },
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Karen',
     tagName: 'div',
     propertyName: 'attrs',
     children: [] } }
Constructor name Object
Tagname of March component type object div
Looking at - All Done! We close bag now

shipping { tag: 'div',
  key: undefined,
  attrs: { 'on-x': 'beep' },
  children: 
   [ { tag: 'div',
       key: undefined,
       attrs: [Object],
       children: [],
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Daniel',
     tagName: 'div',
     propertyName: 'attrs',
     children: [ [Object] ] } }
output length 0
reinspect Supplicant Daniel
reinspect Supplicant Daniel
Looking at - Supplicant Daniel
March Halvalla - to component { tag: 'div',
  key: undefined,
  attrs: { 'on-x': 'beep' },
  children: 
   [ { tag: 'div',
       key: undefined,
       attrs: [Object],
       children: [],
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Daniel',
     tagName: 'div',
     propertyName: 'attrs',
     children: [ [Object] ] } }
Constructor name Object
Tagname of March component type object div
Looking at - All Done! We close bag now

Looking at - Supplicant Daniel
March Teacup Supplicant Daniel
CELL! { tag: 'div',
  key: undefined,
  attrs: { 'on-x': 'beep' },
  children: 
   [ { tag: 'div',
       key: undefined,
       attrs: [Object],
       children: [],
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Daniel',
     tagName: 'div',
     propertyName: 'attrs',
     children: [ [Object] ] } }
Teacup::tag Typeof props to render object
Teacup::tag early result <div on-x="beep">
Looking at - Supplicant Karen
March Teacup Supplicant Karen
CELL! { tag: 'div',
  key: undefined,
  attrs: { 'on-y': 'boop' },
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Karen',
     tagName: 'div',
     propertyName: 'attrs',
     children: [] } }
Teacup::tag Typeof props to render object
Teacup::tag early result <div on-y="boop">
Looking at - All Done! We close bag now

Final Render 
Teacup::tag final result <div on-y="boop"></div>
shipping <div on-y="boop"></div>
output length 0
Looking at - All Done! We close bag now

Final Render <div on-y="boop"></div>
Teacup::tag final result <div on-x="beep"><div on-y="boop"></div></div>
shipping <div on-x="beep"><div on-y="boop"></div></div>
output length 0
Looking at - All Done! We close bag now

Final Render <div on-x="beep"><div on-y="boop"></div></div>
      ✓ renders

  coffeekup.org example
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
RENDERABLE Called 
doctype request 5
and it is...  { '5': '<!DOCTYPE html>',
  default: '<!DOCTYPE html>',
  html: '<!DOCTYPE html>',
  xml: '<?xml version="1.0" encoding="utf-8" ?>',
  transitional: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">',
  strict: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">',
  frameset: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">',
  '1.1': '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">',
  basic: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML Basic 1.1//EN" "http://www.w3.org/TR/xhtml-basic/xhtml-basic11.dtd">',
  mobile: '<!DOCTYPE html PUBLIC "-//WAPFORUM//DTD XHTML Mobile 1.2//EN" "http://www.openmobilealliance.org/tech/DTD/xhtml-mobile12.dtd">',
  ce: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "ce-html-1.0-transitional.dtd">' }
shipping { tag: '<',
  key: undefined,
  attrs: undefined,
  children: '<!DOCTYPE html>',
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false }
output length 0
Looking at - some anonymous bozo function () {
          head(function() {
            meta({
              charset: 'utf-8'
            });
            title((x.title || 'Untitled') + " | My awesome website");
            if (typeof desc !== "undefined" && desc !== null) {
              meta({
                name: 'description',
                content: desc
              });
            }
            link({
              rel: 'stylesheet',
              href: '/stylesheets/app.css'
            });
            style('body {font-family: sans-serif}\nheader, nav, section, footer {display: block}');
            return script({
              src: '/javascripts/jquery.js'
            });
          });
          return body(function() {
            header(function() {
              h1(x.title || 'Untitled');
              return nav(function() {
                return ul(function() {
                  if (path !== '/') {
                    li(function() {
                      return a({
                        href: '/'
                      }, 'Home');
                    });
                  }
                  li(function() {
                    return a({
                      href: '/chunky'
                    }, 'Bacon!');
                  });
                  switch (user.role) {
                    case 'owner':
                    case 'admin':
                      return li(function() {
                        return a({
                          href: '/admin'
                        }, 'Secret Stuff');
                      });
                    case 'vip':
                      return li(function() {
                        return a({
                          href: '/vip'
                        }, 'Exclusive Stuff');
                      });
                    default:
                      return li(function() {
                        return a({
                          href: '/commoners'
                        }, 'Just Stuff');
                      });
                  }
                });
              });
            });
            section(function() {
              var i, j, ref1, results;
              h2("Let's count to " + max + ":");
              results = [];
              for (i = j = 1, ref1 = max; 1 <= ref1 ? j <= ref1 : j >= ref1; i = 1 <= ref1 ? ++j : --j) {
                results.push(p(i));
              }
              return results;
            });
            return footer(function() {
              return p(shoutify('bye'));
            });
          });
        }
March Halvalla - to component function () {
          head(function() {
            meta({
              charset: 'utf-8'
            });
            title((x.title || 'Untitled') + " | My awesome website");
            if (typeof desc !== "undefined" && desc !== null) {
              meta({
                name: 'description',
                content: desc
              });
            }
            link({
              rel: 'stylesheet',
              href: '/stylesheets/app.css'
            });
            style('body {font-family: sans-serif}\nheader, nav, section, footer {display: block}');
            return script({
              src: '/javascripts/jquery.js'
            });
          });
          return body(function() {
            header(function() {
              h1(x.title || 'Untitled');
              return nav(function() {
                return ul(function() {
                  if (path !== '/') {
                    li(function() {
                      return a({
                        href: '/'
                      }, 'Home');
                    });
                  }
                  li(function() {
                    return a({
                      href: '/chunky'
                    }, 'Bacon!');
                  });
                  switch (user.role) {
                    case 'owner':
                    case 'admin':
                      return li(function() {
                        return a({
                          href: '/admin'
                        }, 'Secret Stuff');
                      });
                    case 'vip':
                      return li(function() {
                        return a({
                          href: '/vip'
                        }, 'Exclusive Stuff');
                      });
                    default:
                      return li(function() {
                        return a({
                          href: '/commoners'
                        }, 'Just Stuff');
                      });
                  }
                });
              });
            });
            section(function() {
              var i, j, ref1, results;
              h2("Let's count to " + max + ":");
              results = [];
              for (i = j = 1, ref1 = max; 1 <= ref1 ? j <= ref1 : j >= ref1; i = 1 <= ref1 ? ++j : --j) {
                results.push(p(i));
              }
              return results;
            });
            return footer(function() {
              return p(shoutify('bye'));
            });
          });
        }
Constructor name Function
Looking at - some anonymous bozo function () {
            meta({
              charset: 'utf-8'
            });
            title((x.title || 'Untitled') + " | My awesome website");
            if (typeof desc !== "undefined" && desc !== null) {
              meta({
                name: 'description',
                content: desc
              });
            }
            link({
              rel: 'stylesheet',
              href: '/stylesheets/app.css'
            });
            style('body {font-family: sans-serif}\nheader, nav, section, footer {display: block}');
            return script({
              src: '/javascripts/jquery.js'
            });
          }
March Halvalla - to component function () {
            meta({
              charset: 'utf-8'
            });
            title((x.title || 'Untitled') + " | My awesome website");
            if (typeof desc !== "undefined" && desc !== null) {
              meta({
                name: 'description',
                content: desc
              });
            }
            link({
              rel: 'stylesheet',
              href: '/stylesheets/app.css'
            });
            style('body {font-family: sans-serif}\nheader, nav, section, footer {display: block}');
            return script({
              src: '/javascripts/jquery.js'
            });
          }
Constructor name Function
shipping { tag: 'meta',
  key: undefined,
  attrs: { charset: 'utf-8' },
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Nancy',
     tagName: 'meta',
     propertyName: 'attrs',
     children: [] } }
output length 0
Looking at - some anonymous bozo Foo | My awesome website
March Halvalla - to component [String: 'Foo | My awesome website']
Constructor name String
shipping [String: 'Foo | My awesome website']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'title',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: 'Foo | My awesome website',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Matthew',
     tagName: 'title',
     propertyName: 'attrs',
     children: undefined } }
output length 1
shipping { tag: 'link',
  key: undefined,
  attrs: { rel: 'stylesheet', href: '/stylesheets/app.css' },
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Betty',
     tagName: 'link',
     propertyName: 'attrs',
     children: [] } }
output length 2
Looking at - some anonymous bozo body {font-family: sans-serif}
header, nav, section, footer {display: block}
March Halvalla - to component [String: 'body {font-family: sans-serif}\nheader, nav, section, footer {display: block}']
Constructor name String
shipping [String: 'body {font-family: sans-serif}\nheader, nav, section, footer {display: block}']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'style',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: 'body {font-family: sans-serif}\nheader, nav, section, footer {display: block}',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Anthony',
     tagName: 'style',
     propertyName: 'attrs',
     children: undefined } }
output length 3
shipping { tag: 'script',
  key: undefined,
  attrs: { src: '/javascripts/jquery.js' },
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Lisa',
     tagName: 'script',
     propertyName: 'attrs',
     children: [] } }
output length 4
reinspect Supplicant Lisa
reinspect Supplicant Lisa
Looking at - Supplicant Lisa
March Halvalla - to component { tag: 'script',
  key: undefined,
  attrs: { src: '/javascripts/jquery.js' },
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Lisa',
     tagName: 'script',
     propertyName: 'attrs',
     children: [] } }
Constructor name Object
Tagname of March component type object script
Looking at - All Done! We close bag now

shipping { tag: 'head',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: 'meta',
       key: undefined,
       attrs: [Object],
       children: [],
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'title',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: 'Foo | My awesome website',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'link',
       key: undefined,
       attrs: [Object],
       children: [],
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'style',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: 'body {font-family: sans-serif}\nheader, nav, section, footer {display: block}',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'script',
       key: undefined,
       attrs: [Object],
       children: [],
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Donald',
     tagName: 'head',
     propertyName: 'attrs',
     children: [ [Object], [Object], [Object], [Object], [Object] ] } }
output length 0
Looking at - some anonymous bozo function () {
            header(function() {
              h1(x.title || 'Untitled');
              return nav(function() {
                return ul(function() {
                  if (path !== '/') {
                    li(function() {
                      return a({
                        href: '/'
                      }, 'Home');
                    });
                  }
                  li(function() {
                    return a({
                      href: '/chunky'
                    }, 'Bacon!');
                  });
                  switch (user.role) {
                    case 'owner':
                    case 'admin':
                      return li(function() {
                        return a({
                          href: '/admin'
                        }, 'Secret Stuff');
                      });
                    case 'vip':
                      return li(function() {
                        return a({
                          href: '/vip'
                        }, 'Exclusive Stuff');
                      });
                    default:
                      return li(function() {
                        return a({
                          href: '/commoners'
                        }, 'Just Stuff');
                      });
                  }
                });
              });
            });
            section(function() {
              var i, j, ref1, results;
              h2("Let's count to " + max + ":");
              results = [];
              for (i = j = 1, ref1 = max; 1 <= ref1 ? j <= ref1 : j >= ref1; i = 1 <= ref1 ? ++j : --j) {
                results.push(p(i));
              }
              return results;
            });
            return footer(function() {
              return p(shoutify('bye'));
            });
          }
March Halvalla - to component function () {
            header(function() {
              h1(x.title || 'Untitled');
              return nav(function() {
                return ul(function() {
                  if (path !== '/') {
                    li(function() {
                      return a({
                        href: '/'
                      }, 'Home');
                    });
                  }
                  li(function() {
                    return a({
                      href: '/chunky'
                    }, 'Bacon!');
                  });
                  switch (user.role) {
                    case 'owner':
                    case 'admin':
                      return li(function() {
                        return a({
                          href: '/admin'
                        }, 'Secret Stuff');
                      });
                    case 'vip':
                      return li(function() {
                        return a({
                          href: '/vip'
                        }, 'Exclusive Stuff');
                      });
                    default:
                      return li(function() {
                        return a({
                          href: '/commoners'
                        }, 'Just Stuff');
                      });
                  }
                });
              });
            });
            section(function() {
              var i, j, ref1, results;
              h2("Let's count to " + max + ":");
              results = [];
              for (i = j = 1, ref1 = max; 1 <= ref1 ? j <= ref1 : j >= ref1; i = 1 <= ref1 ? ++j : --j) {
                results.push(p(i));
              }
              return results;
            });
            return footer(function() {
              return p(shoutify('bye'));
            });
          }
Constructor name Function
Looking at - some anonymous bozo function () {
              h1(x.title || 'Untitled');
              return nav(function() {
                return ul(function() {
                  if (path !== '/') {
                    li(function() {
                      return a({
                        href: '/'
                      }, 'Home');
                    });
                  }
                  li(function() {
                    return a({
                      href: '/chunky'
                    }, 'Bacon!');
                  });
                  switch (user.role) {
                    case 'owner':
                    case 'admin':
                      return li(function() {
                        return a({
                          href: '/admin'
                        }, 'Secret Stuff');
                      });
                    case 'vip':
                      return li(function() {
                        return a({
                          href: '/vip'
                        }, 'Exclusive Stuff');
                      });
                    default:
                      return li(function() {
                        return a({
                          href: '/commoners'
                        }, 'Just Stuff');
                      });
                  }
                });
              });
            }
March Halvalla - to component function () {
              h1(x.title || 'Untitled');
              return nav(function() {
                return ul(function() {
                  if (path !== '/') {
                    li(function() {
                      return a({
                        href: '/'
                      }, 'Home');
                    });
                  }
                  li(function() {
                    return a({
                      href: '/chunky'
                    }, 'Bacon!');
                  });
                  switch (user.role) {
                    case 'owner':
                    case 'admin':
                      return li(function() {
                        return a({
                          href: '/admin'
                        }, 'Secret Stuff');
                      });
                    case 'vip':
                      return li(function() {
                        return a({
                          href: '/vip'
                        }, 'Exclusive Stuff');
                      });
                    default:
                      return li(function() {
                        return a({
                          href: '/commoners'
                        }, 'Just Stuff');
                      });
                  }
                });
              });
            }
Constructor name Function
Looking at - some anonymous bozo Foo
March Halvalla - to component [String: 'Foo']
Constructor name String
shipping [String: 'Foo']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'h1',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: 'Foo',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Dorothy',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
output length 0
Looking at - some anonymous bozo function () {
                return ul(function() {
                  if (path !== '/') {
                    li(function() {
                      return a({
                        href: '/'
                      }, 'Home');
                    });
                  }
                  li(function() {
                    return a({
                      href: '/chunky'
                    }, 'Bacon!');
                  });
                  switch (user.role) {
                    case 'owner':
                    case 'admin':
                      return li(function() {
                        return a({
                          href: '/admin'
                        }, 'Secret Stuff');
                      });
                    case 'vip':
                      return li(function() {
                        return a({
                          href: '/vip'
                        }, 'Exclusive Stuff');
                      });
                    default:
                      return li(function() {
                        return a({
                          href: '/commoners'
                        }, 'Just Stuff');
                      });
                  }
                });
              }
March Halvalla - to component function () {
                return ul(function() {
                  if (path !== '/') {
                    li(function() {
                      return a({
                        href: '/'
                      }, 'Home');
                    });
                  }
                  li(function() {
                    return a({
                      href: '/chunky'
                    }, 'Bacon!');
                  });
                  switch (user.role) {
                    case 'owner':
                    case 'admin':
                      return li(function() {
                        return a({
                          href: '/admin'
                        }, 'Secret Stuff');
                      });
                    case 'vip':
                      return li(function() {
                        return a({
                          href: '/vip'
                        }, 'Exclusive Stuff');
                      });
                    default:
                      return li(function() {
                        return a({
                          href: '/commoners'
                        }, 'Just Stuff');
                      });
                  }
                });
              }
Constructor name Function
Looking at - some anonymous bozo function () {
                  if (path !== '/') {
                    li(function() {
                      return a({
                        href: '/'
                      }, 'Home');
                    });
                  }
                  li(function() {
                    return a({
                      href: '/chunky'
                    }, 'Bacon!');
                  });
                  switch (user.role) {
                    case 'owner':
                    case 'admin':
                      return li(function() {
                        return a({
                          href: '/admin'
                        }, 'Secret Stuff');
                      });
                    case 'vip':
                      return li(function() {
                        return a({
                          href: '/vip'
                        }, 'Exclusive Stuff');
                      });
                    default:
                      return li(function() {
                        return a({
                          href: '/commoners'
                        }, 'Just Stuff');
                      });
                  }
                }
March Halvalla - to component function () {
                  if (path !== '/') {
                    li(function() {
                      return a({
                        href: '/'
                      }, 'Home');
                    });
                  }
                  li(function() {
                    return a({
                      href: '/chunky'
                    }, 'Bacon!');
                  });
                  switch (user.role) {
                    case 'owner':
                    case 'admin':
                      return li(function() {
                        return a({
                          href: '/admin'
                        }, 'Secret Stuff');
                      });
                    case 'vip':
                      return li(function() {
                        return a({
                          href: '/vip'
                        }, 'Exclusive Stuff');
                      });
                    default:
                      return li(function() {
                        return a({
                          href: '/commoners'
                        }, 'Just Stuff');
                      });
                  }
                }
Constructor name Function
Looking at - some anonymous bozo function () {
                      return a({
                        href: '/'
                      }, 'Home');
                    }
March Halvalla - to component function () {
                      return a({
                        href: '/'
                      }, 'Home');
                    }
Constructor name Function
Looking at - some anonymous bozo Home
March Halvalla - to component [String: 'Home']
Constructor name String
shipping [String: 'Home']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'a',
  key: undefined,
  attrs: { href: '/' },
  children: undefined,
  text: 'Home',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Mark',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Supplicant Mark
reinspect Supplicant Mark
Looking at - Supplicant Mark
March Halvalla - to component { tag: 'a',
  key: undefined,
  attrs: { href: '/' },
  children: undefined,
  text: 'Home',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Mark',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Object
Tagname of March component type object a
Looking at - All Done! We close bag now

shipping { tag: 'li',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: 'a',
       key: undefined,
       attrs: [Object],
       children: undefined,
       text: 'Home',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Sandra',
     tagName: 'li',
     propertyName: 'attrs',
     children: [ [Object] ] } }
output length 0
Looking at - some anonymous bozo function () {
                    return a({
                      href: '/chunky'
                    }, 'Bacon!');
                  }
March Halvalla - to component function () {
                    return a({
                      href: '/chunky'
                    }, 'Bacon!');
                  }
Constructor name Function
Looking at - some anonymous bozo Bacon!
March Halvalla - to component [String: 'Bacon!']
Constructor name String
shipping [String: 'Bacon!']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'a',
  key: undefined,
  attrs: { href: '/chunky' },
  children: undefined,
  text: 'Bacon!',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Paul',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Supplicant Paul
reinspect Supplicant Paul
Looking at - Supplicant Paul
March Halvalla - to component { tag: 'a',
  key: undefined,
  attrs: { href: '/chunky' },
  children: undefined,
  text: 'Bacon!',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Paul',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Object
Tagname of March component type object a
Looking at - All Done! We close bag now

shipping { tag: 'li',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: 'a',
       key: undefined,
       attrs: [Object],
       children: undefined,
       text: 'Bacon!',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Ashley',
     tagName: 'li',
     propertyName: 'attrs',
     children: [ [Object] ] } }
output length 1
Looking at - some anonymous bozo function () {
                        return a({
                          href: '/commoners'
                        }, 'Just Stuff');
                      }
March Halvalla - to component function () {
                        return a({
                          href: '/commoners'
                        }, 'Just Stuff');
                      }
Constructor name Function
Looking at - some anonymous bozo Just Stuff
March Halvalla - to component [String: 'Just Stuff']
Constructor name String
shipping [String: 'Just Stuff']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'a',
  key: undefined,
  attrs: { href: '/commoners' },
  children: undefined,
  text: 'Just Stuff',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Steven',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Supplicant Steven
reinspect Supplicant Steven
Looking at - Supplicant Steven
March Halvalla - to component { tag: 'a',
  key: undefined,
  attrs: { href: '/commoners' },
  children: undefined,
  text: 'Just Stuff',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Steven',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Object
Tagname of March component type object a
Looking at - All Done! We close bag now

shipping { tag: 'li',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: 'a',
       key: undefined,
       attrs: [Object],
       children: undefined,
       text: 'Just Stuff',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Kimberly',
     tagName: 'li',
     propertyName: 'attrs',
     children: [ [Object] ] } }
output length 2
reinspect Supplicant Kimberly
reinspect Supplicant Kimberly
Looking at - Supplicant Kimberly
March Halvalla - to component { tag: 'li',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: 'a',
       key: undefined,
       attrs: [Object],
       children: undefined,
       text: 'Just Stuff',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Kimberly',
     tagName: 'li',
     propertyName: 'attrs',
     children: [ [Object] ] } }
Constructor name Object
Tagname of March component type object li
Looking at - All Done! We close bag now

shipping { tag: 'ul',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: 'li',
       key: undefined,
       attrs: undefined,
       children: [Object],
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'li',
       key: undefined,
       attrs: undefined,
       children: [Object],
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'li',
       key: undefined,
       attrs: undefined,
       children: [Object],
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Andrew',
     tagName: 'ul',
     propertyName: 'attrs',
     children: [ [Object], [Object], [Object] ] } }
output length 0
reinspect Supplicant Andrew
reinspect Supplicant Andrew
Looking at - Supplicant Andrew
March Halvalla - to component { tag: 'ul',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: 'li',
       key: undefined,
       attrs: undefined,
       children: [Object],
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'li',
       key: undefined,
       attrs: undefined,
       children: [Object],
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'li',
       key: undefined,
       attrs: undefined,
       children: [Object],
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Andrew',
     tagName: 'ul',
     propertyName: 'attrs',
     children: [ [Object], [Object], [Object] ] } }
Constructor name Object
Tagname of March component type object ul
Looking at - All Done! We close bag now

shipping { tag: 'nav',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: 'ul',
       key: undefined,
       attrs: undefined,
       children: [Object],
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Donna',
     tagName: 'nav',
     propertyName: 'attrs',
     children: [ [Object] ] } }
output length 1
reinspect Supplicant Donna
reinspect Supplicant Donna
Looking at - Supplicant Donna
March Halvalla - to component { tag: 'nav',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: 'ul',
       key: undefined,
       attrs: undefined,
       children: [Object],
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Donna',
     tagName: 'nav',
     propertyName: 'attrs',
     children: [ [Object] ] } }
Constructor name Object
Tagname of March component type object nav
Looking at - All Done! We close bag now

shipping { tag: 'header',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: 'h1',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: 'Foo',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'nav',
       key: undefined,
       attrs: undefined,
       children: [Object],
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Kenneth',
     tagName: 'header',
     propertyName: 'attrs',
     children: [ [Object], [Object] ] } }
output length 0
Looking at - some anonymous bozo function () {
              var i, j, ref1, results;
              h2("Let's count to " + max + ":");
              results = [];
              for (i = j = 1, ref1 = max; 1 <= ref1 ? j <= ref1 : j >= ref1; i = 1 <= ref1 ? ++j : --j) {
                results.push(p(i));
              }
              return results;
            }
March Halvalla - to component function () {
              var i, j, ref1, results;
              h2("Let's count to " + max + ":");
              results = [];
              for (i = j = 1, ref1 = max; 1 <= ref1 ? j <= ref1 : j >= ref1; i = 1 <= ref1 ? ++j : --j) {
                results.push(p(i));
              }
              return results;
            }
Constructor name Function
Looking at - some anonymous bozo Let's count to 12:
March Halvalla - to component [String: 'Let\'s count to 12:']
Constructor name String
shipping [String: 'Let\'s count to 12:']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'h2',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: 'Let\'s count to 12:',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Carol',
     tagName: 'h2',
     propertyName: 'attrs',
     children: undefined } }
output length 0
Looking at - some anonymous bozo 1
March Halvalla - to component [String: '1']
Constructor name String
shipping [String: '1']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '1',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant George',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 1
Looking at - some anonymous bozo 2
March Halvalla - to component [String: '2']
Constructor name String
shipping [String: '2']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '2',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Michelle',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 2
Looking at - some anonymous bozo 3
March Halvalla - to component [String: '3']
Constructor name String
shipping [String: '3']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '3',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Joshua',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 3
Looking at - some anonymous bozo 4
March Halvalla - to component [String: '4']
Constructor name String
shipping [String: '4']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '4',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Emily',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 4
Looking at - some anonymous bozo 5
March Halvalla - to component [String: '5']
Constructor name String
shipping [String: '5']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '5',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Kevin',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 5
Looking at - some anonymous bozo 6
March Halvalla - to component [String: '6']
Constructor name String
shipping [String: '6']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '6',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Amanda',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 6
Looking at - some anonymous bozo 7
March Halvalla - to component [String: '7']
Constructor name String
shipping [String: '7']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '7',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Brian',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 7
Looking at - some anonymous bozo 8
March Halvalla - to component [String: '8']
Constructor name String
shipping [String: '8']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '8',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Helen',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 8
Looking at - some anonymous bozo 9
March Halvalla - to component [String: '9']
Constructor name String
shipping [String: '9']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '9',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Edward',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 9
Looking at - some anonymous bozo 10
March Halvalla - to component [String: '10']
Constructor name String
shipping [String: '10']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '10',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Melissa',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 10
Looking at - some anonymous bozo 11
March Halvalla - to component [String: '11']
Constructor name String
shipping [String: '11']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '11',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Ronald',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 11
Looking at - some anonymous bozo 12
March Halvalla - to component [String: '12']
Constructor name String
shipping [String: '12']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '12',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Deborah',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 12
reinspect some anonymous bozo [object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object]
reinspect Supplicant Deborah
reinspect Supplicant Ronald
reinspect Supplicant Melissa
reinspect Supplicant Edward
reinspect Supplicant Helen
reinspect Supplicant Brian
reinspect Supplicant Amanda
reinspect Supplicant Kevin
reinspect Supplicant Emily
reinspect Supplicant Joshua
reinspect Supplicant Michelle
reinspect Supplicant George
Looking at - Supplicant George
March Halvalla - to component { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '1',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant George',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Object
Tagname of March component type object p
shipping { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '1',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant George',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 13
Looking at - Supplicant Michelle
March Halvalla - to component { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '2',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Michelle',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Object
Tagname of March component type object p
shipping { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '2',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Michelle',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 14
Looking at - Supplicant Joshua
March Halvalla - to component { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '3',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Joshua',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Object
Tagname of March component type object p
shipping { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '3',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Joshua',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 15
Looking at - Supplicant Emily
March Halvalla - to component { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '4',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Emily',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Object
Tagname of March component type object p
shipping { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '4',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Emily',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 16
Looking at - Supplicant Kevin
March Halvalla - to component { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '5',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Kevin',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Object
Tagname of March component type object p
shipping { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '5',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Kevin',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 17
Looking at - Supplicant Amanda
March Halvalla - to component { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '6',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Amanda',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Object
Tagname of March component type object p
shipping { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '6',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Amanda',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 18
Looking at - Supplicant Brian
March Halvalla - to component { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '7',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Brian',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Object
Tagname of March component type object p
shipping { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '7',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Brian',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 19
Looking at - Supplicant Helen
March Halvalla - to component { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '8',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Helen',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Object
Tagname of March component type object p
shipping { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '8',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Helen',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 20
Looking at - Supplicant Edward
March Halvalla - to component { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '9',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Edward',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Object
Tagname of March component type object p
shipping { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '9',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Edward',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 21
Looking at - Supplicant Melissa
March Halvalla - to component { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '10',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Melissa',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Object
Tagname of March component type object p
shipping { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '10',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Melissa',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 22
Looking at - Supplicant Ronald
March Halvalla - to component { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '11',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Ronald',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Object
Tagname of March component type object p
shipping { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '11',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Ronald',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 23
Looking at - Supplicant Deborah
March Halvalla - to component { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '12',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Deborah',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Object
Tagname of March component type object p
shipping { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '12',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Deborah',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 24
Looking at - All Done! We close bag now

shipping { tag: 'section',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: 'h2',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: 'Let\'s count to 12:',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '1',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '2',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '3',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '4',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '5',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '6',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '7',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '8',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '9',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '10',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '11',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '12',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '1',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '2',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '3',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '4',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '5',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '6',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '7',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '8',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '9',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '10',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '11',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '12',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Timothy',
     tagName: 'section',
     propertyName: 'attrs',
     children: 
      [ [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object] ] } }
output length 1
Looking at - some anonymous bozo function () {
              return p(shoutify('bye'));
            }
March Halvalla - to component function () {
              return p(shoutify('bye'));
            }
Constructor name Function
Looking at - some anonymous bozo BYE!
March Halvalla - to component [String: 'BYE!']
Constructor name String
shipping [String: 'BYE!']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: 'BYE!',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Stephanie',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Supplicant Stephanie
reinspect Supplicant Stephanie
Looking at - Supplicant Stephanie
March Halvalla - to component { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: 'BYE!',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Stephanie',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Object
Tagname of March component type object p
Looking at - All Done! We close bag now

shipping { tag: 'footer',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: 'BYE!',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Jason',
     tagName: 'footer',
     propertyName: 'attrs',
     children: [ [Object] ] } }
output length 2
reinspect Supplicant Jason
reinspect Supplicant Jason
Looking at - Supplicant Jason
March Halvalla - to component { tag: 'footer',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: 'BYE!',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Jason',
     tagName: 'footer',
     propertyName: 'attrs',
     children: [ [Object] ] } }
Constructor name Object
Tagname of March component type object footer
Looking at - All Done! We close bag now

shipping { tag: 'body',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: 'header',
       key: undefined,
       attrs: undefined,
       children: [Object],
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'section',
       key: undefined,
       attrs: undefined,
       children: [Object],
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'footer',
       key: undefined,
       attrs: undefined,
       children: [Object],
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Laura',
     tagName: 'body',
     propertyName: 'attrs',
     children: [ [Object], [Object], [Object] ] } }
output length 1
reinspect Supplicant Laura
reinspect Supplicant Laura
Looking at - Supplicant Laura
March Halvalla - to component { tag: 'body',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: 'header',
       key: undefined,
       attrs: undefined,
       children: [Object],
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'section',
       key: undefined,
       attrs: undefined,
       children: [Object],
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'footer',
       key: undefined,
       attrs: undefined,
       children: [Object],
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Laura',
     tagName: 'body',
     propertyName: 'attrs',
     children: [ [Object], [Object], [Object] ] } }
Constructor name Object
Tagname of March component type object body
Looking at - All Done! We close bag now

shipping { tag: 'html',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: 'head',
       key: undefined,
       attrs: undefined,
       children: [Object],
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'body',
       key: undefined,
       attrs: undefined,
       children: [Object],
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Jeffrey',
     tagName: 'html',
     propertyName: 'attrs',
     children: [ [Object], [Object] ] } }
output length 1
reinspect Supplicant Jeffrey
reinspect Supplicant Jeffrey
Looking at - Supplicant Jeffrey
March Halvalla - to component { tag: 'html',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: 'head',
       key: undefined,
       attrs: undefined,
       children: [Object],
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'body',
       key: undefined,
       attrs: undefined,
       children: [Object],
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Jeffrey',
     tagName: 'html',
     propertyName: 'attrs',
     children: [ [Object], [Object] ] } }
Constructor name Object
Tagname of March component type object html
Looking at - All Done! We close bag now

Looking at - some anonymous bozo [object Object]
March Teacup [object Object]
shipping <!DOCTYPE html>
output length 0
Looking at - All Done! We close bag now

Final Render <!DOCTYPE html>
Looking at - Supplicant Jeffrey
March Teacup Supplicant Jeffrey
CELL! { tag: 'html',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: 'head',
       key: undefined,
       attrs: undefined,
       children: [Object],
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'body',
       key: undefined,
       attrs: undefined,
       children: [Object],
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Jeffrey',
     tagName: 'html',
     propertyName: 'attrs',
     children: [ [Object], [Object] ] } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <html>
Looking at - Supplicant Donald
March Teacup Supplicant Donald
CELL! { tag: 'head',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: 'meta',
       key: undefined,
       attrs: [Object],
       children: [],
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'title',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: 'Foo | My awesome website',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'link',
       key: undefined,
       attrs: [Object],
       children: [],
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'style',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: 'body {font-family: sans-serif}\nheader, nav, section, footer {display: block}',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'script',
       key: undefined,
       attrs: [Object],
       children: [],
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Donald',
     tagName: 'head',
     propertyName: 'attrs',
     children: [ [Object], [Object], [Object], [Object], [Object] ] } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <head>
Looking at - Supplicant Nancy
March Teacup Supplicant Nancy
shipping <meta charset="utf-8" />
output length 0
Looking at - All Done! We close bag now

Final Render <meta charset="utf-8" />
Looking at - Supplicant Matthew
March Teacup Supplicant Matthew
CELL! { tag: 'title',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: 'Foo | My awesome website',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Matthew',
     tagName: 'title',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <title>
Teacup::tag final result <title>Foo | My awesome website</title>
shipping <title>Foo | My awesome website</title>
output length 0
Looking at - All Done! We close bag now

Final Render <title>Foo | My awesome website</title>
Looking at - Supplicant Betty
March Teacup Supplicant Betty
shipping <link rel="stylesheet" href="/stylesheets/app.css" />
output length 0
Looking at - All Done! We close bag now

Final Render <link rel="stylesheet" href="/stylesheets/app.css" />
Looking at - Supplicant Anthony
March Teacup Supplicant Anthony
shipping <style>undefined</style>
output length 0
Looking at - All Done! We close bag now

Final Render <style>undefined</style>
Looking at - Supplicant Lisa
March Teacup Supplicant Lisa
shipping <script src="/javascripts/jquery.js"></script>
output length 0
Looking at - All Done! We close bag now

Final Render <script src="/javascripts/jquery.js"></script>
Teacup::tag final result <head><meta charset="utf-8" /><title>Foo | My awesome website</title><link rel="stylesheet" href="/stylesheets/app.css" /><style>undefined</style><script src="/javascripts/jquery.js"></script></head>
shipping <head><meta charset="utf-8" /><title>Foo | My awesome website</title><link rel="stylesheet" href="/stylesheets/app.css" /><style>undefined</style><script src="/javascripts/jquery.js"></script></head>
output length 0
Looking at - All Done! We close bag now

Final Render <head><meta charset="utf-8" /><title>Foo | My awesome website</title><link rel="stylesheet" href="/stylesheets/app.css" /><style>undefined</style><script src="/javascripts/jquery.js"></script></head>
Looking at - Supplicant Laura
March Teacup Supplicant Laura
CELL! { tag: 'body',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: 'header',
       key: undefined,
       attrs: undefined,
       children: [Object],
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'section',
       key: undefined,
       attrs: undefined,
       children: [Object],
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'footer',
       key: undefined,
       attrs: undefined,
       children: [Object],
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Laura',
     tagName: 'body',
     propertyName: 'attrs',
     children: [ [Object], [Object], [Object] ] } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <body>
Looking at - Supplicant Kenneth
March Teacup Supplicant Kenneth
CELL! { tag: 'header',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: 'h1',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: 'Foo',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'nav',
       key: undefined,
       attrs: undefined,
       children: [Object],
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Kenneth',
     tagName: 'header',
     propertyName: 'attrs',
     children: [ [Object], [Object] ] } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <header>
Looking at - Supplicant Dorothy
March Teacup Supplicant Dorothy
CELL! { tag: 'h1',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: 'Foo',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Dorothy',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <h1>
Teacup::tag final result <h1>Foo</h1>
shipping <h1>Foo</h1>
output length 0
Looking at - All Done! We close bag now

Final Render <h1>Foo</h1>
Looking at - Supplicant Donna
March Teacup Supplicant Donna
CELL! { tag: 'nav',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: 'ul',
       key: undefined,
       attrs: undefined,
       children: [Object],
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Donna',
     tagName: 'nav',
     propertyName: 'attrs',
     children: [ [Object] ] } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <nav>
Looking at - Supplicant Andrew
March Teacup Supplicant Andrew
CELL! { tag: 'ul',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: 'li',
       key: undefined,
       attrs: undefined,
       children: [Object],
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'li',
       key: undefined,
       attrs: undefined,
       children: [Object],
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'li',
       key: undefined,
       attrs: undefined,
       children: [Object],
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Andrew',
     tagName: 'ul',
     propertyName: 'attrs',
     children: [ [Object], [Object], [Object] ] } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <ul>
Looking at - Supplicant Sandra
March Teacup Supplicant Sandra
CELL! { tag: 'li',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: 'a',
       key: undefined,
       attrs: [Object],
       children: undefined,
       text: 'Home',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Sandra',
     tagName: 'li',
     propertyName: 'attrs',
     children: [ [Object] ] } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <li>
Looking at - Supplicant Mark
March Teacup Supplicant Mark
CELL! { tag: 'a',
  key: undefined,
  attrs: { href: '/' },
  children: undefined,
  text: 'Home',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Mark',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <a href="/">
Teacup::tag final result <a href="/">Home</a>
shipping <a href="/">Home</a>
output length 0
Looking at - All Done! We close bag now

Final Render <a href="/">Home</a>
Teacup::tag final result <li><a href="/">Home</a></li>
shipping <li><a href="/">Home</a></li>
output length 0
Looking at - All Done! We close bag now

Final Render <li><a href="/">Home</a></li>
Looking at - Supplicant Ashley
March Teacup Supplicant Ashley
CELL! { tag: 'li',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: 'a',
       key: undefined,
       attrs: [Object],
       children: undefined,
       text: 'Bacon!',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Ashley',
     tagName: 'li',
     propertyName: 'attrs',
     children: [ [Object] ] } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <li>
Looking at - Supplicant Paul
March Teacup Supplicant Paul
CELL! { tag: 'a',
  key: undefined,
  attrs: { href: '/chunky' },
  children: undefined,
  text: 'Bacon!',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Paul',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <a href="/chunky">
Teacup::tag final result <a href="/chunky">Bacon!</a>
shipping <a href="/chunky">Bacon!</a>
output length 0
Looking at - All Done! We close bag now

Final Render <a href="/chunky">Bacon!</a>
Teacup::tag final result <li><a href="/chunky">Bacon!</a></li>
shipping <li><a href="/chunky">Bacon!</a></li>
output length 0
Looking at - All Done! We close bag now

Final Render <li><a href="/chunky">Bacon!</a></li>
Looking at - Supplicant Kimberly
March Teacup Supplicant Kimberly
CELL! { tag: 'li',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: 'a',
       key: undefined,
       attrs: [Object],
       children: undefined,
       text: 'Just Stuff',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Kimberly',
     tagName: 'li',
     propertyName: 'attrs',
     children: [ [Object] ] } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <li>
Looking at - Supplicant Steven
March Teacup Supplicant Steven
CELL! { tag: 'a',
  key: undefined,
  attrs: { href: '/commoners' },
  children: undefined,
  text: 'Just Stuff',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Steven',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <a href="/commoners">
Teacup::tag final result <a href="/commoners">Just Stuff</a>
shipping <a href="/commoners">Just Stuff</a>
output length 0
Looking at - All Done! We close bag now

Final Render <a href="/commoners">Just Stuff</a>
Teacup::tag final result <li><a href="/commoners">Just Stuff</a></li>
shipping <li><a href="/commoners">Just Stuff</a></li>
output length 0
Looking at - All Done! We close bag now

Final Render <li><a href="/commoners">Just Stuff</a></li>
Teacup::tag final result <ul><li><a href="/">Home</a></li><li><a href="/chunky">Bacon!</a></li><li><a href="/commoners">Just Stuff</a></li></ul>
shipping <ul><li><a href="/">Home</a></li><li><a href="/chunky">Bacon!</a></li><li><a href="/commoners">Just Stuff</a></li></ul>
output length 0
Looking at - All Done! We close bag now

Final Render <ul><li><a href="/">Home</a></li><li><a href="/chunky">Bacon!</a></li><li><a href="/commoners">Just Stuff</a></li></ul>
Teacup::tag final result <nav><ul><li><a href="/">Home</a></li><li><a href="/chunky">Bacon!</a></li><li><a href="/commoners">Just Stuff</a></li></ul></nav>
shipping <nav><ul><li><a href="/">Home</a></li><li><a href="/chunky">Bacon!</a></li><li><a href="/commoners">Just Stuff</a></li></ul></nav>
output length 0
Looking at - All Done! We close bag now

Final Render <nav><ul><li><a href="/">Home</a></li><li><a href="/chunky">Bacon!</a></li><li><a href="/commoners">Just Stuff</a></li></ul></nav>
Teacup::tag final result <header><h1>Foo</h1><nav><ul><li><a href="/">Home</a></li><li><a href="/chunky">Bacon!</a></li><li><a href="/commoners">Just Stuff</a></li></ul></nav></header>
shipping <header><h1>Foo</h1><nav><ul><li><a href="/">Home</a></li><li><a href="/chunky">Bacon!</a></li><li><a href="/commoners">Just Stuff</a></li></ul></nav></header>
output length 0
Looking at - All Done! We close bag now

Final Render <header><h1>Foo</h1><nav><ul><li><a href="/">Home</a></li><li><a href="/chunky">Bacon!</a></li><li><a href="/commoners">Just Stuff</a></li></ul></nav></header>
Looking at - Supplicant Timothy
March Teacup Supplicant Timothy
CELL! { tag: 'section',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: 'h2',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: 'Let\'s count to 12:',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '1',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '2',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '3',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '4',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '5',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '6',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '7',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '8',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '9',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '10',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '11',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '12',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '1',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '2',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '3',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '4',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '5',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '6',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '7',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '8',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '9',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '10',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '11',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: '12',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Timothy',
     tagName: 'section',
     propertyName: 'attrs',
     children: 
      [ [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object] ] } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <section>
Looking at - Supplicant Carol
March Teacup Supplicant Carol
CELL! { tag: 'h2',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: 'Let\'s count to 12:',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Carol',
     tagName: 'h2',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <h2>
Teacup::tag final result <h2>Let's count to 12:</h2>
shipping <h2>Let's count to 12:</h2>
output length 0
Looking at - All Done! We close bag now

Final Render <h2>Let's count to 12:</h2>
Looking at - Supplicant George
March Teacup Supplicant George
CELL! { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '1',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant George',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <p>
Teacup::tag final result <p>1</p>
shipping <p>1</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>1</p>
Looking at - Supplicant Michelle
March Teacup Supplicant Michelle
CELL! { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '2',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Michelle',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <p>
Teacup::tag final result <p>2</p>
shipping <p>2</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>2</p>
Looking at - Supplicant Joshua
March Teacup Supplicant Joshua
CELL! { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '3',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Joshua',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <p>
Teacup::tag final result <p>3</p>
shipping <p>3</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>3</p>
Looking at - Supplicant Emily
March Teacup Supplicant Emily
CELL! { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '4',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Emily',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <p>
Teacup::tag final result <p>4</p>
shipping <p>4</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>4</p>
Looking at - Supplicant Kevin
March Teacup Supplicant Kevin
CELL! { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '5',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Kevin',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <p>
Teacup::tag final result <p>5</p>
shipping <p>5</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>5</p>
Looking at - Supplicant Amanda
March Teacup Supplicant Amanda
CELL! { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '6',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Amanda',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <p>
Teacup::tag final result <p>6</p>
shipping <p>6</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>6</p>
Looking at - Supplicant Brian
March Teacup Supplicant Brian
CELL! { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '7',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Brian',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <p>
Teacup::tag final result <p>7</p>
shipping <p>7</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>7</p>
Looking at - Supplicant Helen
March Teacup Supplicant Helen
CELL! { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '8',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Helen',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <p>
Teacup::tag final result <p>8</p>
shipping <p>8</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>8</p>
Looking at - Supplicant Edward
March Teacup Supplicant Edward
CELL! { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '9',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Edward',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <p>
Teacup::tag final result <p>9</p>
shipping <p>9</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>9</p>
Looking at - Supplicant Melissa
March Teacup Supplicant Melissa
CELL! { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '10',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Melissa',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <p>
Teacup::tag final result <p>10</p>
shipping <p>10</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>10</p>
Looking at - Supplicant Ronald
March Teacup Supplicant Ronald
CELL! { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '11',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Ronald',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <p>
Teacup::tag final result <p>11</p>
shipping <p>11</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>11</p>
Looking at - Supplicant Deborah
March Teacup Supplicant Deborah
CELL! { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '12',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Deborah',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <p>
Teacup::tag final result <p>12</p>
shipping <p>12</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>12</p>
Looking at - Supplicant George
March Teacup Supplicant George
CELL! { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '1',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant George',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <p>
Teacup::tag final result <p>1</p>
shipping <p>1</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>1</p>
Looking at - Supplicant Michelle
March Teacup Supplicant Michelle
CELL! { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '2',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Michelle',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <p>
Teacup::tag final result <p>2</p>
shipping <p>2</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>2</p>
Looking at - Supplicant Joshua
March Teacup Supplicant Joshua
CELL! { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '3',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Joshua',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <p>
Teacup::tag final result <p>3</p>
shipping <p>3</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>3</p>
Looking at - Supplicant Emily
March Teacup Supplicant Emily
CELL! { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '4',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Emily',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <p>
Teacup::tag final result <p>4</p>
shipping <p>4</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>4</p>
Looking at - Supplicant Kevin
March Teacup Supplicant Kevin
CELL! { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '5',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Kevin',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <p>
Teacup::tag final result <p>5</p>
shipping <p>5</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>5</p>
Looking at - Supplicant Amanda
March Teacup Supplicant Amanda
CELL! { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '6',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Amanda',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <p>
Teacup::tag final result <p>6</p>
shipping <p>6</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>6</p>
Looking at - Supplicant Brian
March Teacup Supplicant Brian
CELL! { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '7',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Brian',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <p>
Teacup::tag final result <p>7</p>
shipping <p>7</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>7</p>
Looking at - Supplicant Helen
March Teacup Supplicant Helen
CELL! { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '8',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Helen',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <p>
Teacup::tag final result <p>8</p>
shipping <p>8</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>8</p>
Looking at - Supplicant Edward
March Teacup Supplicant Edward
CELL! { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '9',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Edward',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <p>
Teacup::tag final result <p>9</p>
shipping <p>9</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>9</p>
Looking at - Supplicant Melissa
March Teacup Supplicant Melissa
CELL! { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '10',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Melissa',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <p>
Teacup::tag final result <p>10</p>
shipping <p>10</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>10</p>
Looking at - Supplicant Ronald
March Teacup Supplicant Ronald
CELL! { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '11',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Ronald',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <p>
Teacup::tag final result <p>11</p>
shipping <p>11</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>11</p>
Looking at - Supplicant Deborah
March Teacup Supplicant Deborah
CELL! { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '12',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Deborah',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <p>
Teacup::tag final result <p>12</p>
shipping <p>12</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>12</p>
Teacup::tag final result <section><h2>Let's count to 12:</h2><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p></section>
shipping <section><h2>Let's count to 12:</h2><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p></section>
output length 0
Looking at - All Done! We close bag now

Final Render <section><h2>Let's count to 12:</h2><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p></section>
Looking at - Supplicant Jason
March Teacup Supplicant Jason
CELL! { tag: 'footer',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: 'BYE!',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Jason',
     tagName: 'footer',
     propertyName: 'attrs',
     children: [ [Object] ] } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <footer>
Looking at - Supplicant Stephanie
March Teacup Supplicant Stephanie
CELL! { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: 'BYE!',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Stephanie',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <p>
Teacup::tag final result <p>BYE!</p>
shipping <p>BYE!</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>BYE!</p>
Teacup::tag final result <footer><p>BYE!</p></footer>
shipping <footer><p>BYE!</p></footer>
output length 0
Looking at - All Done! We close bag now

Final Render <footer><p>BYE!</p></footer>
Teacup::tag final result <body><header><h1>Foo</h1><nav><ul><li><a href="/">Home</a></li><li><a href="/chunky">Bacon!</a></li><li><a href="/commoners">Just Stuff</a></li></ul></nav></header><section><h2>Let's count to 12:</h2><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p></section><footer><p>BYE!</p></footer></body>
shipping <body><header><h1>Foo</h1><nav><ul><li><a href="/">Home</a></li><li><a href="/chunky">Bacon!</a></li><li><a href="/commoners">Just Stuff</a></li></ul></nav></header><section><h2>Let's count to 12:</h2><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p></section><footer><p>BYE!</p></footer></body>
output length 0
Looking at - All Done! We close bag now

Final Render <body><header><h1>Foo</h1><nav><ul><li><a href="/">Home</a></li><li><a href="/chunky">Bacon!</a></li><li><a href="/commoners">Just Stuff</a></li></ul></nav></header><section><h2>Let's count to 12:</h2><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p></section><footer><p>BYE!</p></footer></body>
Teacup::tag final result <html><head><meta charset="utf-8" /><title>Foo | My awesome website</title><link rel="stylesheet" href="/stylesheets/app.css" /><style>undefined</style><script src="/javascripts/jquery.js"></script></head><body><header><h1>Foo</h1><nav><ul><li><a href="/">Home</a></li><li><a href="/chunky">Bacon!</a></li><li><a href="/commoners">Just Stuff</a></li></ul></nav></header><section><h2>Let's count to 12:</h2><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p></section><footer><p>BYE!</p></footer></body></html>
shipping <html><head><meta charset="utf-8" /><title>Foo | My awesome website</title><link rel="stylesheet" href="/stylesheets/app.css" /><style>undefined</style><script src="/javascripts/jquery.js"></script></head><body><header><h1>Foo</h1><nav><ul><li><a href="/">Home</a></li><li><a href="/chunky">Bacon!</a></li><li><a href="/commoners">Just Stuff</a></li></ul></nav></header><section><h2>Let's count to 12:</h2><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p></section><footer><p>BYE!</p></footer></body></html>
output length 0
Looking at - All Done! We close bag now

Final Render <html><head><meta charset="utf-8" /><title>Foo | My awesome website</title><link rel="stylesheet" href="/stylesheets/app.css" /><style>undefined</style><script src="/javascripts/jquery.js"></script></head><body><header><h1>Foo</h1><nav><ul><li><a href="/">Home</a></li><li><a href="/chunky">Bacon!</a></li><li><a href="/commoners">Just Stuff</a></li></ul></nav></header><section><h2>Let's count to 12:</h2><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p></section><footer><p>BYE!</p></footer></body></html>
    ✓ works (88ms)

  Comments
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo Comment
March Halvalla - to component [String: 'Comment']
Constructor name String
shipping [String: 'Comment']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'comment',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: 'Comment',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Rebecca',
     tagName: 'comment',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Supplicant Rebecca
reinspect Supplicant Rebecca
Looking at - Supplicant Rebecca
March Halvalla - to component { tag: 'comment',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: 'Comment',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Rebecca',
     tagName: 'comment',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Object
Tagname of March component type object comment
Looking at - All Done! We close bag now

Looking at - Supplicant Rebecca
March Teacup Supplicant Rebecca
    1) renders HTML <!--comments-->

  CSS Selectors
    id selector
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo foo
March Halvalla - to component [String: 'foo']
Constructor name String
shipping [String: 'foo']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'div',
  key: undefined,
  attrs: { id: 'myid' },
  children: undefined,
  text: 'foo',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Ryan',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Supplicant Ryan
reinspect Supplicant Ryan
Looking at - Supplicant Ryan
March Halvalla - to component { tag: 'div',
  key: undefined,
  attrs: { id: 'myid' },
  children: undefined,
  text: 'foo',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Ryan',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Object
Tagname of March component type object div
Looking at - All Done! We close bag now

Looking at - Supplicant Ryan
March Teacup Supplicant Ryan
CELL! { tag: 'div',
  key: undefined,
  attrs: { id: 'myid' },
  children: undefined,
  text: 'foo',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Ryan',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <div id="myid">
Teacup::tag final result <div id="myid">foo</div>
shipping <div id="myid">foo</div>
output length 0
Looking at - All Done! We close bag now

Final Render <div id="myid">foo</div>
      ✓ sets the id attribute
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo #
March Halvalla - to component [String: '#']
Constructor name String
shipping [String: '#']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'div',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '#',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Sharon',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Supplicant Sharon
reinspect Supplicant Sharon
Looking at - Supplicant Sharon
March Halvalla - to component { tag: 'div',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '#',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Sharon',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Object
Tagname of March component type object div
Looking at - All Done! We close bag now

Looking at - Supplicant Sharon
March Teacup Supplicant Sharon
CELL! { tag: 'div',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '#',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Sharon',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <div>
Teacup::tag final result <div>#</div>
shipping <div>#</div>
output length 0
Looking at - All Done! We close bag now

Final Render <div>#</div>
      ✓ must be greater than length 1
    one class selector
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo foo
March Halvalla - to component [String: 'foo']
Constructor name String
shipping [String: 'foo']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'div',
  key: undefined,
  attrs: { class: undefined, className: 'myclass' },
  children: undefined,
  text: 'foo',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Gary',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Supplicant Gary
reinspect Supplicant Gary
Looking at - Supplicant Gary
March Halvalla - to component { tag: 'div',
  key: undefined,
  attrs: { class: undefined, className: 'myclass' },
  children: undefined,
  text: 'foo',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Gary',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Object
Tagname of March component type object div
Looking at - All Done! We close bag now

Looking at - Supplicant Gary
March Teacup Supplicant Gary
CELL! { tag: 'div',
  key: undefined,
  attrs: { class: undefined, className: 'myclass' },
  children: undefined,
  text: 'foo',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Gary',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <div class="myclass">
Teacup::tag final result <div class="myclass">foo</div>
shipping <div class="myclass">foo</div>
output length 0
Looking at - All Done! We close bag now

Final Render <div class="myclass">foo</div>
      ✓ adds an html class
      and a class attribute
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo foo
March Halvalla - to component [String: 'foo']
Constructor name String
shipping [String: 'foo']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'div',
  key: undefined,
  attrs: { class: undefined, className: 'myclass myattrclass' },
  children: undefined,
  text: 'foo',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Cynthia',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Supplicant Cynthia
reinspect Supplicant Cynthia
Looking at - Supplicant Cynthia
March Halvalla - to component { tag: 'div',
  key: undefined,
  attrs: { class: undefined, className: 'myclass myattrclass' },
  children: undefined,
  text: 'foo',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Cynthia',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Object
Tagname of March component type object div
Looking at - All Done! We close bag now

Looking at - Supplicant Cynthia
March Teacup Supplicant Cynthia
CELL! { tag: 'div',
  key: undefined,
  attrs: { class: undefined, className: 'myclass myattrclass' },
  children: undefined,
  text: 'foo',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Cynthia',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <div class="myclass myattrclass">
Teacup::tag final result <div class="myclass myattrclass">foo</div>
shipping <div class="myclass myattrclass">foo</div>
output length 0
Looking at - All Done! We close bag now

Final Render <div class="myclass myattrclass">foo</div>
        ✓ prepends the selector class
    multi-class selector
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo foo
March Halvalla - to component [String: 'foo']
Constructor name String
shipping [String: 'foo']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'div',
  key: undefined,
  attrs: { class: undefined, className: 'myclass myclass2 myclass3' },
  children: undefined,
  text: 'foo',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Jacob',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Supplicant Jacob
reinspect Supplicant Jacob
Looking at - Supplicant Jacob
March Halvalla - to component { tag: 'div',
  key: undefined,
  attrs: { class: undefined, className: 'myclass myclass2 myclass3' },
  children: undefined,
  text: 'foo',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Jacob',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Object
Tagname of March component type object div
Looking at - All Done! We close bag now

Looking at - Supplicant Jacob
March Teacup Supplicant Jacob
CELL! { tag: 'div',
  key: undefined,
  attrs: { class: undefined, className: 'myclass myclass2 myclass3' },
  children: undefined,
  text: 'foo',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Jacob',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <div class="myclass myclass2 myclass3">
Teacup::tag final result <div class="myclass myclass2 myclass3">foo</div>
shipping <div class="myclass myclass2 myclass3">foo</div>
output length 0
Looking at - All Done! We close bag now

Final Render <div class="myclass myclass2 myclass3">foo</div>
      ✓ adds all the classes
    with an id and classes, separated by spaces
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
shipping { tag: 'div',
  key: undefined,
  attrs: { id: 'myid', class: undefined, className: 'myclass1 myclass2' },
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Kathleen',
     tagName: 'div',
     propertyName: 'attrs',
     children: [] } }
output length 0
reinspect Supplicant Kathleen
reinspect Supplicant Kathleen
Looking at - Supplicant Kathleen
March Halvalla - to component { tag: 'div',
  key: undefined,
  attrs: { id: 'myid', class: undefined, className: 'myclass1 myclass2' },
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Kathleen',
     tagName: 'div',
     propertyName: 'attrs',
     children: [] } }
Constructor name Object
Tagname of March component type object div
Looking at - All Done! We close bag now

Looking at - Supplicant Kathleen
March Teacup Supplicant Kathleen
CELL! { tag: 'div',
  key: undefined,
  attrs: { id: 'myid', class: undefined, className: 'myclass1 myclass2' },
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Kathleen',
     tagName: 'div',
     propertyName: 'attrs',
     children: [] } }
Teacup::tag Typeof props to render object
Teacup::tag early result <div id="myid" class="myclass1 myclass2">
Looking at - All Done! We close bag now

Final Render 
Teacup::tag final result <div id="myid" class="myclass1 myclass2"></div>
shipping <div id="myid" class="myclass1 myclass2"></div>
output length 0
Looking at - All Done! We close bag now

Final Render <div id="myid" class="myclass1 myclass2"></div>
      ✓ adds ids and classes with minimal whitespace
    without contents
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
shipping { tag: 'img',
  key: undefined,
  attrs: 
   { src: '/pic.png',
     id: 'myid',
     class: undefined,
     className: 'myclass' },
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Nicholas',
     tagName: 'img',
     propertyName: 'attrs',
     children: [] } }
output length 0
reinspect Supplicant Nicholas
reinspect Supplicant Nicholas
Looking at - Supplicant Nicholas
March Halvalla - to component { tag: 'img',
  key: undefined,
  attrs: 
   { src: '/pic.png',
     id: 'myid',
     class: undefined,
     className: 'myclass' },
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Nicholas',
     tagName: 'img',
     propertyName: 'attrs',
     children: [] } }
Constructor name Object
Tagname of March component type object img
Looking at - All Done! We close bag now

Looking at - Supplicant Nicholas
March Teacup Supplicant Nicholas
shipping <img id="myid" class="myclass" src="/pic.png" />
output length 0
Looking at - All Done! We close bag now

Final Render <img id="myid" class="myclass" src="/pic.png" />
      ✓ still adds attributes

  custom tag
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
shipping { tag: 'custom',
  key: undefined,
  attrs: undefined,
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Amy',
     tagName: 'custom',
     propertyName: 'attrs',
     children: [] } }
output length 0
reinspect Supplicant Amy
reinspect Supplicant Amy
Looking at - Supplicant Amy
March Halvalla - to component { tag: 'custom',
  key: undefined,
  attrs: undefined,
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Amy',
     tagName: 'custom',
     propertyName: 'attrs',
     children: [] } }
Constructor name Object
Tagname of March component type object custom
Looking at - All Done! We close bag now

Looking at - Supplicant Amy
March Teacup Supplicant Amy
Component without teacup renderer: custom
CELL! { tag: 'custom',
  key: undefined,
  attrs: undefined,
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Amy',
     tagName: 'custom',
     propertyName: 'attrs',
     children: [] } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <custom>
Looking at - All Done! We close bag now

Final Render 
Teacup::tag final result <custom></custom>
shipping <custom></custom>
output length 0
Looking at - All Done! We close bag now

Final Render <custom></custom>
    ✓ should render
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
shipping { tag: 'custom',
  key: undefined,
  attrs: undefined,
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Eric',
     tagName: 'custom',
     propertyName: 'attrs',
     children: [] } }
output length 0
reinspect Supplicant Eric
reinspect Supplicant Eric
Looking at - Supplicant Eric
March Halvalla - to component { tag: 'custom',
  key: undefined,
  attrs: undefined,
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Eric',
     tagName: 'custom',
     propertyName: 'attrs',
     children: [] } }
Constructor name Object
Tagname of March component type object custom
Looking at - All Done! We close bag now

Looking at - Supplicant Eric
March Teacup Supplicant Eric
Component without teacup renderer: custom
CELL! { tag: 'custom',
  key: undefined,
  attrs: undefined,
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Eric',
     tagName: 'custom',
     propertyName: 'attrs',
     children: [] } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <custom>
Looking at - All Done! We close bag now

Final Render 
Teacup::tag final result <custom></custom>
shipping <custom></custom>
output length 0
Looking at - All Done! We close bag now

Final Render <custom></custom>
    ✓ should render empty given null content
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
shipping { tag: 'custom',
  key: undefined,
  attrs: { foo: 'bar', ping: 'pong' },
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Shirley',
     tagName: 'custom',
     propertyName: 'attrs',
     children: [] } }
output length 0
reinspect Supplicant Shirley
reinspect Supplicant Shirley
Looking at - Supplicant Shirley
March Halvalla - to component { tag: 'custom',
  key: undefined,
  attrs: { foo: 'bar', ping: 'pong' },
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Shirley',
     tagName: 'custom',
     propertyName: 'attrs',
     children: [] } }
Constructor name Object
Tagname of March component type object custom
Looking at - All Done! We close bag now

Looking at - Supplicant Shirley
March Teacup Supplicant Shirley
Component without teacup renderer: custom
CELL! { tag: 'custom',
  key: undefined,
  attrs: { foo: 'bar', ping: 'pong' },
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Shirley',
     tagName: 'custom',
     propertyName: 'attrs',
     children: [] } }
Teacup::tag Typeof props to render object
Teacup::tag early result <custom foo="bar" ping="pong">
Looking at - All Done! We close bag now

Final Render 
Teacup::tag final result <custom foo="bar" ping="pong"></custom>
shipping <custom foo="bar" ping="pong"></custom>
output length 0
Looking at - All Done! We close bag now

Final Render <custom foo="bar" ping="pong"></custom>
    ✓ should render with attributes
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo zag
March Halvalla - to component [String: 'zag']
Constructor name String
shipping [String: 'zag']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'custom',
  key: undefined,
  attrs: { foo: 'bar', ping: 'pong' },
  children: undefined,
  text: 'zag',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Stephen',
     tagName: 'custom',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Supplicant Stephen
reinspect Supplicant Stephen
Looking at - Supplicant Stephen
March Halvalla - to component { tag: 'custom',
  key: undefined,
  attrs: { foo: 'bar', ping: 'pong' },
  children: undefined,
  text: 'zag',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Stephen',
     tagName: 'custom',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Object
Tagname of March component type object custom
Looking at - All Done! We close bag now

Looking at - Supplicant Stephen
March Teacup Supplicant Stephen
Component without teacup renderer: custom
CELL! { tag: 'custom',
  key: undefined,
  attrs: { foo: 'bar', ping: 'pong' },
  children: undefined,
  text: 'zag',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Stephen',
     tagName: 'custom',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <custom foo="bar" ping="pong">
Teacup::tag final result <custom foo="bar" ping="pong">zag</custom>
shipping <custom foo="bar" ping="pong">zag</custom>
output length 0
Looking at - All Done! We close bag now

Final Render <custom foo="bar" ping="pong">zag</custom>
    ✓ should render with attributes and content

  custom tag-like
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
shipping { tag: 'input',
  key: undefined,
  attrs: { type: 'text' },
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Anna',
     tagName: 'input',
     propertyName: 'attrs',
     children: [] } }
output length 0
reinspect Supplicant Anna
reinspect Supplicant Anna
Looking at - Supplicant Anna
March Halvalla - to component { tag: 'input',
  key: undefined,
  attrs: { type: 'text' },
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Anna',
     tagName: 'input',
     propertyName: 'attrs',
     children: [] } }
Constructor name Object
Tagname of March component type object input
Looking at - All Done! We close bag now

Looking at - Supplicant Anna
March Teacup Supplicant Anna
shipping <input type="text" />
output length 0
Looking at - All Done! We close bag now

Final Render <input type="text" />
    ✓ should render
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
shipping { tag: 'input',
  key: undefined,
  attrs: 
   { placeholder: 'Beep',
     class: undefined,
     className: 'form-control',
     type: 'text' },
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Jonathan',
     tagName: 'input',
     propertyName: 'attrs',
     children: [] } }
output length 0
reinspect Supplicant Jonathan
reinspect Supplicant Jonathan
Looking at - Supplicant Jonathan
March Halvalla - to component { tag: 'input',
  key: undefined,
  attrs: 
   { placeholder: 'Beep',
     class: undefined,
     className: 'form-control',
     type: 'text' },
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Jonathan',
     tagName: 'input',
     propertyName: 'attrs',
     children: [] } }
Constructor name Object
Tagname of March component type object input
Looking at - All Done! We close bag now

Looking at - Supplicant Jonathan
March Teacup Supplicant Jonathan
shipping <input class="form-control" placeholder="Beep" type="text" />
output length 0
Looking at - All Done! We close bag now

Final Render <input class="form-control" placeholder="Beep" type="text" />
    ✓ should accept a selector and attributes

  doctype
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
doctype request 5
and it is...  { '5': '<!DOCTYPE html>',
  default: '<!DOCTYPE html>',
  html: '<!DOCTYPE html>',
  xml: '<?xml version="1.0" encoding="utf-8" ?>',
  transitional: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">',
  strict: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">',
  frameset: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">',
  '1.1': '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">',
  basic: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML Basic 1.1//EN" "http://www.w3.org/TR/xhtml-basic/xhtml-basic11.dtd">',
  mobile: '<!DOCTYPE html PUBLIC "-//WAPFORUM//DTD XHTML Mobile 1.2//EN" "http://www.openmobilealliance.org/tech/DTD/xhtml-mobile12.dtd">',
  ce: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "ce-html-1.0-transitional.dtd">' }
shipping { tag: '<',
  key: undefined,
  attrs: undefined,
  children: '<!DOCTYPE html>',
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false }
output length 0
reinspect some anonymous bozo [object Object]
reinspect some anonymous bozo [object Object]
Looking at - some anonymous bozo [object Object]
March Halvalla - to component { tag: '<',
  key: undefined,
  attrs: undefined,
  children: '<!DOCTYPE html>',
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false }
Constructor name Object
Tagname of March component type object <
Looking at - All Done! We close bag now

Looking at - some anonymous bozo [object Object]
March Teacup [object Object]
shipping <!DOCTYPE html>
output length 0
Looking at - All Done! We close bag now

Final Render <!DOCTYPE html>
    ✓ default should render html5 doctype
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
doctype request xml
and it is...  { '5': '<!DOCTYPE html>',
  default: '<!DOCTYPE html>',
  html: '<!DOCTYPE html>',
  xml: '<?xml version="1.0" encoding="utf-8" ?>',
  transitional: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">',
  strict: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">',
  frameset: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">',
  '1.1': '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">',
  basic: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML Basic 1.1//EN" "http://www.w3.org/TR/xhtml-basic/xhtml-basic11.dtd">',
  mobile: '<!DOCTYPE html PUBLIC "-//WAPFORUM//DTD XHTML Mobile 1.2//EN" "http://www.openmobilealliance.org/tech/DTD/xhtml-mobile12.dtd">',
  ce: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "ce-html-1.0-transitional.dtd">' }
shipping { tag: '<',
  key: undefined,
  attrs: undefined,
  children: '<?xml version="1.0" encoding="utf-8" ?>',
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false }
output length 0
reinspect some anonymous bozo [object Object]
reinspect some anonymous bozo [object Object]
Looking at - some anonymous bozo [object Object]
March Halvalla - to component { tag: '<',
  key: undefined,
  attrs: undefined,
  children: '<?xml version="1.0" encoding="utf-8" ?>',
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false }
Constructor name Object
Tagname of March component type object <
Looking at - All Done! We close bag now

Looking at - some anonymous bozo [object Object]
March Teacup [object Object]
shipping <?xml version="1.0" encoding="utf-8" ?>
output length 0
Looking at - All Done! We close bag now

Final Render <?xml version="1.0" encoding="utf-8" ?>
    ✓ xml should render xml header
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
doctype request 5
and it is...  { '5': '<!DOCTYPE html>',
  default: '<!DOCTYPE html>',
  html: '<!DOCTYPE html>',
  xml: '<?xml version="1.0" encoding="utf-8" ?>',
  transitional: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">',
  strict: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">',
  frameset: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">',
  '1.1': '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">',
  basic: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML Basic 1.1//EN" "http://www.w3.org/TR/xhtml-basic/xhtml-basic11.dtd">',
  mobile: '<!DOCTYPE html PUBLIC "-//WAPFORUM//DTD XHTML Mobile 1.2//EN" "http://www.openmobilealliance.org/tech/DTD/xhtml-mobile12.dtd">',
  ce: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "ce-html-1.0-transitional.dtd">' }
shipping { tag: '<',
  key: undefined,
  attrs: undefined,
  children: '<!DOCTYPE html>',
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false }
output length 0
reinspect some anonymous bozo [object Object]
reinspect some anonymous bozo [object Object]
Looking at - some anonymous bozo [object Object]
March Halvalla - to component { tag: '<',
  key: undefined,
  attrs: undefined,
  children: '<!DOCTYPE html>',
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false }
Constructor name Object
Tagname of March component type object <
Looking at - All Done! We close bag now

Looking at - some anonymous bozo [object Object]
March Teacup [object Object]
shipping <!DOCTYPE html>
output length 0
Looking at - All Done! We close bag now

Final Render <!DOCTYPE html>
    ✓ 5 should render html 5 doctype
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
doctype request transitional
and it is...  { '5': '<!DOCTYPE html>',
  default: '<!DOCTYPE html>',
  html: '<!DOCTYPE html>',
  xml: '<?xml version="1.0" encoding="utf-8" ?>',
  transitional: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">',
  strict: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">',
  frameset: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">',
  '1.1': '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">',
  basic: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML Basic 1.1//EN" "http://www.w3.org/TR/xhtml-basic/xhtml-basic11.dtd">',
  mobile: '<!DOCTYPE html PUBLIC "-//WAPFORUM//DTD XHTML Mobile 1.2//EN" "http://www.openmobilealliance.org/tech/DTD/xhtml-mobile12.dtd">',
  ce: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "ce-html-1.0-transitional.dtd">' }
shipping { tag: '<',
  key: undefined,
  attrs: undefined,
  children: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">',
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false }
output length 0
reinspect some anonymous bozo [object Object]
reinspect some anonymous bozo [object Object]
Looking at - some anonymous bozo [object Object]
March Halvalla - to component { tag: '<',
  key: undefined,
  attrs: undefined,
  children: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">',
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false }
Constructor name Object
Tagname of March component type object <
Looking at - All Done! We close bag now

Looking at - some anonymous bozo [object Object]
March Teacup [object Object]
shipping <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
output length 0
Looking at - All Done! We close bag now

Final Render <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
    ✓ transitional should render transitional doctype

  HereDocs
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo $(document).ready(function(){
  alert('test');
});
March Halvalla - to component [String: '$(document).ready(function(){\n  alert(\'test\');\n});']
Constructor name String
shipping [String: '$(document).ready(function(){\n  alert(\'test\');\n});']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'script',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '$(document).ready(function(){\n  alert(\'test\');\n});',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Angela',
     tagName: 'script',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Supplicant Angela
reinspect Supplicant Angela
Looking at - Supplicant Angela
March Halvalla - to component { tag: 'script',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '$(document).ready(function(){\n  alert(\'test\');\n});',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Angela',
     tagName: 'script',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Object
Tagname of March component type object script
Looking at - All Done! We close bag now

Looking at - Supplicant Angela
March Teacup Supplicant Angela
shipping <script>undefined</script>
output length 0
Looking at - All Done! We close bag now

Final Render <script>undefined</script>
    2) preserves line breaks

  IE conditionals
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo function () {
          return link({
            href: 'ie.css',
            rel: 'stylesheet'
          });
        }
March Halvalla - to component function () {
          return link({
            href: 'ie.css',
            rel: 'stylesheet'
          });
        }
Constructor name Function
shipping { tag: 'link',
  key: undefined,
  attrs: { href: 'ie.css', rel: 'stylesheet' },
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Larry',
     tagName: 'link',
     propertyName: 'attrs',
     children: [] } }
output length 0
reinspect Supplicant Larry
reinspect Supplicant Larry
Looking at - Supplicant Larry
March Halvalla - to component { tag: 'link',
  key: undefined,
  attrs: { href: 'ie.css', rel: 'stylesheet' },
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Larry',
     tagName: 'link',
     propertyName: 'attrs',
     children: [] } }
Constructor name Object
Tagname of March component type object link
Looking at - All Done! We close bag now

shipping { tag: 'ie',
  key: undefined,
  attrs: { condition: 'gte IE8' },
  children: 
   [ { tag: 'link',
       key: undefined,
       attrs: [Object],
       children: [],
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Ruth',
     tagName: 'ie',
     propertyName: 'attrs',
     children: [ [Object] ] } }
output length 0
reinspect Supplicant Ruth
reinspect Supplicant Ruth
Looking at - Supplicant Ruth
March Halvalla - to component { tag: 'ie',
  key: undefined,
  attrs: { condition: 'gte IE8' },
  children: 
   [ { tag: 'link',
       key: undefined,
       attrs: [Object],
       children: [],
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Ruth',
     tagName: 'ie',
     propertyName: 'attrs',
     children: [ [Object] ] } }
Constructor name Object
Tagname of March component type object ie
Looking at - All Done! We close bag now

Looking at - Supplicant Ruth
March Teacup Supplicant Ruth
Looking at - Supplicant Larry
March Teacup Supplicant Larry
shipping <link href="ie.css" rel="stylesheet" />
output length 0
Looking at - All Done! We close bag now

Final Render <link href="ie.css" rel="stylesheet" />
shipping <!--[if gte IE8]><link href="ie.css" rel="stylesheet" /><![endif]-->
output length 0
Looking at - All Done! We close bag now

Final Render <!--[if gte IE8]><link href="ie.css" rel="stylesheet" /><![endif]-->
    ✓ renders conditional comments

  nesting templates
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo function () {
          return nameHelper(user);
        }
March Halvalla - to component function () {
          return nameHelper(user);
        }
Constructor name Function
Looking at - some anonymous bozo Huevo Bueno
March Halvalla - to component [String: 'Huevo Bueno']
Constructor name String
shipping [String: 'Huevo Bueno']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: 'Huevo Bueno',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Justin',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Supplicant Justin
reinspect Supplicant Justin
Looking at - Supplicant Justin
March Halvalla - to component { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: 'Huevo Bueno',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Justin',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Object
Tagname of March component type object p
Looking at - All Done! We close bag now

shipping { tag: 'div',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: 'Huevo Bueno',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Brenda',
     tagName: 'div',
     propertyName: 'attrs',
     children: [ [Object] ] } }
output length 0
reinspect Supplicant Brenda
reinspect Supplicant Brenda
Looking at - Supplicant Brenda
March Halvalla - to component { tag: 'div',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: 'Huevo Bueno',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Brenda',
     tagName: 'div',
     propertyName: 'attrs',
     children: [ [Object] ] } }
Constructor name Object
Tagname of March component type object div
Looking at - All Done! We close bag now

Looking at - Supplicant Brenda
March Teacup Supplicant Brenda
CELL! { tag: 'div',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: 'p',
       key: undefined,
       attrs: undefined,
       children: undefined,
       text: 'Huevo Bueno',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Brenda',
     tagName: 'div',
     propertyName: 'attrs',
     children: [ [Object] ] } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <div>
Looking at - Supplicant Justin
March Teacup Supplicant Justin
CELL! { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: 'Huevo Bueno',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Justin',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <p>
Teacup::tag final result <p>Huevo Bueno</p>
shipping <p>Huevo Bueno</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>Huevo Bueno</p>
Teacup::tag final result <div><p>Huevo Bueno</p></div>
shipping <div><p>Huevo Bueno</p></div>
output length 0
Looking at - All Done! We close bag now

Final Render <div><p>Huevo Bueno</p></div>
    ✓ renders nested template in the same output

  plugins
    ✓ are applied via use

  render
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo function () {
          a(d, "link 1");
          return a(d, "link 2");
        }
March Halvalla - to component function () {
          a(d, "link 1");
          return a(d, "link 2");
        }
Constructor name Function
Looking at - some anonymous bozo link 1
March Halvalla - to component [String: 'link 1']
Constructor name String
shipping [String: 'link 1']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'a',
  key: undefined,
  attrs: 
   { id: 'foobar',
     class: undefined,
     href: 'http://example.com',
     className: 'myclass' },
  children: undefined,
  text: 'link 1',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Scott',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
output length 0
Looking at - some anonymous bozo link 2
March Halvalla - to component [String: 'link 2']
Constructor name String
shipping [String: 'link 2']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'a',
  key: undefined,
  attrs: 
   { id: 'foobar',
     class: undefined,
     href: 'http://example.com',
     className: 'myclass' },
  children: undefined,
  text: 'link 2',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Pamela',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
output length 1
reinspect Supplicant Pamela
reinspect Supplicant Pamela
Looking at - Supplicant Pamela
March Halvalla - to component { tag: 'a',
  key: undefined,
  attrs: 
   { id: 'foobar',
     class: undefined,
     href: 'http://example.com',
     className: 'myclass' },
  children: undefined,
  text: 'link 2',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Pamela',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Object
Tagname of March component type object a
Looking at - All Done! We close bag now

shipping { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: 'a',
       key: undefined,
       attrs: [Object],
       children: undefined,
       text: 'link 1',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'a',
       key: undefined,
       attrs: [Object],
       children: undefined,
       text: 'link 2',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Frank',
     tagName: 'p',
     propertyName: 'attrs',
     children: [ [Object], [Object] ] } }
output length 0
reinspect Supplicant Frank
reinspect Supplicant Frank
Looking at - Supplicant Frank
March Halvalla - to component { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: 'a',
       key: undefined,
       attrs: [Object],
       children: undefined,
       text: 'link 1',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'a',
       key: undefined,
       attrs: [Object],
       children: undefined,
       text: 'link 2',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Frank',
     tagName: 'p',
     propertyName: 'attrs',
     children: [ [Object], [Object] ] } }
Constructor name Object
Tagname of March component type object p
Looking at - All Done! We close bag now

Looking at - Supplicant Frank
March Teacup Supplicant Frank
CELL! { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: 'a',
       key: undefined,
       attrs: [Object],
       children: undefined,
       text: 'link 1',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] },
     { tag: 'a',
       key: undefined,
       attrs: [Object],
       children: undefined,
       text: 'link 2',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Frank',
     tagName: 'p',
     propertyName: 'attrs',
     children: [ [Object], [Object] ] } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <p>
Looking at - Supplicant Scott
March Teacup Supplicant Scott
CELL! { tag: 'a',
  key: undefined,
  attrs: 
   { id: 'foobar',
     class: undefined,
     href: 'http://example.com',
     className: 'myclass' },
  children: undefined,
  text: 'link 1',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Scott',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <a id="foobar" class="myclass" href="http://example.com">
Teacup::tag final result <a id="foobar" class="myclass" href="http://example.com">link 1</a>
shipping <a id="foobar" class="myclass" href="http://example.com">link 1</a>
output length 0
Looking at - All Done! We close bag now

Final Render <a id="foobar" class="myclass" href="http://example.com">link 1</a>
Looking at - Supplicant Pamela
March Teacup Supplicant Pamela
CELL! { tag: 'a',
  key: undefined,
  attrs: 
   { id: 'foobar',
     class: undefined,
     href: 'http://example.com',
     className: 'myclass' },
  children: undefined,
  text: 'link 2',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Pamela',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <a id="foobar" class="myclass" href="http://example.com">
Teacup::tag final result <a id="foobar" class="myclass" href="http://example.com">link 2</a>
shipping <a id="foobar" class="myclass" href="http://example.com">link 2</a>
output length 0
Looking at - All Done! We close bag now

Final Render <a id="foobar" class="myclass" href="http://example.com">link 2</a>
Teacup::tag final result <p><a id="foobar" class="myclass" href="http://example.com">link 1</a><a id="foobar" class="myclass" href="http://example.com">link 2</a></p>
shipping <p><a id="foobar" class="myclass" href="http://example.com">link 1</a><a id="foobar" class="myclass" href="http://example.com">link 2</a></p>
output length 0
Looking at - All Done! We close bag now

Final Render <p><a id="foobar" class="myclass" href="http://example.com">link 1</a><a id="foobar" class="myclass" href="http://example.com">link 2</a></p>
    ✓ doesn't modify the attributes object
    nested in a template
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo function () {
            return raw("This text could use " + (render(function() {
              return strong(function() {
                return a({
                  href: '/'
                }, 'a link');
              });
            })) + ".");
          }
March Halvalla - to component function () {
            return raw("This text could use " + (render(function() {
              return strong(function() {
                return a({
                  href: '/'
                }, 'a link');
              });
            })) + ".");
          }
Constructor name Function
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo function () {
                return a({
                  href: '/'
                }, 'a link');
              }
March Halvalla - to component function () {
                return a({
                  href: '/'
                }, 'a link');
              }
Constructor name Function
Looking at - some anonymous bozo a link
March Halvalla - to component [String: 'a link']
Constructor name String
shipping [String: 'a link']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'a',
  key: undefined,
  attrs: { href: '/' },
  children: undefined,
  text: 'a link',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Nicole',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Supplicant Nicole
reinspect Supplicant Nicole
Looking at - Supplicant Nicole
March Halvalla - to component { tag: 'a',
  key: undefined,
  attrs: { href: '/' },
  children: undefined,
  text: 'a link',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Nicole',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Object
Tagname of March component type object a
Looking at - All Done! We close bag now

shipping { tag: 'strong',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: 'a',
       key: undefined,
       attrs: [Object],
       children: undefined,
       text: 'a link',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Brandon',
     tagName: 'strong',
     propertyName: 'attrs',
     children: [ [Object] ] } }
output length 0
reinspect Supplicant Brandon
reinspect Supplicant Brandon
Looking at - Supplicant Brandon
March Halvalla - to component { tag: 'strong',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: 'a',
       key: undefined,
       attrs: [Object],
       children: undefined,
       text: 'a link',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Brandon',
     tagName: 'strong',
     propertyName: 'attrs',
     children: [ [Object] ] } }
Constructor name Object
Tagname of March component type object strong
Looking at - All Done! We close bag now

Looking at - Supplicant Brandon
March Teacup Supplicant Brandon
CELL! { tag: 'strong',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: 'a',
       key: undefined,
       attrs: [Object],
       children: undefined,
       text: 'a link',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Brandon',
     tagName: 'strong',
     propertyName: 'attrs',
     children: [ [Object] ] } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <strong>
Looking at - Supplicant Nicole
March Teacup Supplicant Nicole
CELL! { tag: 'a',
  key: undefined,
  attrs: { href: '/' },
  children: undefined,
  text: 'a link',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Nicole',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <a href="/">
Teacup::tag final result <a href="/">a link</a>
shipping <a href="/">a link</a>
output length 0
Looking at - All Done! We close bag now

Final Render <a href="/">a link</a>
Teacup::tag final result <strong><a href="/">a link</a></strong>
shipping <strong><a href="/">a link</a></strong>
output length 0
Looking at - All Done! We close bag now

Final Render <strong><a href="/">a link</a></strong>
shipping { tag: '<',
  key: undefined,
  attrs: undefined,
  children: 'This text could use <strong><a href="/">a link</a></strong>.',
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false }
output length 0
reinspect some anonymous bozo [object Object]
reinspect some anonymous bozo [object Object]
Looking at - some anonymous bozo [object Object]
March Halvalla - to component { tag: '<',
  key: undefined,
  attrs: undefined,
  children: 'This text could use <strong><a href="/">a link</a></strong>.',
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false }
Constructor name Object
Tagname of March component type object <
Looking at - All Done! We close bag now

shipping { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: '<',
       key: undefined,
       attrs: undefined,
       children: 'This text could use <strong><a href="/">a link</a></strong>.',
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Katherine',
     tagName: 'p',
     propertyName: 'attrs',
     children: [ [Object] ] } }
output length 0
reinspect Supplicant Katherine
reinspect Supplicant Katherine
Looking at - Supplicant Katherine
March Halvalla - to component { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: '<',
       key: undefined,
       attrs: undefined,
       children: 'This text could use <strong><a href="/">a link</a></strong>.',
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Katherine',
     tagName: 'p',
     propertyName: 'attrs',
     children: [ [Object] ] } }
Constructor name Object
Tagname of March component type object p
Looking at - All Done! We close bag now

Looking at - Supplicant Katherine
March Teacup Supplicant Katherine
CELL! { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: '<',
       key: undefined,
       attrs: undefined,
       children: 'This text could use <strong><a href="/">a link</a></strong>.',
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Katherine',
     tagName: 'p',
     propertyName: 'attrs',
     children: [ [Object] ] } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <p>
Looking at - some anonymous bozo [object Object]
March Teacup [object Object]
shipping This text could use <strong><a href="/">a link</a></strong>.
output length 0
Looking at - All Done! We close bag now

Final Render This text could use <strong><a href="/">a link</a></strong>.
Teacup::tag final result <p>This text could use <strong><a href="/">a link</a></strong>.</p>
shipping <p>This text could use <strong><a href="/">a link</a></strong>.</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>This text could use <strong><a href="/">a link</a></strong>.</p>
      ✓ returns the nested template without clobbering the parent result
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo function () {
            return raw("This text could use " + (cede(function() {
              return strong(function() {
                return a({
                  href: '/'
                }, 'a link');
              });
            })) + ".");
          }
March Halvalla - to component function () {
            return raw("This text could use " + (cede(function() {
              return strong(function() {
                return a({
                  href: '/'
                }, 'a link');
              });
            })) + ".");
          }
Constructor name Function
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo function () {
                return a({
                  href: '/'
                }, 'a link');
              }
March Halvalla - to component function () {
                return a({
                  href: '/'
                }, 'a link');
              }
Constructor name Function
Looking at - some anonymous bozo a link
March Halvalla - to component [String: 'a link']
Constructor name String
shipping [String: 'a link']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'a',
  key: undefined,
  attrs: { href: '/' },
  children: undefined,
  text: 'a link',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Raymond',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Supplicant Raymond
reinspect Supplicant Raymond
Looking at - Supplicant Raymond
March Halvalla - to component { tag: 'a',
  key: undefined,
  attrs: { href: '/' },
  children: undefined,
  text: 'a link',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Raymond',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Object
Tagname of March component type object a
Looking at - All Done! We close bag now

shipping { tag: 'strong',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: 'a',
       key: undefined,
       attrs: [Object],
       children: undefined,
       text: 'a link',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Virginia',
     tagName: 'strong',
     propertyName: 'attrs',
     children: [ [Object] ] } }
output length 0
reinspect Supplicant Virginia
reinspect Supplicant Virginia
Looking at - Supplicant Virginia
March Halvalla - to component { tag: 'strong',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: 'a',
       key: undefined,
       attrs: [Object],
       children: undefined,
       text: 'a link',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Virginia',
     tagName: 'strong',
     propertyName: 'attrs',
     children: [ [Object] ] } }
Constructor name Object
Tagname of March component type object strong
Looking at - All Done! We close bag now

Looking at - Supplicant Virginia
March Teacup Supplicant Virginia
CELL! { tag: 'strong',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: 'a',
       key: undefined,
       attrs: [Object],
       children: undefined,
       text: 'a link',
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false,
       _Halvalla: [Object] } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Virginia',
     tagName: 'strong',
     propertyName: 'attrs',
     children: [ [Object] ] } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <strong>
Looking at - Supplicant Raymond
March Teacup Supplicant Raymond
CELL! { tag: 'a',
  key: undefined,
  attrs: { href: '/' },
  children: undefined,
  text: 'a link',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Raymond',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <a href="/">
Teacup::tag final result <a href="/">a link</a>
shipping <a href="/">a link</a>
output length 0
Looking at - All Done! We close bag now

Final Render <a href="/">a link</a>
Teacup::tag final result <strong><a href="/">a link</a></strong>
shipping <strong><a href="/">a link</a></strong>
output length 0
Looking at - All Done! We close bag now

Final Render <strong><a href="/">a link</a></strong>
shipping { tag: '<',
  key: undefined,
  attrs: undefined,
  children: 'This text could use <strong><a href="/">a link</a></strong>.',
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false }
output length 0
reinspect some anonymous bozo [object Object]
reinspect some anonymous bozo [object Object]
Looking at - some anonymous bozo [object Object]
March Halvalla - to component { tag: '<',
  key: undefined,
  attrs: undefined,
  children: 'This text could use <strong><a href="/">a link</a></strong>.',
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false }
Constructor name Object
Tagname of March component type object <
Looking at - All Done! We close bag now

shipping { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: '<',
       key: undefined,
       attrs: undefined,
       children: 'This text could use <strong><a href="/">a link</a></strong>.',
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Gregory',
     tagName: 'p',
     propertyName: 'attrs',
     children: [ [Object] ] } }
output length 0
reinspect Supplicant Gregory
reinspect Supplicant Gregory
Looking at - Supplicant Gregory
March Halvalla - to component { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: '<',
       key: undefined,
       attrs: undefined,
       children: 'This text could use <strong><a href="/">a link</a></strong>.',
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Gregory',
     tagName: 'p',
     propertyName: 'attrs',
     children: [ [Object] ] } }
Constructor name Object
Tagname of March component type object p
Looking at - All Done! We close bag now

Looking at - Supplicant Gregory
March Teacup Supplicant Gregory
CELL! { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: 
   [ { tag: '<',
       key: undefined,
       attrs: undefined,
       children: 'This text could use <strong><a href="/">a link</a></strong>.',
       text: undefined,
       dom: undefined,
       domSize: undefined,
       state: undefined,
       _state: undefined,
       events: undefined,
       instance: undefined,
       skip: false } ],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Gregory',
     tagName: 'p',
     propertyName: 'attrs',
     children: [ [Object] ] } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <p>
Looking at - some anonymous bozo [object Object]
March Teacup [object Object]
shipping This text could use <strong><a href="/">a link</a></strong>.
output length 0
Looking at - All Done! We close bag now

Final Render This text could use <strong><a href="/">a link</a></strong>.
Teacup::tag final result <p>This text could use <strong><a href="/">a link</a></strong>.</p>
shipping <p>This text could use <strong><a href="/">a link</a></strong>.</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>This text could use <strong><a href="/">a link</a></strong>.</p>
      ✓ is aliased as cede

  Self Closing Tags
    <img />
RENDERABLE Called 
Looking at - Supplicant Catherine
March Teacup Supplicant Catherine
shipping <img />
output length 0
Looking at - All Done! We close bag now

Final Render <img />
      ✓ should render
RENDERABLE Called  { src: 'http://foo.jpg.to' }
Looking at - Supplicant Benjamin
March Teacup Supplicant Benjamin
shipping <img src="http://foo.jpg.to" />
output length 0
Looking at - All Done! We close bag now

Final Render <img src="http://foo.jpg.to" />
      ✓ should render with attributes
RENDERABLE Called 
      ✓ should throw when passed content
    <br />
RENDERABLE Called 
Looking at - Supplicant Christine
March Teacup Supplicant Christine
shipping <br />
output length 0
Looking at - All Done! We close bag now

Final Render <br />
      ✓ should render
    <link />
RENDERABLE Called  { href: '/foo.css', rel: 'stylesheet' }
Looking at - Supplicant Samuel
March Teacup Supplicant Samuel
shipping <link href="/foo.css" rel="stylesheet" />
output length 0
Looking at - All Done! We close bag now

Final Render <link href="/foo.css" rel="stylesheet" />
      ✓ should render with attributes

  stack trace
RENDERABLE Called 
Looking at - some anonymous bozo function () {
          return p(function() {
            throw new Error();
          });
        }
March Halvalla - to component function () {
          return p(function() {
            throw new Error();
          });
        }
Constructor name Function
Looking at - some anonymous bozo function () {
            throw new Error();
          }
March Halvalla - to component function () {
            throw new Error();
          }
Constructor name Function
    ✓ should contain tag names

  tag
RENDERABLE Called  2013-01-31T14:00:00.000Z
Looking at - some anonymous bozo Fri Feb 01 2013 00:00:00 GMT+1000 (ChST)
March Halvalla - to component Fri Feb 01 2013 00:00:00 GMT+1000 (ChST)
Constructor name String
shipping Fri Feb 01 2013 00:00:00 GMT+1000 (ChST)
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: 'Fri Feb 01 2013 00:00:00 GMT+1000 (ChST)',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Samantha',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 0
Looking at - Supplicant Samantha
March Teacup Supplicant Samantha
CELL! { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: 'Fri Feb 01 2013 00:00:00 GMT+1000 (ChST)',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Samantha',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <p>
Teacup::tag final result <p>Fri Feb 01 2013 00:00:00 GMT+1000 (ChST)</p>
shipping <p>Fri Feb 01 2013 00:00:00 GMT+1000 (ChST)</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>Fri Feb 01 2013 00:00:00 GMT+1000 (ChST)</p>
    ✓ renders Dates
RENDERABLE Called  foobar
Looking at - some anonymous bozo foobar
March Halvalla - to component [String: 'foobar']
Constructor name String
shipping [String: 'foobar']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: 'foobar',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Patrick',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 1
Looking at - Supplicant Patrick
March Teacup Supplicant Patrick
CELL! { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: 'foobar',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Patrick',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <p>
Teacup::tag final result <p>foobar</p>
shipping <p>foobar</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>foobar</p>
    ✓ renders text verbatim
RENDERABLE Called  1
Looking at - some anonymous bozo 1
March Halvalla - to component [String: '1']
Constructor name String
shipping [String: '1']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '1',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Debra',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 2
Looking at - Supplicant Debra
March Teacup Supplicant Debra
CELL! { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '1',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Debra',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <p>
Teacup::tag final result <p>1</p>
shipping <p>1</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>1</p>
RENDERABLE Called  0
Looking at - some anonymous bozo 0
March Halvalla - to component [String: '0']
Constructor name String
shipping [String: '0']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '0',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Alexander',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 3
Looking at - Supplicant Alexander
March Teacup Supplicant Alexander
CELL! { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: '0',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Alexander',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <p>
Teacup::tag final result <p>0</p>
shipping <p>0</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>0</p>
    ✓ renders numbers
RENDERABLE Called  undefined
shipping { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Janet',
     tagName: 'p',
     propertyName: 'attrs',
     children: [] } }
output length 4
Looking at - Supplicant Janet
March Teacup Supplicant Janet
CELL! { tag: 'p',
  key: undefined,
  attrs: undefined,
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Janet',
     tagName: 'p',
     propertyName: 'attrs',
     children: [] } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <p>
Looking at - All Done! We close bag now

Final Render 
Teacup::tag final result <p></p>
shipping <p></p>
output length 0
Looking at - All Done! We close bag now

Final Render <p></p>
    ✓ renders undefined as ''
RENDERABLE Called 
shipping { tag: 'script',
  key: undefined,
  attrs: { src: 'js/app.js' },
  children: [],
  text: undefined,
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Jack',
     tagName: 'script',
     propertyName: 'attrs',
     children: [] } }
output length 5
Looking at - Supplicant Jack
March Teacup Supplicant Jack
shipping <script src="js/app.js"></script>
output length 0
Looking at - All Done! We close bag now

Final Render <script src="js/app.js"></script>
    ✓ renders empty tags

  text
RENDERABLE Called  foobar
shipping foobar
output length 6
Looking at - some anonymous bozo f
March Teacup f
shipping f
output length 0
Looking at - All Done! We close bag now

Final Render f
Looking at - some anonymous bozo o
March Teacup o
shipping o
output length 0
Looking at - All Done! We close bag now

Final Render o
Looking at - some anonymous bozo o
March Teacup o
shipping o
output length 0
Looking at - All Done! We close bag now

Final Render o
Looking at - some anonymous bozo b
March Teacup b
shipping b
output length 0
Looking at - All Done! We close bag now

Final Render b
Looking at - some anonymous bozo a
March Teacup a
shipping a
output length 0
Looking at - All Done! We close bag now

Final Render a
Looking at - some anonymous bozo r
March Teacup r
shipping r
output length 0
Looking at - All Done! We close bag now

Final Render r
    ✓ renders text verbatim
RENDERABLE Called  1
shipping 1
output length 7
Looking at - some anonymous bozo 1
March Teacup 1
shipping 1
output length 0
Looking at - All Done! We close bag now

Final Render 1
RENDERABLE Called  0
shipping 0
output length 8
Looking at - some anonymous bozo 0
March Teacup 0
shipping 0
output length 0
Looking at - All Done! We close bag now

Final Render 0
    ✓ renders numbers
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo function () {
          return 'hello world';
        }
March Halvalla - to component function () {
          return 'hello world';
        }
Constructor name Function
reinspect some anonymous bozo hello world
reinspect some anonymous bozo hello world
illegal input in instantiation bag #{eachItem}
Looking at - some anonymous bozo hello world
March Halvalla - to component hello world
Constructor name String
shipping hello world
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'h1',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: 'hello world',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Rachel',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Supplicant Rachel
reinspect Supplicant Rachel
Looking at - Supplicant Rachel
March Halvalla - to component { tag: 'h1',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: 'hello world',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Rachel',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Object
Tagname of March component type object h1
Looking at - All Done! We close bag now

Looking at - Supplicant Rachel
March Teacup Supplicant Rachel
CELL! { tag: 'h1',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: 'hello world',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Rachel',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <h1>
Teacup::tag final result <h1>hello world</h1>
shipping <h1>hello world</h1>
output length 0
Looking at - All Done! We close bag now

Final Render <h1>hello world</h1>
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo function () {
          return 'hello world';
        }
March Halvalla - to component function () {
          return 'hello world';
        }
Constructor name Function
reinspect some anonymous bozo hello world
reinspect some anonymous bozo hello world
illegal input in instantiation bag #{eachItem}
Looking at - some anonymous bozo hello world
March Halvalla - to component hello world
Constructor name String
shipping hello world
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'h1',
  key: undefined,
  attrs: { class: undefined, className: 'title' },
  children: undefined,
  text: 'hello world',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Dennis',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Supplicant Dennis
reinspect Supplicant Dennis
Looking at - Supplicant Dennis
March Halvalla - to component { tag: 'h1',
  key: undefined,
  attrs: { class: undefined, className: 'title' },
  children: undefined,
  text: 'hello world',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Dennis',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Object
Tagname of March component type object h1
Looking at - All Done! We close bag now

Looking at - Supplicant Dennis
March Teacup Supplicant Dennis
CELL! { tag: 'h1',
  key: undefined,
  attrs: { class: undefined, className: 'title' },
  children: undefined,
  text: 'hello world',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Dennis',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <h1 class="title">
Teacup::tag final result <h1 class="title">hello world</h1>
shipping <h1 class="title">hello world</h1>
output length 0
Looking at - All Done! We close bag now

Final Render <h1 class="title">hello world</h1>
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo function () {
          return 'hello world';
        }
March Halvalla - to component function () {
          return 'hello world';
        }
Constructor name Function
reinspect some anonymous bozo hello world
reinspect some anonymous bozo hello world
illegal input in instantiation bag #{eachItem}
Looking at - some anonymous bozo hello world
March Halvalla - to component hello world
Constructor name String
shipping hello world
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'h1',
  key: undefined,
  attrs: { class: undefined, className: 'title' },
  children: undefined,
  text: 'hello world',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Carolyn',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Supplicant Carolyn
reinspect Supplicant Carolyn
Looking at - Supplicant Carolyn
March Halvalla - to component { tag: 'h1',
  key: undefined,
  attrs: { class: undefined, className: 'title' },
  children: undefined,
  text: 'hello world',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Carolyn',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Object
Tagname of March component type object h1
Looking at - All Done! We close bag now

Looking at - Supplicant Carolyn
March Teacup Supplicant Carolyn
CELL! { tag: 'h1',
  key: undefined,
  attrs: { class: undefined, className: 'title' },
  children: undefined,
  text: 'hello world',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Carolyn',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <h1 class="title">
Teacup::tag final result <h1 class="title">hello world</h1>
shipping <h1 class="title">hello world</h1>
output length 0
Looking at - All Done! We close bag now

Final Render <h1 class="title">hello world</h1>
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo function () {
          return text('hello world');
        }
March Halvalla - to component function () {
          return text('hello world');
        }
Constructor name Function
shipping hello world
output length 0
reinspect some anonymous bozo hello world
reinspect some anonymous bozo hello world
illegal input in instantiation bag #{eachItem}
Looking at - some anonymous bozo hello world
March Halvalla - to component hello world
Constructor name String
Looking at - All Done! We close bag now

shipping { tag: 'h1',
  key: undefined,
  attrs: { class: undefined, className: 'title' },
  children: undefined,
  text: 'hello world',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Jerry',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Supplicant Jerry
reinspect Supplicant Jerry
Looking at - Supplicant Jerry
March Halvalla - to component { tag: 'h1',
  key: undefined,
  attrs: { class: undefined, className: 'title' },
  children: undefined,
  text: 'hello world',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Jerry',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Object
Tagname of March component type object h1
Looking at - All Done! We close bag now

Looking at - Supplicant Jerry
March Teacup Supplicant Jerry
CELL! { tag: 'h1',
  key: undefined,
  attrs: { class: undefined, className: 'title' },
  children: undefined,
  text: 'hello world',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Jerry',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <h1 class="title">
Teacup::tag final result <h1 class="title">hello world</h1>
shipping <h1 class="title">hello world</h1>
output length 0
Looking at - All Done! We close bag now

Final Render <h1 class="title">hello world</h1>
    ✓ is assumed when it is returned from contents

  Context data
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo bar
March Halvalla - to component [String: 'bar']
Constructor name String
shipping [String: 'bar']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'h1',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: 'bar',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Emma',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Supplicant Emma
reinspect Supplicant Emma
Looking at - Supplicant Emma
March Halvalla - to component { tag: 'h1',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: 'bar',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Emma',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Object
Tagname of March component type object h1
Looking at - All Done! We close bag now

Looking at - Supplicant Emma
March Teacup Supplicant Emma
CELL! { tag: 'h1',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: 'bar',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Emma',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <h1>
Teacup::tag final result <h1>bar</h1>
shipping <h1>bar</h1>
output length 0
Looking at - All Done! We close bag now

Final Render <h1>bar</h1>
    ✓ is an argument to the template function

  Local vars
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo dynamic: bar
March Halvalla - to component [String: 'dynamic: bar']
Constructor name String
shipping [String: 'dynamic: bar']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'h1',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: 'dynamic: bar',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Tyler',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Supplicant Tyler
reinspect Supplicant Tyler
Looking at - Supplicant Tyler
March Halvalla - to component { tag: 'h1',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: 'dynamic: bar',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Tyler',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Object
Tagname of March component type object h1
Looking at - All Done! We close bag now

Looking at - Supplicant Tyler
March Teacup Supplicant Tyler
CELL! { tag: 'h1',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: 'dynamic: bar',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Tyler',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <h1>
Teacup::tag final result <h1>dynamic: bar</h1>
shipping <h1>dynamic: bar</h1>
output length 0
Looking at - All Done! We close bag now

Final Render <h1>dynamic: bar</h1>
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo dynamic: baz
March Halvalla - to component [String: 'dynamic: baz']
Constructor name String
shipping [String: 'dynamic: baz']
output length 0
Looking at - All Done! We close bag now

shipping { tag: 'h1',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: 'dynamic: baz',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Maria',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Supplicant Maria
reinspect Supplicant Maria
Looking at - Supplicant Maria
March Halvalla - to component { tag: 'h1',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: 'dynamic: baz',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Maria',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Object
Tagname of March component type object h1
Looking at - All Done! We close bag now

Looking at - Supplicant Maria
March Teacup Supplicant Maria
CELL! { tag: 'h1',
  key: undefined,
  attrs: undefined,
  children: undefined,
  text: 'dynamic: baz',
  dom: undefined,
  domSize: undefined,
  state: undefined,
  _state: undefined,
  events: undefined,
  instance: undefined,
  skip: false,
  _Halvalla: 
   { birthName: 'Supplicant Maria',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render undefined
Teacup::tag early result <h1>
Teacup::tag final result <h1>dynamic: baz</h1>
shipping <h1>dynamic: baz</h1>
output length 0
Looking at - All Done! We close bag now

Final Render <h1>dynamic: baz</h1>
    ✓ are in the template function closure


  54 passing (342ms)
  2 failing

  1) Comments
       renders HTML <!--comments-->:
     TypeError: Cannot read property 'toString' of undefined
      at escape (lib/html-tags.js:167:16)
      at Teacup.module.exports.Teacup.commentTag (lib/teacup.js:281:24)
      at Teacup.(anonymous function) [as comment] (lib/teacup.js:364:30)
      at Teacup.module.exports.Teacup.march (lib/teacup.js:54:40)
      at Teacup.module.exports.Teacup.render (lib/teacup.js:74:12)
      at lib/halvalla.js:631:31
      at Halvalla.render (lib/halvalla.js:634:9)
      at allTags.(anonymous function).bound.(anonymous function) (lib/halvalla.js:653:34)
      at Context.<anonymous> (test-mithril/comments.coffee:7:12)
  

  2) HereDocs
       preserves line breaks:
     Error: expected '<script>undefined</script>' to equal '<script>$(document).ready(function(){\n  alert(\'test\');\n});</script>'
      at Assertion.assert (node_modules/expect.js/index.js:96:13)
      at Assertion.be.Assertion.equal (node_modules/expect.js/index.js:216:10)
      at Context.<anonymous> (test-mithril/heredocs.coffee:11:32)
  




> halvalla@1.6.0 test-react /Users/jim/clones/halvalla
> rm test; ln -s test-react test; mocha



  Attributes
    with a hash
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
shipping { '$$typeof': Symbol(react.element),
  type: 'a',
  key: null,
  ref: null,
  props: { href: '/', title: 'Home' },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'a',
  key: null,
  ref: null,
  props: { href: '/', title: 'Home' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object a
Looking at - All Done! We close bag now

      ✓ renders the corresponding HTML attributes
    data attribute
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
shipping { '$$typeof': Symbol(react.element),
  type: 'br',
  key: null,
  ref: null,
  props: { 'data-name': 'Name', 'data-value': 'Value' },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'br',
  key: null,
  ref: null,
  props: { 'data-name': 'Name', 'data-value': 'Value' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object br
Looking at - All Done! We close bag now

      ✓ expands attributes
    nested hyphenated attribute
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo function () {
            return div({
              'data-on-y': 'boop'
            });
          }
March Halvalla - to component function () {
            return div({
              'data-on-y': 'boop'
            });
          }
Constructor name Function
shipping { '$$typeof': Symbol(react.element),
  type: 'div',
  key: null,
  ref: null,
  props: { 'data-on-y': 'boop' },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'div',
  key: null,
  ref: null,
  props: { 'data-on-y': 'boop' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object div
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'div',
  key: null,
  ref: null,
  props: 
   { 'data-on-x': 'beep',
     children: 
      { '$$typeof': Symbol(react.element),
        type: 'div',
        key: null,
        ref: null,
        props: [Object],
        _owner: null,
        _store: {} } },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'div',
  key: null,
  ref: null,
  props: 
   { 'data-on-x': 'beep',
     children: 
      { '$$typeof': Symbol(react.element),
        type: 'div',
        key: null,
        ref: null,
        props: [Object],
        _owner: null,
        _store: {} } },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object div
Looking at - All Done! We close bag now

      ✓ renders

  coffeekup.org example
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo function () {
          head(function() {
            meta({
              charSet: 'utf-8'
            });
            title((x.title || 'Untitled') + " | My awesome website");
            if (typeof desc !== "undefined" && desc !== null) {
              meta({
                name: 'description',
                content: desc
              });
            }
            link({
              rel: 'stylesheet',
              href: '/stylesheets/app.css'
            });
            return script({
              src: '/javascripts/jquery.js'
            });
          });
          return body(function() {
            header(function() {
              h1(x.title || 'Untitled');
              return nav(function() {
                return ul(function() {
                  if (path !== '/') {
                    li(function() {
                      return a({
                        href: '/'
                      }, 'Home');
                    });
                  }
                  li(function() {
                    return a({
                      href: '/chunky'
                    }, 'Bacon!');
                  });
                  switch (user.role) {
                    case 'owner':
                    case 'admin':
                      return li(function() {
                        return a({
                          href: '/admin'
                        }, 'Secret Stuff');
                      });
                    case 'vip':
                      return li(function() {
                        return a({
                          href: '/vip'
                        }, 'Exclusive Stuff');
                      });
                    default:
                      return li(function() {
                        return a({
                          href: '/commoners'
                        }, 'Just Stuff');
                      });
                  }
                });
              });
            });
            section(function() {
              var i, j, ref1, results;
              h2("Let's count to " + max + ":");
              results = [];
              for (i = j = 1, ref1 = max; 1 <= ref1 ? j <= ref1 : j >= ref1; i = 1 <= ref1 ? ++j : --j) {
                results.push(p(i));
              }
              return results;
            });
            return footer(function() {
              return p(shoutify('bye'));
            });
          });
        }
March Halvalla - to component function () {
          head(function() {
            meta({
              charSet: 'utf-8'
            });
            title((x.title || 'Untitled') + " | My awesome website");
            if (typeof desc !== "undefined" && desc !== null) {
              meta({
                name: 'description',
                content: desc
              });
            }
            link({
              rel: 'stylesheet',
              href: '/stylesheets/app.css'
            });
            return script({
              src: '/javascripts/jquery.js'
            });
          });
          return body(function() {
            header(function() {
              h1(x.title || 'Untitled');
              return nav(function() {
                return ul(function() {
                  if (path !== '/') {
                    li(function() {
                      return a({
                        href: '/'
                      }, 'Home');
                    });
                  }
                  li(function() {
                    return a({
                      href: '/chunky'
                    }, 'Bacon!');
                  });
                  switch (user.role) {
                    case 'owner':
                    case 'admin':
                      return li(function() {
                        return a({
                          href: '/admin'
                        }, 'Secret Stuff');
                      });
                    case 'vip':
                      return li(function() {
                        return a({
                          href: '/vip'
                        }, 'Exclusive Stuff');
                      });
                    default:
                      return li(function() {
                        return a({
                          href: '/commoners'
                        }, 'Just Stuff');
                      });
                  }
                });
              });
            });
            section(function() {
              var i, j, ref1, results;
              h2("Let's count to " + max + ":");
              results = [];
              for (i = j = 1, ref1 = max; 1 <= ref1 ? j <= ref1 : j >= ref1; i = 1 <= ref1 ? ++j : --j) {
                results.push(p(i));
              }
              return results;
            });
            return footer(function() {
              return p(shoutify('bye'));
            });
          });
        }
Constructor name Function
Looking at - some anonymous bozo function () {
            meta({
              charSet: 'utf-8'
            });
            title((x.title || 'Untitled') + " | My awesome website");
            if (typeof desc !== "undefined" && desc !== null) {
              meta({
                name: 'description',
                content: desc
              });
            }
            link({
              rel: 'stylesheet',
              href: '/stylesheets/app.css'
            });
            return script({
              src: '/javascripts/jquery.js'
            });
          }
March Halvalla - to component function () {
            meta({
              charSet: 'utf-8'
            });
            title((x.title || 'Untitled') + " | My awesome website");
            if (typeof desc !== "undefined" && desc !== null) {
              meta({
                name: 'description',
                content: desc
              });
            }
            link({
              rel: 'stylesheet',
              href: '/stylesheets/app.css'
            });
            return script({
              src: '/javascripts/jquery.js'
            });
          }
Constructor name Function
shipping { '$$typeof': Symbol(react.element),
  type: 'meta',
  key: null,
  ref: null,
  props: { charSet: 'utf-8' },
  _owner: null,
  _store: {} }
output length 0
Looking at - some anonymous bozo Foo | My awesome website
March Halvalla - to component [String: 'Foo | My awesome website']
Constructor name String
shipping [String: 'Foo | My awesome website']
output length 0
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'title',
  key: null,
  ref: null,
  props: { children: 'Foo | My awesome website' },
  _owner: null,
  _store: {} }
output length 1
shipping { '$$typeof': Symbol(react.element),
  type: 'link',
  key: null,
  ref: null,
  props: { rel: 'stylesheet', href: '/stylesheets/app.css' },
  _owner: null,
  _store: {} }
output length 2
shipping { '$$typeof': Symbol(react.element),
  type: 'script',
  key: null,
  ref: null,
  props: { src: '/javascripts/jquery.js' },
  _owner: null,
  _store: {} }
output length 3
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'script',
  key: null,
  ref: null,
  props: { src: '/javascripts/jquery.js' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object script
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'head',
  key: null,
  ref: null,
  props: { children: [ [Object], [Object], [Object], [Object] ] },
  _owner: null,
  _store: {} }
output length 0
Looking at - some anonymous bozo function () {
            header(function() {
              h1(x.title || 'Untitled');
              return nav(function() {
                return ul(function() {
                  if (path !== '/') {
                    li(function() {
                      return a({
                        href: '/'
                      }, 'Home');
                    });
                  }
                  li(function() {
                    return a({
                      href: '/chunky'
                    }, 'Bacon!');
                  });
                  switch (user.role) {
                    case 'owner':
                    case 'admin':
                      return li(function() {
                        return a({
                          href: '/admin'
                        }, 'Secret Stuff');
                      });
                    case 'vip':
                      return li(function() {
                        return a({
                          href: '/vip'
                        }, 'Exclusive Stuff');
                      });
                    default:
                      return li(function() {
                        return a({
                          href: '/commoners'
                        }, 'Just Stuff');
                      });
                  }
                });
              });
            });
            section(function() {
              var i, j, ref1, results;
              h2("Let's count to " + max + ":");
              results = [];
              for (i = j = 1, ref1 = max; 1 <= ref1 ? j <= ref1 : j >= ref1; i = 1 <= ref1 ? ++j : --j) {
                results.push(p(i));
              }
              return results;
            });
            return footer(function() {
              return p(shoutify('bye'));
            });
          }
March Halvalla - to component function () {
            header(function() {
              h1(x.title || 'Untitled');
              return nav(function() {
                return ul(function() {
                  if (path !== '/') {
                    li(function() {
                      return a({
                        href: '/'
                      }, 'Home');
                    });
                  }
                  li(function() {
                    return a({
                      href: '/chunky'
                    }, 'Bacon!');
                  });
                  switch (user.role) {
                    case 'owner':
                    case 'admin':
                      return li(function() {
                        return a({
                          href: '/admin'
                        }, 'Secret Stuff');
                      });
                    case 'vip':
                      return li(function() {
                        return a({
                          href: '/vip'
                        }, 'Exclusive Stuff');
                      });
                    default:
                      return li(function() {
                        return a({
                          href: '/commoners'
                        }, 'Just Stuff');
                      });
                  }
                });
              });
            });
            section(function() {
              var i, j, ref1, results;
              h2("Let's count to " + max + ":");
              results = [];
              for (i = j = 1, ref1 = max; 1 <= ref1 ? j <= ref1 : j >= ref1; i = 1 <= ref1 ? ++j : --j) {
                results.push(p(i));
              }
              return results;
            });
            return footer(function() {
              return p(shoutify('bye'));
            });
          }
Constructor name Function
Looking at - some anonymous bozo function () {
              h1(x.title || 'Untitled');
              return nav(function() {
                return ul(function() {
                  if (path !== '/') {
                    li(function() {
                      return a({
                        href: '/'
                      }, 'Home');
                    });
                  }
                  li(function() {
                    return a({
                      href: '/chunky'
                    }, 'Bacon!');
                  });
                  switch (user.role) {
                    case 'owner':
                    case 'admin':
                      return li(function() {
                        return a({
                          href: '/admin'
                        }, 'Secret Stuff');
                      });
                    case 'vip':
                      return li(function() {
                        return a({
                          href: '/vip'
                        }, 'Exclusive Stuff');
                      });
                    default:
                      return li(function() {
                        return a({
                          href: '/commoners'
                        }, 'Just Stuff');
                      });
                  }
                });
              });
            }
March Halvalla - to component function () {
              h1(x.title || 'Untitled');
              return nav(function() {
                return ul(function() {
                  if (path !== '/') {
                    li(function() {
                      return a({
                        href: '/'
                      }, 'Home');
                    });
                  }
                  li(function() {
                    return a({
                      href: '/chunky'
                    }, 'Bacon!');
                  });
                  switch (user.role) {
                    case 'owner':
                    case 'admin':
                      return li(function() {
                        return a({
                          href: '/admin'
                        }, 'Secret Stuff');
                      });
                    case 'vip':
                      return li(function() {
                        return a({
                          href: '/vip'
                        }, 'Exclusive Stuff');
                      });
                    default:
                      return li(function() {
                        return a({
                          href: '/commoners'
                        }, 'Just Stuff');
                      });
                  }
                });
              });
            }
Constructor name Function
Looking at - some anonymous bozo Foo
March Halvalla - to component [String: 'Foo']
Constructor name String
shipping [String: 'Foo']
output length 0
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'h1',
  key: null,
  ref: null,
  props: { children: 'Foo' },
  _owner: null,
  _store: {} }
output length 0
Looking at - some anonymous bozo function () {
                return ul(function() {
                  if (path !== '/') {
                    li(function() {
                      return a({
                        href: '/'
                      }, 'Home');
                    });
                  }
                  li(function() {
                    return a({
                      href: '/chunky'
                    }, 'Bacon!');
                  });
                  switch (user.role) {
                    case 'owner':
                    case 'admin':
                      return li(function() {
                        return a({
                          href: '/admin'
                        }, 'Secret Stuff');
                      });
                    case 'vip':
                      return li(function() {
                        return a({
                          href: '/vip'
                        }, 'Exclusive Stuff');
                      });
                    default:
                      return li(function() {
                        return a({
                          href: '/commoners'
                        }, 'Just Stuff');
                      });
                  }
                });
              }
March Halvalla - to component function () {
                return ul(function() {
                  if (path !== '/') {
                    li(function() {
                      return a({
                        href: '/'
                      }, 'Home');
                    });
                  }
                  li(function() {
                    return a({
                      href: '/chunky'
                    }, 'Bacon!');
                  });
                  switch (user.role) {
                    case 'owner':
                    case 'admin':
                      return li(function() {
                        return a({
                          href: '/admin'
                        }, 'Secret Stuff');
                      });
                    case 'vip':
                      return li(function() {
                        return a({
                          href: '/vip'
                        }, 'Exclusive Stuff');
                      });
                    default:
                      return li(function() {
                        return a({
                          href: '/commoners'
                        }, 'Just Stuff');
                      });
                  }
                });
              }
Constructor name Function
Looking at - some anonymous bozo function () {
                  if (path !== '/') {
                    li(function() {
                      return a({
                        href: '/'
                      }, 'Home');
                    });
                  }
                  li(function() {
                    return a({
                      href: '/chunky'
                    }, 'Bacon!');
                  });
                  switch (user.role) {
                    case 'owner':
                    case 'admin':
                      return li(function() {
                        return a({
                          href: '/admin'
                        }, 'Secret Stuff');
                      });
                    case 'vip':
                      return li(function() {
                        return a({
                          href: '/vip'
                        }, 'Exclusive Stuff');
                      });
                    default:
                      return li(function() {
                        return a({
                          href: '/commoners'
                        }, 'Just Stuff');
                      });
                  }
                }
March Halvalla - to component function () {
                  if (path !== '/') {
                    li(function() {
                      return a({
                        href: '/'
                      }, 'Home');
                    });
                  }
                  li(function() {
                    return a({
                      href: '/chunky'
                    }, 'Bacon!');
                  });
                  switch (user.role) {
                    case 'owner':
                    case 'admin':
                      return li(function() {
                        return a({
                          href: '/admin'
                        }, 'Secret Stuff');
                      });
                    case 'vip':
                      return li(function() {
                        return a({
                          href: '/vip'
                        }, 'Exclusive Stuff');
                      });
                    default:
                      return li(function() {
                        return a({
                          href: '/commoners'
                        }, 'Just Stuff');
                      });
                  }
                }
Constructor name Function
Looking at - some anonymous bozo function () {
                      return a({
                        href: '/'
                      }, 'Home');
                    }
March Halvalla - to component function () {
                      return a({
                        href: '/'
                      }, 'Home');
                    }
Constructor name Function
Looking at - some anonymous bozo Home
March Halvalla - to component [String: 'Home']
Constructor name String
shipping [String: 'Home']
output length 0
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'a',
  key: null,
  ref: null,
  props: { href: '/', children: 'Home' },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'a',
  key: null,
  ref: null,
  props: { href: '/', children: 'Home' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object a
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'li',
  key: null,
  ref: null,
  props: 
   { children: 
      { '$$typeof': Symbol(react.element),
        type: 'a',
        key: null,
        ref: null,
        props: [Object],
        _owner: null,
        _store: {} } },
  _owner: null,
  _store: {} }
output length 0
Looking at - some anonymous bozo function () {
                    return a({
                      href: '/chunky'
                    }, 'Bacon!');
                  }
March Halvalla - to component function () {
                    return a({
                      href: '/chunky'
                    }, 'Bacon!');
                  }
Constructor name Function
Looking at - some anonymous bozo Bacon!
March Halvalla - to component [String: 'Bacon!']
Constructor name String
shipping [String: 'Bacon!']
output length 0
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'a',
  key: null,
  ref: null,
  props: { href: '/chunky', children: 'Bacon!' },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'a',
  key: null,
  ref: null,
  props: { href: '/chunky', children: 'Bacon!' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object a
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'li',
  key: null,
  ref: null,
  props: 
   { children: 
      { '$$typeof': Symbol(react.element),
        type: 'a',
        key: null,
        ref: null,
        props: [Object],
        _owner: null,
        _store: {} } },
  _owner: null,
  _store: {} }
output length 1
Looking at - some anonymous bozo function () {
                        return a({
                          href: '/commoners'
                        }, 'Just Stuff');
                      }
March Halvalla - to component function () {
                        return a({
                          href: '/commoners'
                        }, 'Just Stuff');
                      }
Constructor name Function
Looking at - some anonymous bozo Just Stuff
March Halvalla - to component [String: 'Just Stuff']
Constructor name String
shipping [String: 'Just Stuff']
output length 0
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'a',
  key: null,
  ref: null,
  props: { href: '/commoners', children: 'Just Stuff' },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'a',
  key: null,
  ref: null,
  props: { href: '/commoners', children: 'Just Stuff' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object a
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'li',
  key: null,
  ref: null,
  props: 
   { children: 
      { '$$typeof': Symbol(react.element),
        type: 'a',
        key: null,
        ref: null,
        props: [Object],
        _owner: null,
        _store: {} } },
  _owner: null,
  _store: {} }
output length 2
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'li',
  key: null,
  ref: null,
  props: 
   { children: 
      { '$$typeof': Symbol(react.element),
        type: 'a',
        key: null,
        ref: null,
        props: [Object],
        _owner: null,
        _store: {} } },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object li
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'ul',
  key: null,
  ref: null,
  props: { children: [ [Object], [Object], [Object] ] },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'ul',
  key: null,
  ref: null,
  props: { children: [ [Object], [Object], [Object] ] },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object ul
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'nav',
  key: null,
  ref: null,
  props: 
   { children: 
      { '$$typeof': Symbol(react.element),
        type: 'ul',
        key: null,
        ref: null,
        props: [Object],
        _owner: null,
        _store: {} } },
  _owner: null,
  _store: {} }
output length 1
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'nav',
  key: null,
  ref: null,
  props: 
   { children: 
      { '$$typeof': Symbol(react.element),
        type: 'ul',
        key: null,
        ref: null,
        props: [Object],
        _owner: null,
        _store: {} } },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object nav
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'header',
  key: null,
  ref: null,
  props: { children: [ [Object], [Object] ] },
  _owner: null,
  _store: {} }
output length 0
Looking at - some anonymous bozo function () {
              var i, j, ref1, results;
              h2("Let's count to " + max + ":");
              results = [];
              for (i = j = 1, ref1 = max; 1 <= ref1 ? j <= ref1 : j >= ref1; i = 1 <= ref1 ? ++j : --j) {
                results.push(p(i));
              }
              return results;
            }
March Halvalla - to component function () {
              var i, j, ref1, results;
              h2("Let's count to " + max + ":");
              results = [];
              for (i = j = 1, ref1 = max; 1 <= ref1 ? j <= ref1 : j >= ref1; i = 1 <= ref1 ? ++j : --j) {
                results.push(p(i));
              }
              return results;
            }
Constructor name Function
Looking at - some anonymous bozo Let's count to 12:
March Halvalla - to component [String: 'Let\'s count to 12:']
Constructor name String
shipping [String: 'Let\'s count to 12:']
output length 0
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'h2',
  key: null,
  ref: null,
  props: { children: 'Let\'s count to 12:' },
  _owner: null,
  _store: {} }
output length 0
Looking at - some anonymous bozo 1
March Halvalla - to component [String: '1']
Constructor name String
shipping [String: '1']
output length 0
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: '1' },
  _owner: null,
  _store: {} }
output length 1
Looking at - some anonymous bozo 2
March Halvalla - to component [String: '2']
Constructor name String
shipping [String: '2']
output length 0
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: '2' },
  _owner: null,
  _store: {} }
output length 2
Looking at - some anonymous bozo 3
March Halvalla - to component [String: '3']
Constructor name String
shipping [String: '3']
output length 0
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: '3' },
  _owner: null,
  _store: {} }
output length 3
Looking at - some anonymous bozo 4
March Halvalla - to component [String: '4']
Constructor name String
shipping [String: '4']
output length 0
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: '4' },
  _owner: null,
  _store: {} }
output length 4
Looking at - some anonymous bozo 5
March Halvalla - to component [String: '5']
Constructor name String
shipping [String: '5']
output length 0
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: '5' },
  _owner: null,
  _store: {} }
output length 5
Looking at - some anonymous bozo 6
March Halvalla - to component [String: '6']
Constructor name String
shipping [String: '6']
output length 0
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: '6' },
  _owner: null,
  _store: {} }
output length 6
Looking at - some anonymous bozo 7
March Halvalla - to component [String: '7']
Constructor name String
shipping [String: '7']
output length 0
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: '7' },
  _owner: null,
  _store: {} }
output length 7
Looking at - some anonymous bozo 8
March Halvalla - to component [String: '8']
Constructor name String
shipping [String: '8']
output length 0
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: '8' },
  _owner: null,
  _store: {} }
output length 8
Looking at - some anonymous bozo 9
March Halvalla - to component [String: '9']
Constructor name String
shipping [String: '9']
output length 0
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: '9' },
  _owner: null,
  _store: {} }
output length 9
Looking at - some anonymous bozo 10
March Halvalla - to component [String: '10']
Constructor name String
shipping [String: '10']
output length 0
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: '10' },
  _owner: null,
  _store: {} }
output length 10
Looking at - some anonymous bozo 11
March Halvalla - to component [String: '11']
Constructor name String
shipping [String: '11']
output length 0
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: '11' },
  _owner: null,
  _store: {} }
output length 11
Looking at - some anonymous bozo 12
March Halvalla - to component [String: '12']
Constructor name String
shipping [String: '12']
output length 0
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: '12' },
  _owner: null,
  _store: {} }
output length 12
reinspect some anonymous bozo [object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object]
reinspect React Element no Can!
reinspect React Element no Can!
reinspect React Element no Can!
reinspect React Element no Can!
reinspect React Element no Can!
reinspect React Element no Can!
reinspect React Element no Can!
reinspect React Element no Can!
reinspect React Element no Can!
reinspect React Element no Can!
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: '1' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object p
shipping { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: '1' },
  _owner: null,
  _store: {} }
output length 13
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: '2' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object p
shipping { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: '2' },
  _owner: null,
  _store: {} }
output length 14
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: '3' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object p
shipping { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: '3' },
  _owner: null,
  _store: {} }
output length 15
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: '4' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object p
shipping { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: '4' },
  _owner: null,
  _store: {} }
output length 16
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: '5' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object p
shipping { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: '5' },
  _owner: null,
  _store: {} }
output length 17
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: '6' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object p
shipping { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: '6' },
  _owner: null,
  _store: {} }
output length 18
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: '7' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object p
shipping { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: '7' },
  _owner: null,
  _store: {} }
output length 19
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: '8' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object p
shipping { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: '8' },
  _owner: null,
  _store: {} }
output length 20
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: '9' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object p
shipping { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: '9' },
  _owner: null,
  _store: {} }
output length 21
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: '10' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object p
shipping { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: '10' },
  _owner: null,
  _store: {} }
output length 22
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: '11' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object p
shipping { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: '11' },
  _owner: null,
  _store: {} }
output length 23
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: '12' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object p
shipping { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: '12' },
  _owner: null,
  _store: {} }
output length 24
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'section',
  key: null,
  ref: null,
  props: 
   { children: 
      [ [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object] ] },
  _owner: null,
  _store: {} }
output length 1
Looking at - some anonymous bozo function () {
              return p(shoutify('bye'));
            }
March Halvalla - to component function () {
              return p(shoutify('bye'));
            }
Constructor name Function
Looking at - some anonymous bozo BYE!
March Halvalla - to component [String: 'BYE!']
Constructor name String
shipping [String: 'BYE!']
output length 0
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: 'BYE!' },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: 'BYE!' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object p
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'footer',
  key: null,
  ref: null,
  props: 
   { children: 
      { '$$typeof': Symbol(react.element),
        type: 'p',
        key: null,
        ref: null,
        props: [Object],
        _owner: null,
        _store: {} } },
  _owner: null,
  _store: {} }
output length 2
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'footer',
  key: null,
  ref: null,
  props: 
   { children: 
      { '$$typeof': Symbol(react.element),
        type: 'p',
        key: null,
        ref: null,
        props: [Object],
        _owner: null,
        _store: {} } },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object footer
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'body',
  key: null,
  ref: null,
  props: { children: [ [Object], [Object], [Object] ] },
  _owner: null,
  _store: {} }
output length 1
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'body',
  key: null,
  ref: null,
  props: { children: [ [Object], [Object], [Object] ] },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object body
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'html',
  key: null,
  ref: null,
  props: { children: [ [Object], [Object] ] },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'html',
  key: null,
  ref: null,
  props: { children: [ [Object], [Object] ] },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object html
Looking at - All Done! We close bag now

    ✓ works (69ms)

  components with child
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo function () {
          var x;
          x = div(".aclass", 'some text');
          return x;
        }
March Halvalla - to component function () {
          var x;
          x = div(".aclass", 'some text');
          return x;
        }
Constructor name Function
Looking at - some anonymous bozo some text
March Halvalla - to component [String: 'some text']
Constructor name String
shipping [String: 'some text']
output length 0
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'div',
  key: null,
  ref: null,
  props: { class: 'aclass', className: 'aclass', children: 'some text' },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'div',
  key: null,
  ref: null,
  props: { class: 'aclass', className: 'aclass', children: 'some text' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object div
Looking at - All Done! We close bag now

Activvating NEW
shipping { '$$typeof': Symbol(react.element),
  type: 'dooDad',
  key: null,
  ref: null,
  props: 
   { label: 'Boo',
     children: 
      { '$$typeof': Symbol(react.element),
        type: 'div',
        key: null,
        ref: null,
        props: [Object],
        _owner: null,
        _store: {} } },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'dooDad',
  key: null,
  ref: null,
  props: 
   { label: 'Boo',
     children: 
      { '$$typeof': Symbol(react.element),
        type: 'div',
        key: null,
        ref: null,
        props: [Object],
        _owner: null,
        _store: {} } },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object dooDad
Looking at - All Done! We close bag now

    1) renders child with dooDad

  components
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo function () {
          return span('A single text child');
        }
March Halvalla - to component function () {
          return span('A single text child');
        }
Constructor name Function
Looking at - some anonymous bozo A single text child
March Halvalla - to component [String: 'A single text child']
Constructor name String
shipping [String: 'A single text child']
output length 0
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'span',
  key: null,
  ref: null,
  props: { children: 'A single text child' },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'span',
  key: null,
  ref: null,
  props: { children: 'A single text child' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object span
Looking at - All Done! We close bag now

Activvating NEW
shipping { '$$typeof': Symbol(react.element),
  type: 'dooDad',
  key: null,
  ref: null,
  props: 
   { label: 'Label text.',
     children: 
      { '$$typeof': Symbol(react.element),
        type: 'span',
        key: null,
        ref: null,
        props: [Object],
        _owner: null,
        _store: {} } },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'dooDad',
  key: null,
  ref: null,
  props: 
   { label: 'Label text.',
     children: 
      { '$$typeof': Symbol(react.element),
        type: 'span',
        key: null,
        ref: null,
        props: [Object],
        _owner: null,
        _store: {} } },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object dooDad
Looking at - All Done! We close bag now

    2) render with dooDad

  use of render in classes
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Activvating NEW
shipping { '$$typeof': Symbol(react.element),
  type: 'widget',
  key: null,
  ref: null,
  props: {},
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'widget',
  key: null,
  ref: null,
  props: {},
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object widget
Looking at - All Done! We close bag now

    3) supports a single child

  nesting components
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo function () {
          dooDad({
            label: 'B'
          });
          return dooDad({
            label: 'C'
          });
        }
March Halvalla - to component function () {
          dooDad({
            label: 'B'
          });
          return dooDad({
            label: 'C'
          });
        }
Constructor name Function
Activvating NEW
shipping { '$$typeof': Symbol(react.element),
  type: 'dooDad',
  key: null,
  ref: null,
  props: { label: 'B' },
  _owner: null,
  _store: {} }
output length 0
Activvating NEW
shipping { '$$typeof': Symbol(react.element),
  type: 'dooDad',
  key: null,
  ref: null,
  props: { label: 'C' },
  _owner: null,
  _store: {} }
output length 1
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'dooDad',
  key: null,
  ref: null,
  props: { label: 'C' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object dooDad
Looking at - All Done! We close bag now

Activvating NEW
shipping { '$$typeof': Symbol(react.element),
  type: 'dooDad',
  key: null,
  ref: null,
  props: { label: 'A', children: [ [Object], [Object] ] },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'dooDad',
  key: null,
  ref: null,
  props: { label: 'A', children: [ [Object], [Object] ] },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object dooDad
Looking at - All Done! We close bag now

    4) supports a multipl children

  render
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo foobar
March Halvalla - to component [String: 'foobar']
Constructor name String
shipping [String: 'foobar']
output length 0
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: 'foobar' },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: 'foobar' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object p
Looking at - All Done! We close bag now

    ✓ renders text verbatim
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo 1
March Halvalla - to component [String: '1']
Constructor name String
shipping [String: '1']
output length 0
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: '1' },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: '1' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object p
Looking at - All Done! We close bag now

Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo 0
March Halvalla - to component [String: '0']
Constructor name String
shipping [String: '0']
output length 0
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: '0' },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: '0' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object p
Looking at - All Done! We close bag now

    ✓ renders numbers
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
shipping { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: {},
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: {},
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object p
Looking at - All Done! We close bag now

    ✓ renders undefined as ''
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
shipping { '$$typeof': Symbol(react.element),
  type: 'script',
  key: null,
  ref: null,
  props: { src: 'js/app.js' },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'script',
  key: null,
  ref: null,
  props: { src: 'js/app.js' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object script
Looking at - All Done! We close bag now

    ✓ renders empty tags
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
    5) renders text tags as strings
    6) throws on undefined element types

  CSS Selectors
    id selector
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo foo
March Halvalla - to component [String: 'foo']
Constructor name String
shipping [String: 'foo']
output length 0
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'div',
  key: null,
  ref: null,
  props: { id: 'myid', children: 'foo' },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'div',
  key: null,
  ref: null,
  props: { id: 'myid', children: 'foo' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object div
Looking at - All Done! We close bag now

      ✓ sets the id attribute
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo #
March Halvalla - to component [String: '#']
Constructor name String
shipping [String: '#']
output length 0
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'div',
  key: null,
  ref: null,
  props: { children: '#' },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'div',
  key: null,
  ref: null,
  props: { children: '#' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object div
Looking at - All Done! We close bag now

      ✓ must be greater than length 1
    one class selector
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo foo
March Halvalla - to component [String: 'foo']
Constructor name String
shipping [String: 'foo']
output length 0
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'div',
  key: null,
  ref: null,
  props: { class: 'myclass', className: 'myclass', children: 'foo' },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'div',
  key: null,
  ref: null,
  props: { class: 'myclass', className: 'myclass', children: 'foo' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object div
Looking at - All Done! We close bag now

      ✓ adds an html class
      and a class attribute
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo foo
March Halvalla - to component [String: 'foo']
Constructor name String
shipping [String: 'foo']
output length 0
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'div',
  key: null,
  ref: null,
  props: 
   { className: 'myclass myattrclass',
     class: 'myclass',
     children: 'foo' },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'div',
  key: null,
  ref: null,
  props: 
   { className: 'myclass myattrclass',
     class: 'myclass',
     children: 'foo' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object div
Looking at - All Done! We close bag now

        ✓ prepends the selector class
    multi-class selector
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo foo
March Halvalla - to component [String: 'foo']
Constructor name String
shipping [String: 'foo']
output length 0
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'div',
  key: null,
  ref: null,
  props: 
   { class: 'myclass myclass2 myclass3',
     className: 'myclass myclass2 myclass3',
     children: 'foo' },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'div',
  key: null,
  ref: null,
  props: 
   { class: 'myclass myclass2 myclass3',
     className: 'myclass myclass2 myclass3',
     children: 'foo' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object div
Looking at - All Done! We close bag now

      ✓ adds all the classes
    with an id and classes, separated by spaces
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
shipping { '$$typeof': Symbol(react.element),
  type: 'div',
  key: null,
  ref: null,
  props: 
   { id: 'myid',
     class: 'myclass1 myclass2',
     className: 'myclass1 myclass2' },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'div',
  key: null,
  ref: null,
  props: 
   { id: 'myid',
     class: 'myclass1 myclass2',
     className: 'myclass1 myclass2' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object div
Looking at - All Done! We close bag now

      ✓ adds ids and classes with minimal whitespace
    without contents
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
shipping { '$$typeof': Symbol(react.element),
  type: 'img',
  key: null,
  ref: null,
  props: 
   { src: '/pic.png',
     id: 'myid',
     class: 'myclass',
     className: 'myclass' },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'img',
  key: null,
  ref: null,
  props: 
   { src: '/pic.png',
     id: 'myid',
     class: 'myclass',
     className: 'myclass' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object img
Looking at - All Done! We close bag now

      ✓ still adds attributes

  custom tag
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
shipping { '$$typeof': Symbol(react.element),
  type: 'custom',
  key: null,
  ref: null,
  props: {},
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'custom',
  key: null,
  ref: null,
  props: {},
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object custom
Looking at - All Done! We close bag now

    ✓ should render
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
shipping { '$$typeof': Symbol(react.element),
  type: 'custom',
  key: null,
  ref: null,
  props: {},
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'custom',
  key: null,
  ref: null,
  props: {},
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object custom
Looking at - All Done! We close bag now

    ✓ should render empty given null content
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
shipping { '$$typeof': Symbol(react.element),
  type: 'custom',
  key: null,
  ref: null,
  props: { id: 'bar' },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'custom',
  key: null,
  ref: null,
  props: { id: 'bar' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object custom
Looking at - All Done! We close bag now

    ✓ should render with attributes
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo zag
March Halvalla - to component [String: 'zag']
Constructor name String
shipping [String: 'zag']
output length 0
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'custom',
  key: null,
  ref: null,
  props: { id: 'bar', children: 'zag' },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'custom',
  key: null,
  ref: null,
  props: { id: 'bar', children: 'zag' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object custom
Looking at - All Done! We close bag now

    ✓ should render with attributes and content

  Auto escaping
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
shipping { '$$typeof': Symbol(react.element),
  type: 'input',
  key: null,
  ref: null,
  props: { name: '"pwned' },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'input',
  key: null,
  ref: null,
  props: { name: '"pwned' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object input
Looking at - All Done! We close bag now

    ✓ escapes crel attributes
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
shipping { '$$typeof': Symbol(react.element),
  type: 'input',
  key: null,
  ref: null,
  props: { name: '\'pwned' },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'input',
  key: null,
  ref: null,
  props: { name: '\'pwned' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object input
Looking at - All Done! We close bag now

    ✓ escapea single quotes in crel attributes
    a script crel
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo <script>alert('"owned" by c&a &copy;')</script>
March Halvalla - to component [String: '<script>alert(\'"owned" by c&a &copy;\')</script>']
Constructor name String
shipping [String: '<script>alert(\'"owned" by c&a &copy;\')</script>']
output length 0
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'h1',
  key: null,
  ref: null,
  props: { children: '<script>alert(\'"owned" by c&a &copy;\')</script>' },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'h1',
  key: null,
  ref: null,
  props: { children: '<script>alert(\'"owned" by c&a &copy;\')</script>' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object h1
Looking at - All Done! We close bag now

      ✓ adds HTML entities for sensitive characters

  script crel
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo window.user = {"name":"</script><script>alert(\"alert\");</script>"}
March Halvalla - to component [String: 'window.user = {"name":"</script><script>alert(\\"alert\\");</script>"}']
Constructor name String
shipping [String: 'window.user = {"name":"</script><script>alert(\\"alert\\");</script>"}']
output length 0
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'script',
  key: null,
  ref: null,
  props: { children: 'window.user = {"name":"</script><script>alert(\\"alert\\");</script>"}' },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'script',
  key: null,
  ref: null,
  props: { children: 'window.user = {"name":"</script><script>alert(\\"alert\\");</script>"}' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object script
Looking at - All Done! We close bag now

    ✓ escapes /

  HereDocs
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo $(document).ready(function(){
  alert('test');
});
March Halvalla - to component [String: '$(document).ready(function(){\n  alert(\'test\');\n});']
Constructor name String
shipping [String: '$(document).ready(function(){\n  alert(\'test\');\n});']
output length 0
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'script',
  key: null,
  ref: null,
  props: { children: '$(document).ready(function(){\n  alert(\'test\');\n});' },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'script',
  key: null,
  ref: null,
  props: { children: '$(document).ready(function(){\n  alert(\'test\');\n});' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object script
Looking at - All Done! We close bag now

    ✓ preserves line breaks

  nesting templates
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo function () {
          return nameHelper(user);
        }
March Halvalla - to component function () {
          return nameHelper(user);
        }
Constructor name Function
Looking at - some anonymous bozo Huevo Bueno
March Halvalla - to component [String: 'Huevo Bueno']
Constructor name String
shipping [String: 'Huevo Bueno']
output length 0
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: 'Huevo Bueno' },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: 'Huevo Bueno' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object p
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'div',
  key: null,
  ref: null,
  props: 
   { children: 
      { '$$typeof': Symbol(react.element),
        type: 'p',
        key: null,
        ref: null,
        props: [Object],
        _owner: null,
        _store: {} } },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'div',
  key: null,
  ref: null,
  props: 
   { children: 
      { '$$typeof': Symbol(react.element),
        type: 'p',
        key: null,
        ref: null,
        props: [Object],
        _owner: null,
        _store: {} } },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object div
Looking at - All Done! We close bag now

    ✓ renders nested template in the same output
    pureComponent
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo Huevo
March Halvalla - to component [String: 'Huevo']
Constructor name String
shipping [String: 'Huevo']
output length 0
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'span',
  key: null,
  ref: null,
  props: { children: 'Huevo' },
  _owner: null,
  _store: {} }
output length 0
Looking at - some anonymous bozo Bueno
March Halvalla - to component [String: 'Bueno']
Constructor name String
shipping [String: 'Bueno']
output length 0
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'span',
  key: null,
  ref: null,
  props: { children: 'Bueno' },
  _owner: null,
  _store: {} }
output length 1
shipping [ { '$$typeof': Symbol(react.element),
    type: 'span',
    key: null,
    ref: null,
    props: { children: 'Bueno' },
    _owner: null,
    _store: {} },
  { '$$typeof': Symbol(react.element),
    type: 'span',
    key: null,
    ref: null,
    props: { children: 'Huevo' },
    _owner: null,
    _store: {} } ]
output length 2
Looking at - some anonymous bozo [object Object],[object Object],[object Object],[object Object]
March Halvalla - to component [object Object],[object Object],[object Object],[object Object]
Constructor name String
shipping [object Object],[object Object],[object Object],[object Object]
output length 0
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'div',
  key: null,
  ref: null,
  props: { children: '[object Object],[object Object],[object Object],[object Object]' },
  _owner: null,
  _store: {} }
output length 3
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'div',
  key: null,
  ref: null,
  props: { children: '[object Object],[object Object],[object Object],[object Object]' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object div
Looking at - All Done! We close bag now

      7) returns components without adding them to the parent stack

  plugins
    ✓ are applied via use

  render
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo function () {
          a('.first', d, "link 1");
          return a(d, "link 2");
        }
March Halvalla - to component function () {
          a('.first', d, "link 1");
          return a(d, "link 2");
        }
Constructor name Function
Looking at - some anonymous bozo link 1
March Halvalla - to component [String: 'link 1']
Constructor name String
shipping [String: 'link 1']
output length 0
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'a',
  key: null,
  ref: null,
  props: 
   { id: 'foobar',
     href: 'http://example.com',
     class: 'first',
     className: 'first',
     children: 'link 1' },
  _owner: null,
  _store: {} }
output length 0
Looking at - some anonymous bozo link 2
March Halvalla - to component [String: 'link 2']
Constructor name String
shipping [String: 'link 2']
output length 0
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'a',
  key: null,
  ref: null,
  props: { id: 'foobar', href: 'http://example.com', children: 'link 2' },
  _owner: null,
  _store: {} }
output length 1
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'a',
  key: null,
  ref: null,
  props: { id: 'foobar', href: 'http://example.com', children: 'link 2' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object a
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: [ [Object], [Object] ] },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { children: [ [Object], [Object] ] },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object p
Looking at - All Done! We close bag now

    8) doesn't modify the attributes object
    nested in a template
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo function () {
                  return a({
                    href: '/'
                  }, 'a link');
                }
March Halvalla - to component function () {
                  return a({
                    href: '/'
                  }, 'a link');
                }
Constructor name Function
Looking at - some anonymous bozo a link
March Halvalla - to component [String: 'a link']
Constructor name String
shipping [String: 'a link']
output length 0
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'a',
  key: null,
  ref: null,
  props: { href: '/', children: 'a link' },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'a',
  key: null,
  ref: null,
  props: { href: '/', children: 'a link' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object a
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'strong',
  key: null,
  ref: null,
  props: 
   { children: 
      { '$$typeof': Symbol(react.element),
        type: 'a',
        key: null,
        ref: null,
        props: [Object],
        _owner: null,
        _store: {} } },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'strong',
  key: null,
  ref: null,
  props: 
   { children: 
      { '$$typeof': Symbol(react.element),
        type: 'a',
        key: null,
        ref: null,
        props: [Object],
        _owner: null,
        _store: {} } },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object strong
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { dangerouslySetInnerHTML: { __html: 'This text could use <strong><a href="/">a link</a></strong>.' } },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'p',
  key: null,
  ref: null,
  props: { dangerouslySetInnerHTML: { __html: 'This text could use <strong><a href="/">a link</a></strong>.' } },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object p
Looking at - All Done! We close bag now

      ✓ returns the nested template without clobbering the parent result

  Self Closing Tags
    <img/>
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
shipping { '$$typeof': Symbol(react.element),
  type: 'img',
  key: null,
  ref: null,
  props: {},
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'img',
  key: null,
  ref: null,
  props: {},
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object img
Looking at - All Done! We close bag now

      ✓ should render
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
shipping { '$$typeof': Symbol(react.element),
  type: 'img',
  key: null,
  ref: null,
  props: { src: 'http://foo.jpg.to' },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'img',
  key: null,
  ref: null,
  props: { src: 'http://foo.jpg.to' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object img
Looking at - All Done! We close bag now

      ✓ should render with attributes
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
      ✓ should throw when passed content
    <br/>
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
shipping { '$$typeof': Symbol(react.element),
  type: 'br',
  key: null,
  ref: null,
  props: {},
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'br',
  key: null,
  ref: null,
  props: {},
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object br
Looking at - All Done! We close bag now

      ✓ should render
    <link/>
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
shipping { '$$typeof': Symbol(react.element),
  type: 'link',
  key: null,
  ref: null,
  props: { href: '/foo.css', rel: 'stylesheet' },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'link',
  key: null,
  ref: null,
  props: { href: '/foo.css', rel: 'stylesheet' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object link
Looking at - All Done! We close bag now

      ✓ should render with attributes

  stack trace
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo function () {
          return p(function() {
            throw new Error();
          });
        }
March Halvalla - to component function () {
          return p(function() {
            throw new Error();
          });
        }
Constructor name Function
Looking at - some anonymous bozo function () {
            throw new Error();
          }
March Halvalla - to component function () {
            throw new Error();
          }
Constructor name Function
    ✓ should contain crel names

  text
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
shipping foobar
output length 0
reinspect some anonymous bozo foobar
reinspect some anonymous bozo foobar
illegal input in instantiation bag #{eachItem}
Looking at - some anonymous bozo foobar
March Halvalla - to component foobar
Constructor name String
Looking at - All Done! We close bag now

    9) renders text verbatim
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
shipping 1
output length 0
reinspect some anonymous bozo 1
reinspect some anonymous bozo 1
illegal input in instantiation bag #{eachItem}
Looking at - some anonymous bozo 1
March Halvalla - to component 1
Constructor name String
Looking at - All Done! We close bag now

    10) renders numbers

  Context data
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo bar
March Halvalla - to component [String: 'bar']
Constructor name String
shipping [String: 'bar']
output length 0
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'h1',
  key: null,
  ref: null,
  props: { children: 'bar' },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'h1',
  key: null,
  ref: null,
  props: { children: 'bar' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object h1
Looking at - All Done! We close bag now

    ✓ is an argument to the template function

  Local vars
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo dynamic: bar
March Halvalla - to component [String: 'dynamic: bar']
Constructor name String
shipping [String: 'dynamic: bar']
output length 0
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'h1',
  key: null,
  ref: null,
  props: { children: 'dynamic: bar' },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'h1',
  key: null,
  ref: null,
  props: { children: 'dynamic: bar' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object h1
Looking at - All Done! We close bag now

Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo dynamic: baz
March Halvalla - to component [String: 'dynamic: baz']
Constructor name String
shipping [String: 'dynamic: baz']
output length 0
Looking at - All Done! We close bag now

shipping { '$$typeof': Symbol(react.element),
  type: 'h1',
  key: null,
  ref: null,
  props: { children: 'dynamic: baz' },
  _owner: null,
  _store: {} }
output length 0
reinspect React Element no Can!
reinspect React Element no Can!
Looking at - React Element no Can!
March Halvalla - to component { '$$typeof': Symbol(react.element),
  type: 'h1',
  key: null,
  ref: null,
  props: { children: 'dynamic: baz' },
  _owner: null,
  _store: {} }
Constructor name Object
Tagname of March component type object h1
Looking at - All Done! We close bag now

    ✓ are in the template function closure


  35 passing (269ms)
  10 failing

  1) components with child
       renders child with dooDad:
     Error: expected '<dooDad label="Boo"><div class="aclass">some text</div></dooDad>' to equal '<div class="doodad">Boo<div class="aclass">some text</div><span>some last text</span></div>'
      at Assertion.assert (node_modules/expect.js/index.js:96:13)
      at Assertion.be.Assertion.equal (node_modules/expect.js/index.js:216:10)
      at Context.<anonymous> (test-react/components.coffee:31:22)
  

  2) components
       render with dooDad:
     Error: expected '<dooDad label="Label text."><span>A single text child</span></dooDad>' to equal '<div class="doodad">Label text.<span>A single text child</span><span>some last text</span></div>'
      at Assertion.assert (node_modules/expect.js/index.js:96:13)
      at Assertion.be.Assertion.equal (node_modules/expect.js/index.js:216:10)
      at Context.<anonymous> (test-react/components.coffee:38:22)
  

  3) use of render in classes
       supports a single child:
     Error: expected '<widget></widget>' to equal '<div class="foo"><div class="doodad">Doo<span>I&#x27;m passed to DooDad.props.children</span><span>some last text</span></div></div>'
      at Assertion.assert (node_modules/expect.js/index.js:96:13)
      at Assertion.be.Assertion.equal (node_modules/expect.js/index.js:216:10)
      at Context.<anonymous> (test-react/components.coffee:44:10)
  

  4) nesting components
       supports a multipl children:
     Error: expected '<dooDad label="A"><dooDad label="B"></dooDad><dooDad label="C"></dooDad></dooDad>' to equal '<div class="doodad">A<div class="doodad">C<span>some last text</span></div><span>some last text</span></div>'
      at Assertion.assert (node_modules/expect.js/index.js:96:13)
      at Assertion.be.Assertion.equal (node_modules/expect.js/index.js:216:10)
      at Context.<anonymous> (test-react/components.coffee:52:10)
  

  5) render
       renders text tags as strings:
     TypeError: tag.text is not a function
      at test-react/crel.coffee:21:26
      at lib/halvalla.js:605:25
      at Halvalla.march (lib/halvalla.js:540:17)
      at Halvalla.create (lib/halvalla.js:608:14)
      at Halvalla.render (lib/halvalla.js:622:31)
      at allTags.(anonymous function).bound.(anonymous function) (lib/halvalla.js:653:34)
      at Context.<anonymous> (test-react/crel.coffee:21:12)
  

  6) render
       throws on undefined element types:
     Error: expected 'HTML tag type is invalid: expected a string but got boolean' to match /got: undefined/
      at Assertion.assert (node_modules/expect.js/index.js:96:13)
      at Assertion.match (node_modules/expect.js/index.js:328:10)
      at Assertion.throwError.Assertion.throwException (node_modules/expect.js/index.js:156:30)
      at Context.<anonymous> (test-react/crel.coffee:24:51)
  

  7) nesting templates
       pureComponent
         returns components without adding them to the parent stack:
     Invariant Violation: renderToStaticMarkup(): You must pass a valid ReactElement.
      at invariant (node_modules/fbjs/lib/invariant.js:44:15)
      at GreatEmptiness.renderToStaticMarkup [as conjurer] (node_modules/react-dom/lib/ReactServerRendering.js:82:76)
      at lib/halvalla.js:631:31
      at Halvalla.render (lib/halvalla.js:634:9)
      at allTags.(anonymous function).bound.(anonymous function) (lib/halvalla.js:653:34)
      at Context.<anonymous> (test-react/nesting.coffee:33:14)
  

  8) render
       doesn't modify the attributes object:
     Error: expected '<p><a id="foobar" href="http://example.com" class="first">link 1</a><a id="foobar" href="http://example.com">link 2</a></p>' to equal '<p><a id="foobar" class="first" href="http://example.com">link 1</a><a id="foobar" href="http://example.com">link 2</a></p>'
      at Assertion.assert (node_modules/expect.js/index.js:96:13)
      at Assertion.be.Assertion.equal (node_modules/expect.js/index.js:216:10)
      at Context.<anonymous> (test-react/render.coffee:18:32)
  

  9) text
       renders text verbatim:
     Invariant Violation: renderToStaticMarkup(): You must pass a valid ReactElement.
      at invariant (node_modules/fbjs/lib/invariant.js:44:15)
      at GreatEmptiness.renderToStaticMarkup [as conjurer] (node_modules/react-dom/lib/ReactServerRendering.js:82:76)
      at lib/halvalla.js:631:31
      at Halvalla.render (lib/halvalla.js:634:9)
      at allTags.(anonymous function).bound.(anonymous function) (lib/halvalla.js:653:34)
      at Context.<anonymous> (test-react/text.coffee:7:12)
  

  10) text
       renders numbers:
     Invariant Violation: renderToStaticMarkup(): You must pass a valid ReactElement.
      at invariant (node_modules/fbjs/lib/invariant.js:44:15)
      at GreatEmptiness.renderToStaticMarkup [as conjurer] (node_modules/react-dom/lib/ReactServerRendering.js:82:76)
      at lib/halvalla.js:631:31
      at Halvalla.render (lib/halvalla.js:634:9)
      at allTags.(anonymous function).bound.(anonymous function) (lib/halvalla.js:653:34)
      at Context.<anonymous> (test-react/text.coffee:12:12)
  




> halvalla@1.6.0 test-teacup /Users/jim/clones/halvalla
> rm test; ln -s test-teacup test; mocha



  Attributes
    with a hash
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Element construct Element {
  children: [],
  tagName: 'a',
  tag: 'a',
  attrs: { href: '/', title: 'Home' },
  _Halvalla: 
   { birthName: 'Acolyte James',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'a', '1': { href: '/', title: 'Home' } }
shipping Element {
  children: [],
  tagName: 'a',
  tag: 'a',
  attrs: { href: '/', title: 'Home' },
  _Halvalla: 
   { birthName: 'Acolyte James',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte James
reinspect Acolyte James
Looking at - Acolyte James
March Halvalla - to component Element {
  children: [],
  tagName: 'a',
  tag: 'a',
  attrs: { href: '/', title: 'Home' },
  _Halvalla: 
   { birthName: 'Acolyte James',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object a
Looking at - All Done! We close bag now

Looking at - Acolyte James
March Teacup Acolyte James
CELL! Element {
  children: [],
  tagName: 'a',
  tag: 'a',
  attrs: { href: '/', title: 'Home' },
  _Halvalla: 
   { birthName: 'Acolyte James',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <a href="/" title="Home">
Looking at - All Done! We close bag now

Final Render 
Teacup::tag final result <a href="/" title="Home"></a>
shipping <a href="/" title="Home"></a>
output length 0
Looking at - All Done! We close bag now

Final Render <a href="/" title="Home"></a>
      ✓ renders the corresponding HTML attributes
    Boolean true value
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Element construct Element {
  children: [],
  tagName: 'br',
  tag: 'br',
  attrs: { foo: true, bar: true },
  _Halvalla: 
   { birthName: 'Acolyte Mary',
     tagName: 'br',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'br', '1': { foo: true, bar: true } }
shipping Element {
  children: [],
  tagName: 'br',
  tag: 'br',
  attrs: { foo: true, bar: true },
  _Halvalla: 
   { birthName: 'Acolyte Mary',
     tagName: 'br',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Mary
reinspect Acolyte Mary
Looking at - Acolyte Mary
March Halvalla - to component Element {
  children: [],
  tagName: 'br',
  tag: 'br',
  attrs: { foo: true, bar: true },
  _Halvalla: 
   { birthName: 'Acolyte Mary',
     tagName: 'br',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object br
Looking at - All Done! We close bag now

Looking at - Acolyte Mary
March Teacup Acolyte Mary
shipping <br foo="foo" bar="bar" />
output length 0
Looking at - All Done! We close bag now

Final Render <br foo="foo" bar="bar" />
      ✓ is replaced with the attribute name.  Useful for attributes like disabled
    Boolean false value
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Element construct Element {
  children: [],
  tagName: 'br',
  tag: 'br',
  attrs: { foo: false, bar: false },
  _Halvalla: 
   { birthName: 'Acolyte John',
     tagName: 'br',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'br', '1': { foo: false, bar: false } }
shipping Element {
  children: [],
  tagName: 'br',
  tag: 'br',
  attrs: { foo: false, bar: false },
  _Halvalla: 
   { birthName: 'Acolyte John',
     tagName: 'br',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte John
reinspect Acolyte John
Looking at - Acolyte John
March Halvalla - to component Element {
  children: [],
  tagName: 'br',
  tag: 'br',
  attrs: { foo: false, bar: false },
  _Halvalla: 
   { birthName: 'Acolyte John',
     tagName: 'br',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object br
Looking at - All Done! We close bag now

Looking at - Acolyte John
March Teacup Acolyte John
shipping <br />
output length 0
Looking at - All Done! We close bag now

Final Render <br />
      ✓ is omitted
    null and undefined value
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Element construct Element {
  children: [],
  tagName: 'br',
  tag: 'br',
  attrs: { foo: null, bar: undefined },
  _Halvalla: 
   { birthName: 'Acolyte Patricia',
     tagName: 'br',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'br', '1': { foo: null, bar: undefined } }
shipping Element {
  children: [],
  tagName: 'br',
  tag: 'br',
  attrs: { foo: null, bar: undefined },
  _Halvalla: 
   { birthName: 'Acolyte Patricia',
     tagName: 'br',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Patricia
reinspect Acolyte Patricia
Looking at - Acolyte Patricia
March Halvalla - to component Element {
  children: [],
  tagName: 'br',
  tag: 'br',
  attrs: { foo: null, bar: undefined },
  _Halvalla: 
   { birthName: 'Acolyte Patricia',
     tagName: 'br',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object br
Looking at - All Done! We close bag now

Looking at - Acolyte Patricia
March Teacup Acolyte Patricia
shipping <br foo bar />
output length 0
Looking at - All Done! We close bag now

Final Render <br foo bar />
      ✓ renders just the attribute name
    string value
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Element construct Element {
  children: [],
  tagName: 'br',
  tag: 'br',
  attrs: { foo: 'true', bar: 'str' },
  _Halvalla: 
   { birthName: 'Acolyte Robert',
     tagName: 'br',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'br', '1': { foo: 'true', bar: 'str' } }
shipping Element {
  children: [],
  tagName: 'br',
  tag: 'br',
  attrs: { foo: 'true', bar: 'str' },
  _Halvalla: 
   { birthName: 'Acolyte Robert',
     tagName: 'br',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Robert
reinspect Acolyte Robert
Looking at - Acolyte Robert
March Halvalla - to component Element {
  children: [],
  tagName: 'br',
  tag: 'br',
  attrs: { foo: 'true', bar: 'str' },
  _Halvalla: 
   { birthName: 'Acolyte Robert',
     tagName: 'br',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object br
Looking at - All Done! We close bag now

Looking at - Acolyte Robert
March Teacup Acolyte Robert
shipping <br foo="true" bar="str" />
output length 0
Looking at - All Done! We close bag now

Final Render <br foo="true" bar="str" />
      ✓ is used verbatim
    number value
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Element construct Element {
  children: [],
  tagName: 'br',
  tag: 'br',
  attrs: { foo: 2, bar: 15.55 },
  _Halvalla: 
   { birthName: 'Acolyte Jennifer',
     tagName: 'br',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'br', '1': { foo: 2, bar: 15.55 } }
shipping Element {
  children: [],
  tagName: 'br',
  tag: 'br',
  attrs: { foo: 2, bar: 15.55 },
  _Halvalla: 
   { birthName: 'Acolyte Jennifer',
     tagName: 'br',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Jennifer
reinspect Acolyte Jennifer
Looking at - Acolyte Jennifer
March Halvalla - to component Element {
  children: [],
  tagName: 'br',
  tag: 'br',
  attrs: { foo: 2, bar: 15.55 },
  _Halvalla: 
   { birthName: 'Acolyte Jennifer',
     tagName: 'br',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object br
Looking at - All Done! We close bag now

Looking at - Acolyte Jennifer
March Teacup Acolyte Jennifer
shipping <br foo="2" bar="15.55" />
output length 0
Looking at - All Done! We close bag now

Final Render <br foo="2" bar="15.55" />
      ✓ is stringified
    array value
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Element construct Element {
  children: [],
  tagName: 'br',
  tag: 'br',
  attrs: { foo: [ 1, 2, 3 ] },
  _Halvalla: 
   { birthName: 'Acolyte Michael',
     tagName: 'br',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'br', '1': { foo: [ 1, 2, 3 ] } }
shipping Element {
  children: [],
  tagName: 'br',
  tag: 'br',
  attrs: { foo: [ 1, 2, 3 ] },
  _Halvalla: 
   { birthName: 'Acolyte Michael',
     tagName: 'br',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Michael
reinspect Acolyte Michael
Looking at - Acolyte Michael
March Halvalla - to component Element {
  children: [],
  tagName: 'br',
  tag: 'br',
  attrs: { foo: [ 1, 2, 3 ] },
  _Halvalla: 
   { birthName: 'Acolyte Michael',
     tagName: 'br',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object br
Looking at - All Done! We close bag now

Looking at - Acolyte Michael
March Teacup Acolyte Michael
shipping <br foo="1,2,3" />
output length 0
Looking at - All Done! We close bag now

Final Render <br foo="1,2,3" />
      ✓ is comma separated
    data attribute
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Element construct Element {
  children: [],
  tagName: 'br',
  tag: 'br',
  attrs: { 'data-name': 'Name', 'data-value': 'Value' },
  _Halvalla: 
   { birthName: 'Acolyte Elizabeth',
     tagName: 'br',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'br',
  '1': { 'data-name': 'Name', 'data-value': 'Value' } }
shipping Element {
  children: [],
  tagName: 'br',
  tag: 'br',
  attrs: { 'data-name': 'Name', 'data-value': 'Value' },
  _Halvalla: 
   { birthName: 'Acolyte Elizabeth',
     tagName: 'br',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Elizabeth
reinspect Acolyte Elizabeth
Looking at - Acolyte Elizabeth
March Halvalla - to component Element {
  children: [],
  tagName: 'br',
  tag: 'br',
  attrs: { 'data-name': 'Name', 'data-value': 'Value' },
  _Halvalla: 
   { birthName: 'Acolyte Elizabeth',
     tagName: 'br',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object br
Looking at - All Done! We close bag now

Looking at - Acolyte Elizabeth
March Teacup Acolyte Elizabeth
shipping <br data-name="Name" data-value="Value" />
output length 0
Looking at - All Done! We close bag now

Final Render <br data-name="Name" data-value="Value" />
      ✓ expands attributes
    nested hyphenated attribute
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo function () {
            return div({
              'on-y': 'boop'
            });
          }
March Halvalla - to component function () {
            return div({
              'on-y': 'boop'
            });
          }
Constructor name Function
Element construct Element {
  children: [],
  tagName: 'div',
  tag: 'div',
  attrs: { 'on-y': 'boop' },
  _Halvalla: 
   { birthName: 'Acolyte William',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'div', '1': { 'on-y': 'boop' } }
shipping Element {
  children: [],
  tagName: 'div',
  tag: 'div',
  attrs: { 'on-y': 'boop' },
  _Halvalla: 
   { birthName: 'Acolyte William',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte William
reinspect Acolyte William
Looking at - Acolyte William
March Halvalla - to component Element {
  children: [],
  tagName: 'div',
  tag: 'div',
  attrs: { 'on-y': 'boop' },
  _Halvalla: 
   { birthName: 'Acolyte William',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object div
Looking at - All Done! We close bag now

Element construct Element {
  children: 
   Element {
     children: [],
     tagName: 'div',
     tag: 'div',
     attrs: { 'on-y': 'boop' },
     _Halvalla: 
      { birthName: 'Acolyte William',
        tagName: 'div',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'div',
  tag: 'div',
  attrs: { 'on-x': 'beep' },
  _Halvalla: 
   { birthName: 'Acolyte Linda',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'div',
  '1': { 'on-x': 'beep' },
  '2': 
   Element {
     children: [],
     tagName: 'div',
     tag: 'div',
     attrs: { 'on-y': 'boop' },
     _Halvalla: 
      { birthName: 'Acolyte William',
        tagName: 'div',
        propertyName: 'attrs',
        children: undefined } } }
shipping Element {
  children: 
   Element {
     children: [],
     tagName: 'div',
     tag: 'div',
     attrs: { 'on-y': 'boop' },
     _Halvalla: 
      { birthName: 'Acolyte William',
        tagName: 'div',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'div',
  tag: 'div',
  attrs: { 'on-x': 'beep' },
  _Halvalla: 
   { birthName: 'Acolyte Linda',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Linda
reinspect Acolyte Linda
Looking at - Acolyte Linda
March Halvalla - to component Element {
  children: 
   Element {
     children: [],
     tagName: 'div',
     tag: 'div',
     attrs: { 'on-y': 'boop' },
     _Halvalla: 
      { birthName: 'Acolyte William',
        tagName: 'div',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'div',
  tag: 'div',
  attrs: { 'on-x': 'beep' },
  _Halvalla: 
   { birthName: 'Acolyte Linda',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object div
Looking at - All Done! We close bag now

Looking at - Acolyte Linda
March Teacup Acolyte Linda
CELL! Element {
  children: 
   Element {
     children: [],
     tagName: 'div',
     tag: 'div',
     attrs: { 'on-y': 'boop' },
     _Halvalla: 
      { birthName: 'Acolyte William',
        tagName: 'div',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'div',
  tag: 'div',
  attrs: { 'on-x': 'beep' },
  _Halvalla: 
   { birthName: 'Acolyte Linda',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <div on-x="beep">
Looking at - Acolyte William
March Teacup Acolyte William
CELL! Element {
  children: [],
  tagName: 'div',
  tag: 'div',
  attrs: { 'on-y': 'boop' },
  _Halvalla: 
   { birthName: 'Acolyte William',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <div on-y="boop">
Looking at - All Done! We close bag now

Final Render 
Teacup::tag final result <div on-y="boop"></div>
shipping <div on-y="boop"></div>
output length 0
Looking at - All Done! We close bag now

Final Render <div on-y="boop"></div>
Teacup::tag final result <div on-x="beep"><div on-y="boop"></div></div>
shipping <div on-x="beep"><div on-y="boop"></div></div>
output length 0
Looking at - All Done! We close bag now

Final Render <div on-x="beep"><div on-y="boop"></div></div>
      ✓ renders

  coffeekup.org example
RENDERABLE Called 
doctype request 5
and it is...  { '5': '<!DOCTYPE html>',
  default: '<!DOCTYPE html>',
  html: '<!DOCTYPE html>',
  xml: '<?xml version="1.0" encoding="utf-8" ?>',
  transitional: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">',
  strict: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">',
  frameset: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">',
  '1.1': '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">',
  basic: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML Basic 1.1//EN" "http://www.w3.org/TR/xhtml-basic/xhtml-basic11.dtd">',
  mobile: '<!DOCTYPE html PUBLIC "-//WAPFORUM//DTD XHTML Mobile 1.2//EN" "http://www.openmobilealliance.org/tech/DTD/xhtml-mobile12.dtd">',
  ce: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "ce-html-1.0-transitional.dtd">' }
Element construct Element {
  children: [],
  tagName: 'text',
  tag: 'text',
  attrs: { dangerouslySetInnerHTML: { __html: '<!DOCTYPE html>' } },
  _Halvalla: 
   { birthName: 'Acolyte David',
     tagName: 'text',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'text',
  '1': { dangerouslySetInnerHTML: { __html: '<!DOCTYPE html>' } } }
Looking at - some anonymous bozo function () {
          head(function() {
            meta({
              charset: 'utf-8'
            });
            title((x.title || 'Untitled') + " | My awesome website");
            if (typeof desc !== "undefined" && desc !== null) {
              meta({
                name: 'description',
                content: desc
              });
            }
            link({
              rel: 'stylesheet',
              href: '/stylesheets/app.css'
            });
            style('body {font-family: sans-serif}\nheader, nav, section, footer {display: block}');
            return script({
              src: '/javascripts/jquery.js'
            });
          });
          return body(function() {
            header(function() {
              h1(x.title || 'Untitled');
              return nav(function() {
                return ul(function() {
                  if (path !== '/') {
                    li(function() {
                      return a({
                        href: '/'
                      }, 'Home');
                    });
                  }
                  li(function() {
                    return a({
                      href: '/chunky'
                    }, 'Bacon!');
                  });
                  switch (user.role) {
                    case 'owner':
                    case 'admin':
                      return li(function() {
                        return a({
                          href: '/admin'
                        }, 'Secret Stuff');
                      });
                    case 'vip':
                      return li(function() {
                        return a({
                          href: '/vip'
                        }, 'Exclusive Stuff');
                      });
                    default:
                      return li(function() {
                        return a({
                          href: '/commoners'
                        }, 'Just Stuff');
                      });
                  }
                });
              });
            });
            section(function() {
              var i, j, ref1, results;
              h2("Let's count to " + max + ":");
              results = [];
              for (i = j = 1, ref1 = max; 1 <= ref1 ? j <= ref1 : j >= ref1; i = 1 <= ref1 ? ++j : --j) {
                results.push(p(i));
              }
              return results;
            });
            return footer(function() {
              return p(shoutify('bye'));
            });
          });
        }
March Halvalla - to component function () {
          head(function() {
            meta({
              charset: 'utf-8'
            });
            title((x.title || 'Untitled') + " | My awesome website");
            if (typeof desc !== "undefined" && desc !== null) {
              meta({
                name: 'description',
                content: desc
              });
            }
            link({
              rel: 'stylesheet',
              href: '/stylesheets/app.css'
            });
            style('body {font-family: sans-serif}\nheader, nav, section, footer {display: block}');
            return script({
              src: '/javascripts/jquery.js'
            });
          });
          return body(function() {
            header(function() {
              h1(x.title || 'Untitled');
              return nav(function() {
                return ul(function() {
                  if (path !== '/') {
                    li(function() {
                      return a({
                        href: '/'
                      }, 'Home');
                    });
                  }
                  li(function() {
                    return a({
                      href: '/chunky'
                    }, 'Bacon!');
                  });
                  switch (user.role) {
                    case 'owner':
                    case 'admin':
                      return li(function() {
                        return a({
                          href: '/admin'
                        }, 'Secret Stuff');
                      });
                    case 'vip':
                      return li(function() {
                        return a({
                          href: '/vip'
                        }, 'Exclusive Stuff');
                      });
                    default:
                      return li(function() {
                        return a({
                          href: '/commoners'
                        }, 'Just Stuff');
                      });
                  }
                });
              });
            });
            section(function() {
              var i, j, ref1, results;
              h2("Let's count to " + max + ":");
              results = [];
              for (i = j = 1, ref1 = max; 1 <= ref1 ? j <= ref1 : j >= ref1; i = 1 <= ref1 ? ++j : --j) {
                results.push(p(i));
              }
              return results;
            });
            return footer(function() {
              return p(shoutify('bye'));
            });
          });
        }
Constructor name Function
Looking at - some anonymous bozo function () {
            meta({
              charset: 'utf-8'
            });
            title((x.title || 'Untitled') + " | My awesome website");
            if (typeof desc !== "undefined" && desc !== null) {
              meta({
                name: 'description',
                content: desc
              });
            }
            link({
              rel: 'stylesheet',
              href: '/stylesheets/app.css'
            });
            style('body {font-family: sans-serif}\nheader, nav, section, footer {display: block}');
            return script({
              src: '/javascripts/jquery.js'
            });
          }
March Halvalla - to component function () {
            meta({
              charset: 'utf-8'
            });
            title((x.title || 'Untitled') + " | My awesome website");
            if (typeof desc !== "undefined" && desc !== null) {
              meta({
                name: 'description',
                content: desc
              });
            }
            link({
              rel: 'stylesheet',
              href: '/stylesheets/app.css'
            });
            style('body {font-family: sans-serif}\nheader, nav, section, footer {display: block}');
            return script({
              src: '/javascripts/jquery.js'
            });
          }
Constructor name Function
Element construct Element {
  children: [],
  tagName: 'meta',
  tag: 'meta',
  attrs: { charset: 'utf-8' },
  _Halvalla: 
   { birthName: 'Acolyte Barbara',
     tagName: 'meta',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'meta', '1': { charset: 'utf-8' } }
shipping Element {
  children: [],
  tagName: 'meta',
  tag: 'meta',
  attrs: { charset: 'utf-8' },
  _Halvalla: 
   { birthName: 'Acolyte Barbara',
     tagName: 'meta',
     propertyName: 'attrs',
     children: undefined } }
output length 0
Looking at - some anonymous bozo Foo | My awesome website
March Halvalla - to component [String: 'Foo | My awesome website']
Constructor name String
shipping [String: 'Foo | My awesome website']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: 'Foo | My awesome website',
  tagName: 'title',
  tag: 'title',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Richard',
     tagName: 'title',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'title', '1': {}, '2': 'Foo | My awesome website' }
shipping Element {
  children: 'Foo | My awesome website',
  tagName: 'title',
  tag: 'title',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Richard',
     tagName: 'title',
     propertyName: 'attrs',
     children: undefined } }
output length 1
Element construct Element {
  children: [],
  tagName: 'link',
  tag: 'link',
  attrs: { rel: 'stylesheet', href: '/stylesheets/app.css' },
  _Halvalla: 
   { birthName: 'Acolyte Susan',
     tagName: 'link',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'link',
  '1': { rel: 'stylesheet', href: '/stylesheets/app.css' } }
shipping Element {
  children: [],
  tagName: 'link',
  tag: 'link',
  attrs: { rel: 'stylesheet', href: '/stylesheets/app.css' },
  _Halvalla: 
   { birthName: 'Acolyte Susan',
     tagName: 'link',
     propertyName: 'attrs',
     children: undefined } }
output length 2
Looking at - some anonymous bozo body {font-family: sans-serif}
header, nav, section, footer {display: block}
March Halvalla - to component [String: 'body {font-family: sans-serif}\nheader, nav, section, footer {display: block}']
Constructor name String
shipping [String: 'body {font-family: sans-serif}\nheader, nav, section, footer {display: block}']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: 'body {font-family: sans-serif}\nheader, nav, section, footer {display: block}',
  tagName: 'style',
  tag: 'style',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Joseph',
     tagName: 'style',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'style',
  '1': {},
  '2': 'body {font-family: sans-serif}\nheader, nav, section, footer {display: block}' }
shipping Element {
  children: 'body {font-family: sans-serif}\nheader, nav, section, footer {display: block}',
  tagName: 'style',
  tag: 'style',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Joseph',
     tagName: 'style',
     propertyName: 'attrs',
     children: undefined } }
output length 3
Element construct Element {
  children: [],
  tagName: 'script',
  tag: 'script',
  attrs: { src: '/javascripts/jquery.js' },
  _Halvalla: 
   { birthName: 'Acolyte Jessica',
     tagName: 'script',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'script', '1': { src: '/javascripts/jquery.js' } }
shipping Element {
  children: [],
  tagName: 'script',
  tag: 'script',
  attrs: { src: '/javascripts/jquery.js' },
  _Halvalla: 
   { birthName: 'Acolyte Jessica',
     tagName: 'script',
     propertyName: 'attrs',
     children: undefined } }
output length 4
reinspect Acolyte Jessica
reinspect Acolyte Jessica
Looking at - Acolyte Jessica
March Halvalla - to component Element {
  children: [],
  tagName: 'script',
  tag: 'script',
  attrs: { src: '/javascripts/jquery.js' },
  _Halvalla: 
   { birthName: 'Acolyte Jessica',
     tagName: 'script',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object script
Looking at - All Done! We close bag now

Element construct Element {
  children: 
   [ Element {
       children: [],
       tagName: 'meta',
       tag: 'meta',
       attrs: [Object],
       _Halvalla: [Object] },
     Element {
       children: 'Foo | My awesome website',
       tagName: 'title',
       tag: 'title',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: [],
       tagName: 'link',
       tag: 'link',
       attrs: [Object],
       _Halvalla: [Object] },
     Element {
       children: 'body {font-family: sans-serif}\nheader, nav, section, footer {display: block}',
       tagName: 'style',
       tag: 'style',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: [],
       tagName: 'script',
       tag: 'script',
       attrs: [Object],
       _Halvalla: [Object] } ],
  tagName: 'head',
  tag: 'head',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Thomas',
     tagName: 'head',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'head',
  '1': {},
  '2': 
   Element {
     children: [],
     tagName: 'meta',
     tag: 'meta',
     attrs: { charset: 'utf-8' },
     _Halvalla: 
      { birthName: 'Acolyte Barbara',
        tagName: 'meta',
        propertyName: 'attrs',
        children: undefined } },
  '3': 
   Element {
     children: 'Foo | My awesome website',
     tagName: 'title',
     tag: 'title',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Richard',
        tagName: 'title',
        propertyName: 'attrs',
        children: undefined } },
  '4': 
   Element {
     children: [],
     tagName: 'link',
     tag: 'link',
     attrs: { rel: 'stylesheet', href: '/stylesheets/app.css' },
     _Halvalla: 
      { birthName: 'Acolyte Susan',
        tagName: 'link',
        propertyName: 'attrs',
        children: undefined } },
  '5': 
   Element {
     children: 'body {font-family: sans-serif}\nheader, nav, section, footer {display: block}',
     tagName: 'style',
     tag: 'style',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Joseph',
        tagName: 'style',
        propertyName: 'attrs',
        children: undefined } },
  '6': 
   Element {
     children: [],
     tagName: 'script',
     tag: 'script',
     attrs: { src: '/javascripts/jquery.js' },
     _Halvalla: 
      { birthName: 'Acolyte Jessica',
        tagName: 'script',
        propertyName: 'attrs',
        children: undefined } } }
shipping Element {
  children: 
   [ Element {
       children: [],
       tagName: 'meta',
       tag: 'meta',
       attrs: [Object],
       _Halvalla: [Object] },
     Element {
       children: 'Foo | My awesome website',
       tagName: 'title',
       tag: 'title',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: [],
       tagName: 'link',
       tag: 'link',
       attrs: [Object],
       _Halvalla: [Object] },
     Element {
       children: 'body {font-family: sans-serif}\nheader, nav, section, footer {display: block}',
       tagName: 'style',
       tag: 'style',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: [],
       tagName: 'script',
       tag: 'script',
       attrs: [Object],
       _Halvalla: [Object] } ],
  tagName: 'head',
  tag: 'head',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Thomas',
     tagName: 'head',
     propertyName: 'attrs',
     children: undefined } }
output length 0
Looking at - some anonymous bozo function () {
            header(function() {
              h1(x.title || 'Untitled');
              return nav(function() {
                return ul(function() {
                  if (path !== '/') {
                    li(function() {
                      return a({
                        href: '/'
                      }, 'Home');
                    });
                  }
                  li(function() {
                    return a({
                      href: '/chunky'
                    }, 'Bacon!');
                  });
                  switch (user.role) {
                    case 'owner':
                    case 'admin':
                      return li(function() {
                        return a({
                          href: '/admin'
                        }, 'Secret Stuff');
                      });
                    case 'vip':
                      return li(function() {
                        return a({
                          href: '/vip'
                        }, 'Exclusive Stuff');
                      });
                    default:
                      return li(function() {
                        return a({
                          href: '/commoners'
                        }, 'Just Stuff');
                      });
                  }
                });
              });
            });
            section(function() {
              var i, j, ref1, results;
              h2("Let's count to " + max + ":");
              results = [];
              for (i = j = 1, ref1 = max; 1 <= ref1 ? j <= ref1 : j >= ref1; i = 1 <= ref1 ? ++j : --j) {
                results.push(p(i));
              }
              return results;
            });
            return footer(function() {
              return p(shoutify('bye'));
            });
          }
March Halvalla - to component function () {
            header(function() {
              h1(x.title || 'Untitled');
              return nav(function() {
                return ul(function() {
                  if (path !== '/') {
                    li(function() {
                      return a({
                        href: '/'
                      }, 'Home');
                    });
                  }
                  li(function() {
                    return a({
                      href: '/chunky'
                    }, 'Bacon!');
                  });
                  switch (user.role) {
                    case 'owner':
                    case 'admin':
                      return li(function() {
                        return a({
                          href: '/admin'
                        }, 'Secret Stuff');
                      });
                    case 'vip':
                      return li(function() {
                        return a({
                          href: '/vip'
                        }, 'Exclusive Stuff');
                      });
                    default:
                      return li(function() {
                        return a({
                          href: '/commoners'
                        }, 'Just Stuff');
                      });
                  }
                });
              });
            });
            section(function() {
              var i, j, ref1, results;
              h2("Let's count to " + max + ":");
              results = [];
              for (i = j = 1, ref1 = max; 1 <= ref1 ? j <= ref1 : j >= ref1; i = 1 <= ref1 ? ++j : --j) {
                results.push(p(i));
              }
              return results;
            });
            return footer(function() {
              return p(shoutify('bye'));
            });
          }
Constructor name Function
Looking at - some anonymous bozo function () {
              h1(x.title || 'Untitled');
              return nav(function() {
                return ul(function() {
                  if (path !== '/') {
                    li(function() {
                      return a({
                        href: '/'
                      }, 'Home');
                    });
                  }
                  li(function() {
                    return a({
                      href: '/chunky'
                    }, 'Bacon!');
                  });
                  switch (user.role) {
                    case 'owner':
                    case 'admin':
                      return li(function() {
                        return a({
                          href: '/admin'
                        }, 'Secret Stuff');
                      });
                    case 'vip':
                      return li(function() {
                        return a({
                          href: '/vip'
                        }, 'Exclusive Stuff');
                      });
                    default:
                      return li(function() {
                        return a({
                          href: '/commoners'
                        }, 'Just Stuff');
                      });
                  }
                });
              });
            }
March Halvalla - to component function () {
              h1(x.title || 'Untitled');
              return nav(function() {
                return ul(function() {
                  if (path !== '/') {
                    li(function() {
                      return a({
                        href: '/'
                      }, 'Home');
                    });
                  }
                  li(function() {
                    return a({
                      href: '/chunky'
                    }, 'Bacon!');
                  });
                  switch (user.role) {
                    case 'owner':
                    case 'admin':
                      return li(function() {
                        return a({
                          href: '/admin'
                        }, 'Secret Stuff');
                      });
                    case 'vip':
                      return li(function() {
                        return a({
                          href: '/vip'
                        }, 'Exclusive Stuff');
                      });
                    default:
                      return li(function() {
                        return a({
                          href: '/commoners'
                        }, 'Just Stuff');
                      });
                  }
                });
              });
            }
Constructor name Function
Looking at - some anonymous bozo Foo
March Halvalla - to component [String: 'Foo']
Constructor name String
shipping [String: 'Foo']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: 'Foo',
  tagName: 'h1',
  tag: 'h1',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Margaret',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'h1', '1': {}, '2': 'Foo' }
shipping Element {
  children: 'Foo',
  tagName: 'h1',
  tag: 'h1',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Margaret',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
output length 0
Looking at - some anonymous bozo function () {
                return ul(function() {
                  if (path !== '/') {
                    li(function() {
                      return a({
                        href: '/'
                      }, 'Home');
                    });
                  }
                  li(function() {
                    return a({
                      href: '/chunky'
                    }, 'Bacon!');
                  });
                  switch (user.role) {
                    case 'owner':
                    case 'admin':
                      return li(function() {
                        return a({
                          href: '/admin'
                        }, 'Secret Stuff');
                      });
                    case 'vip':
                      return li(function() {
                        return a({
                          href: '/vip'
                        }, 'Exclusive Stuff');
                      });
                    default:
                      return li(function() {
                        return a({
                          href: '/commoners'
                        }, 'Just Stuff');
                      });
                  }
                });
              }
March Halvalla - to component function () {
                return ul(function() {
                  if (path !== '/') {
                    li(function() {
                      return a({
                        href: '/'
                      }, 'Home');
                    });
                  }
                  li(function() {
                    return a({
                      href: '/chunky'
                    }, 'Bacon!');
                  });
                  switch (user.role) {
                    case 'owner':
                    case 'admin':
                      return li(function() {
                        return a({
                          href: '/admin'
                        }, 'Secret Stuff');
                      });
                    case 'vip':
                      return li(function() {
                        return a({
                          href: '/vip'
                        }, 'Exclusive Stuff');
                      });
                    default:
                      return li(function() {
                        return a({
                          href: '/commoners'
                        }, 'Just Stuff');
                      });
                  }
                });
              }
Constructor name Function
Looking at - some anonymous bozo function () {
                  if (path !== '/') {
                    li(function() {
                      return a({
                        href: '/'
                      }, 'Home');
                    });
                  }
                  li(function() {
                    return a({
                      href: '/chunky'
                    }, 'Bacon!');
                  });
                  switch (user.role) {
                    case 'owner':
                    case 'admin':
                      return li(function() {
                        return a({
                          href: '/admin'
                        }, 'Secret Stuff');
                      });
                    case 'vip':
                      return li(function() {
                        return a({
                          href: '/vip'
                        }, 'Exclusive Stuff');
                      });
                    default:
                      return li(function() {
                        return a({
                          href: '/commoners'
                        }, 'Just Stuff');
                      });
                  }
                }
March Halvalla - to component function () {
                  if (path !== '/') {
                    li(function() {
                      return a({
                        href: '/'
                      }, 'Home');
                    });
                  }
                  li(function() {
                    return a({
                      href: '/chunky'
                    }, 'Bacon!');
                  });
                  switch (user.role) {
                    case 'owner':
                    case 'admin':
                      return li(function() {
                        return a({
                          href: '/admin'
                        }, 'Secret Stuff');
                      });
                    case 'vip':
                      return li(function() {
                        return a({
                          href: '/vip'
                        }, 'Exclusive Stuff');
                      });
                    default:
                      return li(function() {
                        return a({
                          href: '/commoners'
                        }, 'Just Stuff');
                      });
                  }
                }
Constructor name Function
Looking at - some anonymous bozo function () {
                      return a({
                        href: '/'
                      }, 'Home');
                    }
March Halvalla - to component function () {
                      return a({
                        href: '/'
                      }, 'Home');
                    }
Constructor name Function
Looking at - some anonymous bozo Home
March Halvalla - to component [String: 'Home']
Constructor name String
shipping [String: 'Home']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: 'Home',
  tagName: 'a',
  tag: 'a',
  attrs: { href: '/' },
  _Halvalla: 
   { birthName: 'Acolyte Charles',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'a', '1': { href: '/' }, '2': 'Home' }
shipping Element {
  children: 'Home',
  tagName: 'a',
  tag: 'a',
  attrs: { href: '/' },
  _Halvalla: 
   { birthName: 'Acolyte Charles',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Charles
reinspect Acolyte Charles
Looking at - Acolyte Charles
March Halvalla - to component Element {
  children: 'Home',
  tagName: 'a',
  tag: 'a',
  attrs: { href: '/' },
  _Halvalla: 
   { birthName: 'Acolyte Charles',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object a
Looking at - All Done! We close bag now

Element construct Element {
  children: 
   Element {
     children: 'Home',
     tagName: 'a',
     tag: 'a',
     attrs: { href: '/' },
     _Halvalla: 
      { birthName: 'Acolyte Charles',
        tagName: 'a',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'li',
  tag: 'li',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Sarah',
     tagName: 'li',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'li',
  '1': {},
  '2': 
   Element {
     children: 'Home',
     tagName: 'a',
     tag: 'a',
     attrs: { href: '/' },
     _Halvalla: 
      { birthName: 'Acolyte Charles',
        tagName: 'a',
        propertyName: 'attrs',
        children: undefined } } }
shipping Element {
  children: 
   Element {
     children: 'Home',
     tagName: 'a',
     tag: 'a',
     attrs: { href: '/' },
     _Halvalla: 
      { birthName: 'Acolyte Charles',
        tagName: 'a',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'li',
  tag: 'li',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Sarah',
     tagName: 'li',
     propertyName: 'attrs',
     children: undefined } }
output length 0
Looking at - some anonymous bozo function () {
                    return a({
                      href: '/chunky'
                    }, 'Bacon!');
                  }
March Halvalla - to component function () {
                    return a({
                      href: '/chunky'
                    }, 'Bacon!');
                  }
Constructor name Function
Looking at - some anonymous bozo Bacon!
March Halvalla - to component [String: 'Bacon!']
Constructor name String
shipping [String: 'Bacon!']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: 'Bacon!',
  tagName: 'a',
  tag: 'a',
  attrs: { href: '/chunky' },
  _Halvalla: 
   { birthName: 'Acolyte Christopher',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'a', '1': { href: '/chunky' }, '2': 'Bacon!' }
shipping Element {
  children: 'Bacon!',
  tagName: 'a',
  tag: 'a',
  attrs: { href: '/chunky' },
  _Halvalla: 
   { birthName: 'Acolyte Christopher',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Christopher
reinspect Acolyte Christopher
Looking at - Acolyte Christopher
March Halvalla - to component Element {
  children: 'Bacon!',
  tagName: 'a',
  tag: 'a',
  attrs: { href: '/chunky' },
  _Halvalla: 
   { birthName: 'Acolyte Christopher',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object a
Looking at - All Done! We close bag now

Element construct Element {
  children: 
   Element {
     children: 'Bacon!',
     tagName: 'a',
     tag: 'a',
     attrs: { href: '/chunky' },
     _Halvalla: 
      { birthName: 'Acolyte Christopher',
        tagName: 'a',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'li',
  tag: 'li',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Karen',
     tagName: 'li',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'li',
  '1': {},
  '2': 
   Element {
     children: 'Bacon!',
     tagName: 'a',
     tag: 'a',
     attrs: { href: '/chunky' },
     _Halvalla: 
      { birthName: 'Acolyte Christopher',
        tagName: 'a',
        propertyName: 'attrs',
        children: undefined } } }
shipping Element {
  children: 
   Element {
     children: 'Bacon!',
     tagName: 'a',
     tag: 'a',
     attrs: { href: '/chunky' },
     _Halvalla: 
      { birthName: 'Acolyte Christopher',
        tagName: 'a',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'li',
  tag: 'li',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Karen',
     tagName: 'li',
     propertyName: 'attrs',
     children: undefined } }
output length 1
Looking at - some anonymous bozo function () {
                        return a({
                          href: '/commoners'
                        }, 'Just Stuff');
                      }
March Halvalla - to component function () {
                        return a({
                          href: '/commoners'
                        }, 'Just Stuff');
                      }
Constructor name Function
Looking at - some anonymous bozo Just Stuff
March Halvalla - to component [String: 'Just Stuff']
Constructor name String
shipping [String: 'Just Stuff']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: 'Just Stuff',
  tagName: 'a',
  tag: 'a',
  attrs: { href: '/commoners' },
  _Halvalla: 
   { birthName: 'Acolyte Daniel',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'a', '1': { href: '/commoners' }, '2': 'Just Stuff' }
shipping Element {
  children: 'Just Stuff',
  tagName: 'a',
  tag: 'a',
  attrs: { href: '/commoners' },
  _Halvalla: 
   { birthName: 'Acolyte Daniel',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Daniel
reinspect Acolyte Daniel
Looking at - Acolyte Daniel
March Halvalla - to component Element {
  children: 'Just Stuff',
  tagName: 'a',
  tag: 'a',
  attrs: { href: '/commoners' },
  _Halvalla: 
   { birthName: 'Acolyte Daniel',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object a
Looking at - All Done! We close bag now

Element construct Element {
  children: 
   Element {
     children: 'Just Stuff',
     tagName: 'a',
     tag: 'a',
     attrs: { href: '/commoners' },
     _Halvalla: 
      { birthName: 'Acolyte Daniel',
        tagName: 'a',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'li',
  tag: 'li',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Nancy',
     tagName: 'li',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'li',
  '1': {},
  '2': 
   Element {
     children: 'Just Stuff',
     tagName: 'a',
     tag: 'a',
     attrs: { href: '/commoners' },
     _Halvalla: 
      { birthName: 'Acolyte Daniel',
        tagName: 'a',
        propertyName: 'attrs',
        children: undefined } } }
shipping Element {
  children: 
   Element {
     children: 'Just Stuff',
     tagName: 'a',
     tag: 'a',
     attrs: { href: '/commoners' },
     _Halvalla: 
      { birthName: 'Acolyte Daniel',
        tagName: 'a',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'li',
  tag: 'li',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Nancy',
     tagName: 'li',
     propertyName: 'attrs',
     children: undefined } }
output length 2
reinspect Acolyte Nancy
reinspect Acolyte Nancy
Looking at - Acolyte Nancy
March Halvalla - to component Element {
  children: 
   Element {
     children: 'Just Stuff',
     tagName: 'a',
     tag: 'a',
     attrs: { href: '/commoners' },
     _Halvalla: 
      { birthName: 'Acolyte Daniel',
        tagName: 'a',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'li',
  tag: 'li',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Nancy',
     tagName: 'li',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object li
Looking at - All Done! We close bag now

Element construct Element {
  children: 
   [ Element {
       children: [Object],
       tagName: 'li',
       tag: 'li',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: [Object],
       tagName: 'li',
       tag: 'li',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: [Object],
       tagName: 'li',
       tag: 'li',
       attrs: {},
       _Halvalla: [Object] } ],
  tagName: 'ul',
  tag: 'ul',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Matthew',
     tagName: 'ul',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'ul',
  '1': {},
  '2': 
   Element {
     children: 
      Element {
        children: 'Home',
        tagName: 'a',
        tag: 'a',
        attrs: [Object],
        _Halvalla: [Object] },
     tagName: 'li',
     tag: 'li',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Sarah',
        tagName: 'li',
        propertyName: 'attrs',
        children: undefined } },
  '3': 
   Element {
     children: 
      Element {
        children: 'Bacon!',
        tagName: 'a',
        tag: 'a',
        attrs: [Object],
        _Halvalla: [Object] },
     tagName: 'li',
     tag: 'li',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Karen',
        tagName: 'li',
        propertyName: 'attrs',
        children: undefined } },
  '4': 
   Element {
     children: 
      Element {
        children: 'Just Stuff',
        tagName: 'a',
        tag: 'a',
        attrs: [Object],
        _Halvalla: [Object] },
     tagName: 'li',
     tag: 'li',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Nancy',
        tagName: 'li',
        propertyName: 'attrs',
        children: undefined } } }
shipping Element {
  children: 
   [ Element {
       children: [Object],
       tagName: 'li',
       tag: 'li',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: [Object],
       tagName: 'li',
       tag: 'li',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: [Object],
       tagName: 'li',
       tag: 'li',
       attrs: {},
       _Halvalla: [Object] } ],
  tagName: 'ul',
  tag: 'ul',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Matthew',
     tagName: 'ul',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Matthew
reinspect Acolyte Matthew
Looking at - Acolyte Matthew
March Halvalla - to component Element {
  children: 
   [ Element {
       children: [Object],
       tagName: 'li',
       tag: 'li',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: [Object],
       tagName: 'li',
       tag: 'li',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: [Object],
       tagName: 'li',
       tag: 'li',
       attrs: {},
       _Halvalla: [Object] } ],
  tagName: 'ul',
  tag: 'ul',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Matthew',
     tagName: 'ul',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object ul
Looking at - All Done! We close bag now

Element construct Element {
  children: 
   Element {
     children: [ [Object], [Object], [Object] ],
     tagName: 'ul',
     tag: 'ul',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Matthew',
        tagName: 'ul',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'nav',
  tag: 'nav',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Betty',
     tagName: 'nav',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'nav',
  '1': {},
  '2': 
   Element {
     children: [ [Object], [Object], [Object] ],
     tagName: 'ul',
     tag: 'ul',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Matthew',
        tagName: 'ul',
        propertyName: 'attrs',
        children: undefined } } }
shipping Element {
  children: 
   Element {
     children: [ [Object], [Object], [Object] ],
     tagName: 'ul',
     tag: 'ul',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Matthew',
        tagName: 'ul',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'nav',
  tag: 'nav',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Betty',
     tagName: 'nav',
     propertyName: 'attrs',
     children: undefined } }
output length 1
reinspect Acolyte Betty
reinspect Acolyte Betty
Looking at - Acolyte Betty
March Halvalla - to component Element {
  children: 
   Element {
     children: [ [Object], [Object], [Object] ],
     tagName: 'ul',
     tag: 'ul',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Matthew',
        tagName: 'ul',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'nav',
  tag: 'nav',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Betty',
     tagName: 'nav',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object nav
Looking at - All Done! We close bag now

Element construct Element {
  children: 
   [ Element {
       children: 'Foo',
       tagName: 'h1',
       tag: 'h1',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: [Object],
       tagName: 'nav',
       tag: 'nav',
       attrs: {},
       _Halvalla: [Object] } ],
  tagName: 'header',
  tag: 'header',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Anthony',
     tagName: 'header',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'header',
  '1': {},
  '2': 
   Element {
     children: 'Foo',
     tagName: 'h1',
     tag: 'h1',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Margaret',
        tagName: 'h1',
        propertyName: 'attrs',
        children: undefined } },
  '3': 
   Element {
     children: 
      Element {
        children: [Object],
        tagName: 'ul',
        tag: 'ul',
        attrs: {},
        _Halvalla: [Object] },
     tagName: 'nav',
     tag: 'nav',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Betty',
        tagName: 'nav',
        propertyName: 'attrs',
        children: undefined } } }
shipping Element {
  children: 
   [ Element {
       children: 'Foo',
       tagName: 'h1',
       tag: 'h1',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: [Object],
       tagName: 'nav',
       tag: 'nav',
       attrs: {},
       _Halvalla: [Object] } ],
  tagName: 'header',
  tag: 'header',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Anthony',
     tagName: 'header',
     propertyName: 'attrs',
     children: undefined } }
output length 0
Looking at - some anonymous bozo function () {
              var i, j, ref1, results;
              h2("Let's count to " + max + ":");
              results = [];
              for (i = j = 1, ref1 = max; 1 <= ref1 ? j <= ref1 : j >= ref1; i = 1 <= ref1 ? ++j : --j) {
                results.push(p(i));
              }
              return results;
            }
March Halvalla - to component function () {
              var i, j, ref1, results;
              h2("Let's count to " + max + ":");
              results = [];
              for (i = j = 1, ref1 = max; 1 <= ref1 ? j <= ref1 : j >= ref1; i = 1 <= ref1 ? ++j : --j) {
                results.push(p(i));
              }
              return results;
            }
Constructor name Function
Looking at - some anonymous bozo Let's count to 12:
March Halvalla - to component [String: 'Let\'s count to 12:']
Constructor name String
shipping [String: 'Let\'s count to 12:']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: 'Let\'s count to 12:',
  tagName: 'h2',
  tag: 'h2',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Lisa',
     tagName: 'h2',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'h2', '1': {}, '2': 'Let\'s count to 12:' }
shipping Element {
  children: 'Let\'s count to 12:',
  tagName: 'h2',
  tag: 'h2',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Lisa',
     tagName: 'h2',
     propertyName: 'attrs',
     children: undefined } }
output length 0
Looking at - some anonymous bozo 1
March Halvalla - to component [String: '1']
Constructor name String
shipping [String: '1']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: '1',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Donald',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'p', '1': {}, '2': '1' }
shipping Element {
  children: '1',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Donald',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 1
Looking at - some anonymous bozo 2
March Halvalla - to component [String: '2']
Constructor name String
shipping [String: '2']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: '2',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Dorothy',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'p', '1': {}, '2': '2' }
shipping Element {
  children: '2',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Dorothy',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 2
Looking at - some anonymous bozo 3
March Halvalla - to component [String: '3']
Constructor name String
shipping [String: '3']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: '3',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Mark',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'p', '1': {}, '2': '3' }
shipping Element {
  children: '3',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Mark',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 3
Looking at - some anonymous bozo 4
March Halvalla - to component [String: '4']
Constructor name String
shipping [String: '4']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: '4',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Sandra',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'p', '1': {}, '2': '4' }
shipping Element {
  children: '4',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Sandra',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 4
Looking at - some anonymous bozo 5
March Halvalla - to component [String: '5']
Constructor name String
shipping [String: '5']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: '5',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Paul',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'p', '1': {}, '2': '5' }
shipping Element {
  children: '5',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Paul',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 5
Looking at - some anonymous bozo 6
March Halvalla - to component [String: '6']
Constructor name String
shipping [String: '6']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: '6',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Ashley',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'p', '1': {}, '2': '6' }
shipping Element {
  children: '6',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Ashley',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 6
Looking at - some anonymous bozo 7
March Halvalla - to component [String: '7']
Constructor name String
shipping [String: '7']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: '7',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Steven',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'p', '1': {}, '2': '7' }
shipping Element {
  children: '7',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Steven',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 7
Looking at - some anonymous bozo 8
March Halvalla - to component [String: '8']
Constructor name String
shipping [String: '8']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: '8',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Kimberly',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'p', '1': {}, '2': '8' }
shipping Element {
  children: '8',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Kimberly',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 8
Looking at - some anonymous bozo 9
March Halvalla - to component [String: '9']
Constructor name String
shipping [String: '9']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: '9',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Andrew',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'p', '1': {}, '2': '9' }
shipping Element {
  children: '9',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Andrew',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 9
Looking at - some anonymous bozo 10
March Halvalla - to component [String: '10']
Constructor name String
shipping [String: '10']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: '10',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Donna',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'p', '1': {}, '2': '10' }
shipping Element {
  children: '10',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Donna',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 10
Looking at - some anonymous bozo 11
March Halvalla - to component [String: '11']
Constructor name String
shipping [String: '11']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: '11',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Kenneth',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'p', '1': {}, '2': '11' }
shipping Element {
  children: '11',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Kenneth',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 11
Looking at - some anonymous bozo 12
March Halvalla - to component [String: '12']
Constructor name String
shipping [String: '12']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: '12',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Carol',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'p', '1': {}, '2': '12' }
shipping Element {
  children: '12',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Carol',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 12
reinspect some anonymous bozo [object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object],[object Object]
reinspect Acolyte Carol
reinspect Acolyte Kenneth
reinspect Acolyte Donna
reinspect Acolyte Andrew
reinspect Acolyte Kimberly
reinspect Acolyte Steven
reinspect Acolyte Ashley
reinspect Acolyte Paul
reinspect Acolyte Sandra
reinspect Acolyte Mark
reinspect Acolyte Dorothy
reinspect Acolyte Donald
Looking at - Acolyte Donald
March Halvalla - to component Element {
  children: '1',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Donald',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object p
shipping Element {
  children: '1',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Donald',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 13
Looking at - Acolyte Dorothy
March Halvalla - to component Element {
  children: '2',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Dorothy',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object p
shipping Element {
  children: '2',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Dorothy',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 14
Looking at - Acolyte Mark
March Halvalla - to component Element {
  children: '3',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Mark',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object p
shipping Element {
  children: '3',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Mark',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 15
Looking at - Acolyte Sandra
March Halvalla - to component Element {
  children: '4',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Sandra',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object p
shipping Element {
  children: '4',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Sandra',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 16
Looking at - Acolyte Paul
March Halvalla - to component Element {
  children: '5',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Paul',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object p
shipping Element {
  children: '5',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Paul',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 17
Looking at - Acolyte Ashley
March Halvalla - to component Element {
  children: '6',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Ashley',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object p
shipping Element {
  children: '6',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Ashley',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 18
Looking at - Acolyte Steven
March Halvalla - to component Element {
  children: '7',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Steven',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object p
shipping Element {
  children: '7',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Steven',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 19
Looking at - Acolyte Kimberly
March Halvalla - to component Element {
  children: '8',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Kimberly',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object p
shipping Element {
  children: '8',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Kimberly',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 20
Looking at - Acolyte Andrew
March Halvalla - to component Element {
  children: '9',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Andrew',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object p
shipping Element {
  children: '9',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Andrew',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 21
Looking at - Acolyte Donna
March Halvalla - to component Element {
  children: '10',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Donna',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object p
shipping Element {
  children: '10',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Donna',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 22
Looking at - Acolyte Kenneth
March Halvalla - to component Element {
  children: '11',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Kenneth',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object p
shipping Element {
  children: '11',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Kenneth',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 23
Looking at - Acolyte Carol
March Halvalla - to component Element {
  children: '12',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Carol',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object p
shipping Element {
  children: '12',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Carol',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 24
Looking at - All Done! We close bag now

Element construct Element {
  children: 
   [ Element {
       children: 'Let\'s count to 12:',
       tagName: 'h2',
       tag: 'h2',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '1',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '2',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '3',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '4',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '5',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '6',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '7',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '8',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '9',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '10',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '11',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '12',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '1',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '2',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '3',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '4',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '5',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '6',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '7',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '8',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '9',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '10',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '11',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '12',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] } ],
  tagName: 'section',
  tag: 'section',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte George',
     tagName: 'section',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'section',
  '1': {},
  '2': 
   Element {
     children: 'Let\'s count to 12:',
     tagName: 'h2',
     tag: 'h2',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Lisa',
        tagName: 'h2',
        propertyName: 'attrs',
        children: undefined } },
  '3': 
   Element {
     children: '1',
     tagName: 'p',
     tag: 'p',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Donald',
        tagName: 'p',
        propertyName: 'attrs',
        children: undefined } },
  '4': 
   Element {
     children: '2',
     tagName: 'p',
     tag: 'p',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Dorothy',
        tagName: 'p',
        propertyName: 'attrs',
        children: undefined } },
  '5': 
   Element {
     children: '3',
     tagName: 'p',
     tag: 'p',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Mark',
        tagName: 'p',
        propertyName: 'attrs',
        children: undefined } },
  '6': 
   Element {
     children: '4',
     tagName: 'p',
     tag: 'p',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Sandra',
        tagName: 'p',
        propertyName: 'attrs',
        children: undefined } },
  '7': 
   Element {
     children: '5',
     tagName: 'p',
     tag: 'p',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Paul',
        tagName: 'p',
        propertyName: 'attrs',
        children: undefined } },
  '8': 
   Element {
     children: '6',
     tagName: 'p',
     tag: 'p',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Ashley',
        tagName: 'p',
        propertyName: 'attrs',
        children: undefined } },
  '9': 
   Element {
     children: '7',
     tagName: 'p',
     tag: 'p',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Steven',
        tagName: 'p',
        propertyName: 'attrs',
        children: undefined } },
  '10': 
   Element {
     children: '8',
     tagName: 'p',
     tag: 'p',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Kimberly',
        tagName: 'p',
        propertyName: 'attrs',
        children: undefined } },
  '11': 
   Element {
     children: '9',
     tagName: 'p',
     tag: 'p',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Andrew',
        tagName: 'p',
        propertyName: 'attrs',
        children: undefined } },
  '12': 
   Element {
     children: '10',
     tagName: 'p',
     tag: 'p',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Donna',
        tagName: 'p',
        propertyName: 'attrs',
        children: undefined } },
  '13': 
   Element {
     children: '11',
     tagName: 'p',
     tag: 'p',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Kenneth',
        tagName: 'p',
        propertyName: 'attrs',
        children: undefined } },
  '14': 
   Element {
     children: '12',
     tagName: 'p',
     tag: 'p',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Carol',
        tagName: 'p',
        propertyName: 'attrs',
        children: undefined } },
  '15': 
   Element {
     children: '1',
     tagName: 'p',
     tag: 'p',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Donald',
        tagName: 'p',
        propertyName: 'attrs',
        children: undefined } },
  '16': 
   Element {
     children: '2',
     tagName: 'p',
     tag: 'p',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Dorothy',
        tagName: 'p',
        propertyName: 'attrs',
        children: undefined } },
  '17': 
   Element {
     children: '3',
     tagName: 'p',
     tag: 'p',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Mark',
        tagName: 'p',
        propertyName: 'attrs',
        children: undefined } },
  '18': 
   Element {
     children: '4',
     tagName: 'p',
     tag: 'p',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Sandra',
        tagName: 'p',
        propertyName: 'attrs',
        children: undefined } },
  '19': 
   Element {
     children: '5',
     tagName: 'p',
     tag: 'p',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Paul',
        tagName: 'p',
        propertyName: 'attrs',
        children: undefined } },
  '20': 
   Element {
     children: '6',
     tagName: 'p',
     tag: 'p',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Ashley',
        tagName: 'p',
        propertyName: 'attrs',
        children: undefined } },
  '21': 
   Element {
     children: '7',
     tagName: 'p',
     tag: 'p',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Steven',
        tagName: 'p',
        propertyName: 'attrs',
        children: undefined } },
  '22': 
   Element {
     children: '8',
     tagName: 'p',
     tag: 'p',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Kimberly',
        tagName: 'p',
        propertyName: 'attrs',
        children: undefined } },
  '23': 
   Element {
     children: '9',
     tagName: 'p',
     tag: 'p',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Andrew',
        tagName: 'p',
        propertyName: 'attrs',
        children: undefined } },
  '24': 
   Element {
     children: '10',
     tagName: 'p',
     tag: 'p',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Donna',
        tagName: 'p',
        propertyName: 'attrs',
        children: undefined } },
  '25': 
   Element {
     children: '11',
     tagName: 'p',
     tag: 'p',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Kenneth',
        tagName: 'p',
        propertyName: 'attrs',
        children: undefined } },
  '26': 
   Element {
     children: '12',
     tagName: 'p',
     tag: 'p',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Carol',
        tagName: 'p',
        propertyName: 'attrs',
        children: undefined } } }
shipping Element {
  children: 
   [ Element {
       children: 'Let\'s count to 12:',
       tagName: 'h2',
       tag: 'h2',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '1',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '2',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '3',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '4',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '5',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '6',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '7',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '8',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '9',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '10',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '11',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '12',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '1',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '2',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '3',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '4',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '5',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '6',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '7',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '8',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '9',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '10',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '11',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '12',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] } ],
  tagName: 'section',
  tag: 'section',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte George',
     tagName: 'section',
     propertyName: 'attrs',
     children: undefined } }
output length 1
Looking at - some anonymous bozo function () {
              return p(shoutify('bye'));
            }
March Halvalla - to component function () {
              return p(shoutify('bye'));
            }
Constructor name Function
Looking at - some anonymous bozo BYE!
March Halvalla - to component [String: 'BYE!']
Constructor name String
shipping [String: 'BYE!']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: 'BYE!',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Michelle',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'p', '1': {}, '2': 'BYE!' }
shipping Element {
  children: 'BYE!',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Michelle',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Michelle
reinspect Acolyte Michelle
Looking at - Acolyte Michelle
March Halvalla - to component Element {
  children: 'BYE!',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Michelle',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object p
Looking at - All Done! We close bag now

Element construct Element {
  children: 
   Element {
     children: 'BYE!',
     tagName: 'p',
     tag: 'p',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Michelle',
        tagName: 'p',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'footer',
  tag: 'footer',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Joshua',
     tagName: 'footer',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'footer',
  '1': {},
  '2': 
   Element {
     children: 'BYE!',
     tagName: 'p',
     tag: 'p',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Michelle',
        tagName: 'p',
        propertyName: 'attrs',
        children: undefined } } }
shipping Element {
  children: 
   Element {
     children: 'BYE!',
     tagName: 'p',
     tag: 'p',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Michelle',
        tagName: 'p',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'footer',
  tag: 'footer',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Joshua',
     tagName: 'footer',
     propertyName: 'attrs',
     children: undefined } }
output length 2
reinspect Acolyte Joshua
reinspect Acolyte Joshua
Looking at - Acolyte Joshua
March Halvalla - to component Element {
  children: 
   Element {
     children: 'BYE!',
     tagName: 'p',
     tag: 'p',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Michelle',
        tagName: 'p',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'footer',
  tag: 'footer',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Joshua',
     tagName: 'footer',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object footer
Looking at - All Done! We close bag now

Element construct Element {
  children: 
   [ Element {
       children: [Object],
       tagName: 'header',
       tag: 'header',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: [Object],
       tagName: 'section',
       tag: 'section',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: [Object],
       tagName: 'footer',
       tag: 'footer',
       attrs: {},
       _Halvalla: [Object] } ],
  tagName: 'body',
  tag: 'body',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Emily',
     tagName: 'body',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'body',
  '1': {},
  '2': 
   Element {
     children: [ [Object], [Object] ],
     tagName: 'header',
     tag: 'header',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Anthony',
        tagName: 'header',
        propertyName: 'attrs',
        children: undefined } },
  '3': 
   Element {
     children: 
      [ [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object],
        [Object] ],
     tagName: 'section',
     tag: 'section',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte George',
        tagName: 'section',
        propertyName: 'attrs',
        children: undefined } },
  '4': 
   Element {
     children: 
      Element {
        children: 'BYE!',
        tagName: 'p',
        tag: 'p',
        attrs: {},
        _Halvalla: [Object] },
     tagName: 'footer',
     tag: 'footer',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Joshua',
        tagName: 'footer',
        propertyName: 'attrs',
        children: undefined } } }
shipping Element {
  children: 
   [ Element {
       children: [Object],
       tagName: 'header',
       tag: 'header',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: [Object],
       tagName: 'section',
       tag: 'section',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: [Object],
       tagName: 'footer',
       tag: 'footer',
       attrs: {},
       _Halvalla: [Object] } ],
  tagName: 'body',
  tag: 'body',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Emily',
     tagName: 'body',
     propertyName: 'attrs',
     children: undefined } }
output length 1
reinspect Acolyte Emily
reinspect Acolyte Emily
Looking at - Acolyte Emily
March Halvalla - to component Element {
  children: 
   [ Element {
       children: [Object],
       tagName: 'header',
       tag: 'header',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: [Object],
       tagName: 'section',
       tag: 'section',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: [Object],
       tagName: 'footer',
       tag: 'footer',
       attrs: {},
       _Halvalla: [Object] } ],
  tagName: 'body',
  tag: 'body',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Emily',
     tagName: 'body',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object body
Looking at - All Done! We close bag now

Element construct Element {
  children: 
   [ Element {
       children: [Object],
       tagName: 'head',
       tag: 'head',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: [Object],
       tagName: 'body',
       tag: 'body',
       attrs: {},
       _Halvalla: [Object] } ],
  tagName: 'html',
  tag: 'html',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Kevin',
     tagName: 'html',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'html',
  '1': {},
  '2': 
   Element {
     children: [ [Object], [Object], [Object], [Object], [Object] ],
     tagName: 'head',
     tag: 'head',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Thomas',
        tagName: 'head',
        propertyName: 'attrs',
        children: undefined } },
  '3': 
   Element {
     children: [ [Object], [Object], [Object] ],
     tagName: 'body',
     tag: 'body',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Emily',
        tagName: 'body',
        propertyName: 'attrs',
        children: undefined } } }
Looking at - Acolyte Kevin
March Teacup Acolyte Kevin
CELL! Element {
  children: 
   [ Element {
       children: [Object],
       tagName: 'head',
       tag: 'head',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: [Object],
       tagName: 'body',
       tag: 'body',
       attrs: {},
       _Halvalla: [Object] } ],
  tagName: 'html',
  tag: 'html',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Kevin',
     tagName: 'html',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <html>
Looking at - Acolyte Thomas
March Teacup Acolyte Thomas
CELL! Element {
  children: 
   [ Element {
       children: [],
       tagName: 'meta',
       tag: 'meta',
       attrs: [Object],
       _Halvalla: [Object] },
     Element {
       children: 'Foo | My awesome website',
       tagName: 'title',
       tag: 'title',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: [],
       tagName: 'link',
       tag: 'link',
       attrs: [Object],
       _Halvalla: [Object] },
     Element {
       children: 'body {font-family: sans-serif}\nheader, nav, section, footer {display: block}',
       tagName: 'style',
       tag: 'style',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: [],
       tagName: 'script',
       tag: 'script',
       attrs: [Object],
       _Halvalla: [Object] } ],
  tagName: 'head',
  tag: 'head',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Thomas',
     tagName: 'head',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <head>
Looking at - Acolyte Barbara
March Teacup Acolyte Barbara
shipping <meta charset="utf-8" />
output length 0
Looking at - All Done! We close bag now

Final Render <meta charset="utf-8" />
Looking at - Acolyte Richard
March Teacup Acolyte Richard
CELL! Element {
  children: 'Foo | My awesome website',
  tagName: 'title',
  tag: 'title',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Richard',
     tagName: 'title',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <title>
Teacup::tag final result <title>Foo | My awesome website</title>
shipping <title>Foo | My awesome website</title>
output length 0
Looking at - All Done! We close bag now

Final Render <title>Foo | My awesome website</title>
Looking at - Acolyte Susan
March Teacup Acolyte Susan
shipping <link rel="stylesheet" href="/stylesheets/app.css" />
output length 0
Looking at - All Done! We close bag now

Final Render <link rel="stylesheet" href="/stylesheets/app.css" />
Looking at - Acolyte Joseph
March Teacup Acolyte Joseph
shipping <style>body {font-family: sans-serif}
header, nav, section, footer {display: block}</style>
output length 0
Looking at - All Done! We close bag now

Final Render <style>body {font-family: sans-serif}
header, nav, section, footer {display: block}</style>
Looking at - Acolyte Jessica
March Teacup Acolyte Jessica
shipping <script src="/javascripts/jquery.js"></script>
output length 0
Looking at - All Done! We close bag now

Final Render <script src="/javascripts/jquery.js"></script>
Teacup::tag final result <head><meta charset="utf-8" /><title>Foo | My awesome website</title><link rel="stylesheet" href="/stylesheets/app.css" /><style>body {font-family: sans-serif}
header, nav, section, footer {display: block}</style><script src="/javascripts/jquery.js"></script></head>
shipping <head><meta charset="utf-8" /><title>Foo | My awesome website</title><link rel="stylesheet" href="/stylesheets/app.css" /><style>body {font-family: sans-serif}
header, nav, section, footer {display: block}</style><script src="/javascripts/jquery.js"></script></head>
output length 0
Looking at - All Done! We close bag now

Final Render <head><meta charset="utf-8" /><title>Foo | My awesome website</title><link rel="stylesheet" href="/stylesheets/app.css" /><style>body {font-family: sans-serif}
header, nav, section, footer {display: block}</style><script src="/javascripts/jquery.js"></script></head>
Looking at - Acolyte Emily
March Teacup Acolyte Emily
CELL! Element {
  children: 
   [ Element {
       children: [Object],
       tagName: 'header',
       tag: 'header',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: [Object],
       tagName: 'section',
       tag: 'section',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: [Object],
       tagName: 'footer',
       tag: 'footer',
       attrs: {},
       _Halvalla: [Object] } ],
  tagName: 'body',
  tag: 'body',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Emily',
     tagName: 'body',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <body>
Looking at - Acolyte Anthony
March Teacup Acolyte Anthony
CELL! Element {
  children: 
   [ Element {
       children: 'Foo',
       tagName: 'h1',
       tag: 'h1',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: [Object],
       tagName: 'nav',
       tag: 'nav',
       attrs: {},
       _Halvalla: [Object] } ],
  tagName: 'header',
  tag: 'header',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Anthony',
     tagName: 'header',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <header>
Looking at - Acolyte Margaret
March Teacup Acolyte Margaret
CELL! Element {
  children: 'Foo',
  tagName: 'h1',
  tag: 'h1',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Margaret',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <h1>
Teacup::tag final result <h1>Foo</h1>
shipping <h1>Foo</h1>
output length 0
Looking at - All Done! We close bag now

Final Render <h1>Foo</h1>
Looking at - Acolyte Betty
March Teacup Acolyte Betty
CELL! Element {
  children: 
   Element {
     children: [ [Object], [Object], [Object] ],
     tagName: 'ul',
     tag: 'ul',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Matthew',
        tagName: 'ul',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'nav',
  tag: 'nav',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Betty',
     tagName: 'nav',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <nav>
Looking at - Acolyte Matthew
March Teacup Acolyte Matthew
CELL! Element {
  children: 
   [ Element {
       children: [Object],
       tagName: 'li',
       tag: 'li',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: [Object],
       tagName: 'li',
       tag: 'li',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: [Object],
       tagName: 'li',
       tag: 'li',
       attrs: {},
       _Halvalla: [Object] } ],
  tagName: 'ul',
  tag: 'ul',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Matthew',
     tagName: 'ul',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <ul>
Looking at - Acolyte Sarah
March Teacup Acolyte Sarah
CELL! Element {
  children: 
   Element {
     children: 'Home',
     tagName: 'a',
     tag: 'a',
     attrs: { href: '/' },
     _Halvalla: 
      { birthName: 'Acolyte Charles',
        tagName: 'a',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'li',
  tag: 'li',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Sarah',
     tagName: 'li',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <li>
Looking at - Acolyte Charles
March Teacup Acolyte Charles
CELL! Element {
  children: 'Home',
  tagName: 'a',
  tag: 'a',
  attrs: { href: '/' },
  _Halvalla: 
   { birthName: 'Acolyte Charles',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <a href="/">
Teacup::tag final result <a href="/">Home</a>
shipping <a href="/">Home</a>
output length 0
Looking at - All Done! We close bag now

Final Render <a href="/">Home</a>
Teacup::tag final result <li><a href="/">Home</a></li>
shipping <li><a href="/">Home</a></li>
output length 0
Looking at - All Done! We close bag now

Final Render <li><a href="/">Home</a></li>
Looking at - Acolyte Karen
March Teacup Acolyte Karen
CELL! Element {
  children: 
   Element {
     children: 'Bacon!',
     tagName: 'a',
     tag: 'a',
     attrs: { href: '/chunky' },
     _Halvalla: 
      { birthName: 'Acolyte Christopher',
        tagName: 'a',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'li',
  tag: 'li',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Karen',
     tagName: 'li',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <li>
Looking at - Acolyte Christopher
March Teacup Acolyte Christopher
CELL! Element {
  children: 'Bacon!',
  tagName: 'a',
  tag: 'a',
  attrs: { href: '/chunky' },
  _Halvalla: 
   { birthName: 'Acolyte Christopher',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <a href="/chunky">
Teacup::tag final result <a href="/chunky">Bacon!</a>
shipping <a href="/chunky">Bacon!</a>
output length 0
Looking at - All Done! We close bag now

Final Render <a href="/chunky">Bacon!</a>
Teacup::tag final result <li><a href="/chunky">Bacon!</a></li>
shipping <li><a href="/chunky">Bacon!</a></li>
output length 0
Looking at - All Done! We close bag now

Final Render <li><a href="/chunky">Bacon!</a></li>
Looking at - Acolyte Nancy
March Teacup Acolyte Nancy
CELL! Element {
  children: 
   Element {
     children: 'Just Stuff',
     tagName: 'a',
     tag: 'a',
     attrs: { href: '/commoners' },
     _Halvalla: 
      { birthName: 'Acolyte Daniel',
        tagName: 'a',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'li',
  tag: 'li',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Nancy',
     tagName: 'li',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <li>
Looking at - Acolyte Daniel
March Teacup Acolyte Daniel
CELL! Element {
  children: 'Just Stuff',
  tagName: 'a',
  tag: 'a',
  attrs: { href: '/commoners' },
  _Halvalla: 
   { birthName: 'Acolyte Daniel',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <a href="/commoners">
Teacup::tag final result <a href="/commoners">Just Stuff</a>
shipping <a href="/commoners">Just Stuff</a>
output length 0
Looking at - All Done! We close bag now

Final Render <a href="/commoners">Just Stuff</a>
Teacup::tag final result <li><a href="/commoners">Just Stuff</a></li>
shipping <li><a href="/commoners">Just Stuff</a></li>
output length 0
Looking at - All Done! We close bag now

Final Render <li><a href="/commoners">Just Stuff</a></li>
Teacup::tag final result <ul><li><a href="/">Home</a></li><li><a href="/chunky">Bacon!</a></li><li><a href="/commoners">Just Stuff</a></li></ul>
shipping <ul><li><a href="/">Home</a></li><li><a href="/chunky">Bacon!</a></li><li><a href="/commoners">Just Stuff</a></li></ul>
output length 0
Looking at - All Done! We close bag now

Final Render <ul><li><a href="/">Home</a></li><li><a href="/chunky">Bacon!</a></li><li><a href="/commoners">Just Stuff</a></li></ul>
Teacup::tag final result <nav><ul><li><a href="/">Home</a></li><li><a href="/chunky">Bacon!</a></li><li><a href="/commoners">Just Stuff</a></li></ul></nav>
shipping <nav><ul><li><a href="/">Home</a></li><li><a href="/chunky">Bacon!</a></li><li><a href="/commoners">Just Stuff</a></li></ul></nav>
output length 0
Looking at - All Done! We close bag now

Final Render <nav><ul><li><a href="/">Home</a></li><li><a href="/chunky">Bacon!</a></li><li><a href="/commoners">Just Stuff</a></li></ul></nav>
Teacup::tag final result <header><h1>Foo</h1><nav><ul><li><a href="/">Home</a></li><li><a href="/chunky">Bacon!</a></li><li><a href="/commoners">Just Stuff</a></li></ul></nav></header>
shipping <header><h1>Foo</h1><nav><ul><li><a href="/">Home</a></li><li><a href="/chunky">Bacon!</a></li><li><a href="/commoners">Just Stuff</a></li></ul></nav></header>
output length 0
Looking at - All Done! We close bag now

Final Render <header><h1>Foo</h1><nav><ul><li><a href="/">Home</a></li><li><a href="/chunky">Bacon!</a></li><li><a href="/commoners">Just Stuff</a></li></ul></nav></header>
Looking at - Acolyte George
March Teacup Acolyte George
CELL! Element {
  children: 
   [ Element {
       children: 'Let\'s count to 12:',
       tagName: 'h2',
       tag: 'h2',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '1',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '2',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '3',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '4',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '5',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '6',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '7',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '8',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '9',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '10',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '11',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '12',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '1',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '2',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '3',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '4',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '5',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '6',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '7',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '8',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '9',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '10',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '11',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: '12',
       tagName: 'p',
       tag: 'p',
       attrs: {},
       _Halvalla: [Object] } ],
  tagName: 'section',
  tag: 'section',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte George',
     tagName: 'section',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <section>
Looking at - Acolyte Lisa
March Teacup Acolyte Lisa
CELL! Element {
  children: 'Let\'s count to 12:',
  tagName: 'h2',
  tag: 'h2',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Lisa',
     tagName: 'h2',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <h2>
Teacup::tag final result <h2>Let's count to 12:</h2>
shipping <h2>Let's count to 12:</h2>
output length 0
Looking at - All Done! We close bag now

Final Render <h2>Let's count to 12:</h2>
Looking at - Acolyte Donald
March Teacup Acolyte Donald
CELL! Element {
  children: '1',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Donald',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <p>
Teacup::tag final result <p>1</p>
shipping <p>1</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>1</p>
Looking at - Acolyte Dorothy
March Teacup Acolyte Dorothy
CELL! Element {
  children: '2',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Dorothy',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <p>
Teacup::tag final result <p>2</p>
shipping <p>2</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>2</p>
Looking at - Acolyte Mark
March Teacup Acolyte Mark
CELL! Element {
  children: '3',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Mark',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <p>
Teacup::tag final result <p>3</p>
shipping <p>3</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>3</p>
Looking at - Acolyte Sandra
March Teacup Acolyte Sandra
CELL! Element {
  children: '4',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Sandra',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <p>
Teacup::tag final result <p>4</p>
shipping <p>4</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>4</p>
Looking at - Acolyte Paul
March Teacup Acolyte Paul
CELL! Element {
  children: '5',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Paul',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <p>
Teacup::tag final result <p>5</p>
shipping <p>5</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>5</p>
Looking at - Acolyte Ashley
March Teacup Acolyte Ashley
CELL! Element {
  children: '6',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Ashley',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <p>
Teacup::tag final result <p>6</p>
shipping <p>6</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>6</p>
Looking at - Acolyte Steven
March Teacup Acolyte Steven
CELL! Element {
  children: '7',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Steven',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <p>
Teacup::tag final result <p>7</p>
shipping <p>7</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>7</p>
Looking at - Acolyte Kimberly
March Teacup Acolyte Kimberly
CELL! Element {
  children: '8',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Kimberly',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <p>
Teacup::tag final result <p>8</p>
shipping <p>8</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>8</p>
Looking at - Acolyte Andrew
March Teacup Acolyte Andrew
CELL! Element {
  children: '9',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Andrew',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <p>
Teacup::tag final result <p>9</p>
shipping <p>9</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>9</p>
Looking at - Acolyte Donna
March Teacup Acolyte Donna
CELL! Element {
  children: '10',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Donna',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <p>
Teacup::tag final result <p>10</p>
shipping <p>10</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>10</p>
Looking at - Acolyte Kenneth
March Teacup Acolyte Kenneth
CELL! Element {
  children: '11',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Kenneth',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <p>
Teacup::tag final result <p>11</p>
shipping <p>11</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>11</p>
Looking at - Acolyte Carol
March Teacup Acolyte Carol
CELL! Element {
  children: '12',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Carol',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <p>
Teacup::tag final result <p>12</p>
shipping <p>12</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>12</p>
Looking at - Acolyte Donald
March Teacup Acolyte Donald
CELL! Element {
  children: '1',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Donald',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <p>
Teacup::tag final result <p>1</p>
shipping <p>1</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>1</p>
Looking at - Acolyte Dorothy
March Teacup Acolyte Dorothy
CELL! Element {
  children: '2',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Dorothy',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <p>
Teacup::tag final result <p>2</p>
shipping <p>2</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>2</p>
Looking at - Acolyte Mark
March Teacup Acolyte Mark
CELL! Element {
  children: '3',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Mark',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <p>
Teacup::tag final result <p>3</p>
shipping <p>3</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>3</p>
Looking at - Acolyte Sandra
March Teacup Acolyte Sandra
CELL! Element {
  children: '4',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Sandra',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <p>
Teacup::tag final result <p>4</p>
shipping <p>4</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>4</p>
Looking at - Acolyte Paul
March Teacup Acolyte Paul
CELL! Element {
  children: '5',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Paul',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <p>
Teacup::tag final result <p>5</p>
shipping <p>5</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>5</p>
Looking at - Acolyte Ashley
March Teacup Acolyte Ashley
CELL! Element {
  children: '6',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Ashley',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <p>
Teacup::tag final result <p>6</p>
shipping <p>6</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>6</p>
Looking at - Acolyte Steven
March Teacup Acolyte Steven
CELL! Element {
  children: '7',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Steven',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <p>
Teacup::tag final result <p>7</p>
shipping <p>7</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>7</p>
Looking at - Acolyte Kimberly
March Teacup Acolyte Kimberly
CELL! Element {
  children: '8',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Kimberly',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <p>
Teacup::tag final result <p>8</p>
shipping <p>8</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>8</p>
Looking at - Acolyte Andrew
March Teacup Acolyte Andrew
CELL! Element {
  children: '9',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Andrew',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <p>
Teacup::tag final result <p>9</p>
shipping <p>9</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>9</p>
Looking at - Acolyte Donna
March Teacup Acolyte Donna
CELL! Element {
  children: '10',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Donna',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <p>
Teacup::tag final result <p>10</p>
shipping <p>10</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>10</p>
Looking at - Acolyte Kenneth
March Teacup Acolyte Kenneth
CELL! Element {
  children: '11',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Kenneth',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <p>
Teacup::tag final result <p>11</p>
shipping <p>11</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>11</p>
Looking at - Acolyte Carol
March Teacup Acolyte Carol
CELL! Element {
  children: '12',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Carol',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <p>
Teacup::tag final result <p>12</p>
shipping <p>12</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>12</p>
Teacup::tag final result <section><h2>Let's count to 12:</h2><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p></section>
shipping <section><h2>Let's count to 12:</h2><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p></section>
output length 0
Looking at - All Done! We close bag now

Final Render <section><h2>Let's count to 12:</h2><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p></section>
Looking at - Acolyte Joshua
March Teacup Acolyte Joshua
CELL! Element {
  children: 
   Element {
     children: 'BYE!',
     tagName: 'p',
     tag: 'p',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Michelle',
        tagName: 'p',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'footer',
  tag: 'footer',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Joshua',
     tagName: 'footer',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <footer>
Looking at - Acolyte Michelle
March Teacup Acolyte Michelle
CELL! Element {
  children: 'BYE!',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Michelle',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <p>
Teacup::tag final result <p>BYE!</p>
shipping <p>BYE!</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>BYE!</p>
Teacup::tag final result <footer><p>BYE!</p></footer>
shipping <footer><p>BYE!</p></footer>
output length 0
Looking at - All Done! We close bag now

Final Render <footer><p>BYE!</p></footer>
Teacup::tag final result <body><header><h1>Foo</h1><nav><ul><li><a href="/">Home</a></li><li><a href="/chunky">Bacon!</a></li><li><a href="/commoners">Just Stuff</a></li></ul></nav></header><section><h2>Let's count to 12:</h2><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p></section><footer><p>BYE!</p></footer></body>
shipping <body><header><h1>Foo</h1><nav><ul><li><a href="/">Home</a></li><li><a href="/chunky">Bacon!</a></li><li><a href="/commoners">Just Stuff</a></li></ul></nav></header><section><h2>Let's count to 12:</h2><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p></section><footer><p>BYE!</p></footer></body>
output length 0
Looking at - All Done! We close bag now

Final Render <body><header><h1>Foo</h1><nav><ul><li><a href="/">Home</a></li><li><a href="/chunky">Bacon!</a></li><li><a href="/commoners">Just Stuff</a></li></ul></nav></header><section><h2>Let's count to 12:</h2><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p></section><footer><p>BYE!</p></footer></body>
Teacup::tag final result <html><head><meta charset="utf-8" /><title>Foo | My awesome website</title><link rel="stylesheet" href="/stylesheets/app.css" /><style>body {font-family: sans-serif}
header, nav, section, footer {display: block}</style><script src="/javascripts/jquery.js"></script></head><body><header><h1>Foo</h1><nav><ul><li><a href="/">Home</a></li><li><a href="/chunky">Bacon!</a></li><li><a href="/commoners">Just Stuff</a></li></ul></nav></header><section><h2>Let's count to 12:</h2><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p></section><footer><p>BYE!</p></footer></body></html>
shipping <html><head><meta charset="utf-8" /><title>Foo | My awesome website</title><link rel="stylesheet" href="/stylesheets/app.css" /><style>body {font-family: sans-serif}
header, nav, section, footer {display: block}</style><script src="/javascripts/jquery.js"></script></head><body><header><h1>Foo</h1><nav><ul><li><a href="/">Home</a></li><li><a href="/chunky">Bacon!</a></li><li><a href="/commoners">Just Stuff</a></li></ul></nav></header><section><h2>Let's count to 12:</h2><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p></section><footer><p>BYE!</p></footer></body></html>
output length 0
Looking at - All Done! We close bag now

Final Render <html><head><meta charset="utf-8" /><title>Foo | My awesome website</title><link rel="stylesheet" href="/stylesheets/app.css" /><style>body {font-family: sans-serif}
header, nav, section, footer {display: block}</style><script src="/javascripts/jquery.js"></script></head><body><header><h1>Foo</h1><nav><ul><li><a href="/">Home</a></li><li><a href="/chunky">Bacon!</a></li><li><a href="/commoners">Just Stuff</a></li></ul></nav></header><section><h2>Let's count to 12:</h2><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p><p>1</p><p>2</p><p>3</p><p>4</p><p>5</p><p>6</p><p>7</p><p>8</p><p>9</p><p>10</p><p>11</p><p>12</p></section><footer><p>BYE!</p></footer></body></html>
    ✓ works (122ms)

  Comments
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo Comment
March Halvalla - to component [String: 'Comment']
Constructor name String
shipping [String: 'Comment']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: 'Comment',
  tagName: 'comment',
  tag: 'comment',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Amanda',
     tagName: 'comment',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'comment', '1': {}, '2': 'Comment' }
shipping Element {
  children: 'Comment',
  tagName: 'comment',
  tag: 'comment',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Amanda',
     tagName: 'comment',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Amanda
reinspect Acolyte Amanda
Looking at - Acolyte Amanda
March Halvalla - to component Element {
  children: 'Comment',
  tagName: 'comment',
  tag: 'comment',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Amanda',
     tagName: 'comment',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object comment
Looking at - All Done! We close bag now

Looking at - Acolyte Amanda
March Teacup Acolyte Amanda
shipping <!--Comment-->
output length 0
Looking at - All Done! We close bag now

Final Render <!--Comment-->
    ✓ renders HTML <!--comments-->

  Component
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo Hello
March Halvalla - to component [String: 'Hello']
Constructor name String
shipping [String: 'Hello']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: 'Hello',
  tagName: 'div',
  tag: 'div',
  attrs: { class: 'caption', className: 'caption' },
  _Halvalla: 
   { birthName: 'Acolyte Brian',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'div',
  '1': { class: 'caption', className: 'caption' },
  '2': 'Hello' }
shipping Element {
  children: 'Hello',
  tagName: 'div',
  tag: 'div',
  attrs: { class: 'caption', className: 'caption' },
  _Halvalla: 
   { birthName: 'Acolyte Brian',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Brian
reinspect Acolyte Brian
Looking at - Acolyte Brian
March Halvalla - to component Element {
  children: 'Hello',
  tagName: 'div',
  tag: 'div',
  attrs: { class: 'caption', className: 'caption' },
  _Halvalla: 
   { birthName: 'Acolyte Brian',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object div
Looking at - All Done! We close bag now

Looking at - Acolyte Brian
March Teacup Acolyte Brian
CELL! Element {
  children: 'Hello',
  tagName: 'div',
  tag: 'div',
  attrs: { class: 'caption', className: 'caption' },
  _Halvalla: 
   { birthName: 'Acolyte Brian',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <div class="caption">
Teacup::tag final result <div class="caption">Hello</div>
shipping <div class="caption">Hello</div>
output length 0
Looking at - All Done! We close bag now

Final Render <div class="caption">Hello</div>
    ✓ takes arguments
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Element construct Element {
  children: [],
  tagName: 'div',
  tag: 'div',
  attrs: 
   { class: 'full-screen spinner',
     className: 'full-screen spinner' },
  _Halvalla: 
   { birthName: 'Acolyte Helen',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'div',
  '1': 
   { class: 'full-screen spinner',
     className: 'full-screen spinner' } }
shipping Element {
  children: [],
  tagName: 'div',
  tag: 'div',
  attrs: 
   { class: 'full-screen spinner',
     className: 'full-screen spinner' },
  _Halvalla: 
   { birthName: 'Acolyte Helen',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Helen
reinspect Acolyte Helen
Looking at - Acolyte Helen
March Halvalla - to component Element {
  children: [],
  tagName: 'div',
  tag: 'div',
  attrs: 
   { class: 'full-screen spinner',
     className: 'full-screen spinner' },
  _Halvalla: 
   { birthName: 'Acolyte Helen',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object div
Looking at - All Done! We close bag now

Looking at - Acolyte Helen
March Teacup Acolyte Helen
CELL! Element {
  children: [],
  tagName: 'div',
  tag: 'div',
  attrs: 
   { class: 'full-screen spinner',
     className: 'full-screen spinner' },
  _Halvalla: 
   { birthName: 'Acolyte Helen',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <div class="full-screen spinner">
Looking at - All Done! We close bag now

Final Render 
Teacup::tag final result <div class="full-screen spinner"></div>
shipping <div class="full-screen spinner"></div>
output length 0
Looking at - All Done! We close bag now

Final Render <div class="full-screen spinner"></div>
    ✓ passes along the selector
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo function () {
          renderContents();
          return div('.caption', text);
        }
March Halvalla - to component function () {
          renderContents();
          return div('.caption', text);
        }
Constructor name Function
Element construct Element {
  children: [],
  tagName: 'img',
  tag: 'img',
  attrs: { src: '/catalonia/IMG_00182.JPG' },
  _Halvalla: 
   { birthName: 'Acolyte Edward',
     tagName: 'img',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'img', '1': { src: '/catalonia/IMG_00182.JPG' } }
shipping Element {
  children: [],
  tagName: 'img',
  tag: 'img',
  attrs: { src: '/catalonia/IMG_00182.JPG' },
  _Halvalla: 
   { birthName: 'Acolyte Edward',
     tagName: 'img',
     propertyName: 'attrs',
     children: undefined } }
output length 0
Looking at - some anonymous bozo La Dura Dura
March Halvalla - to component [String: 'La Dura Dura']
Constructor name String
shipping [String: 'La Dura Dura']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: 'La Dura Dura',
  tagName: 'div',
  tag: 'div',
  attrs: { class: 'caption', className: 'caption' },
  _Halvalla: 
   { birthName: 'Acolyte Melissa',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'div',
  '1': { class: 'caption', className: 'caption' },
  '2': 'La Dura Dura' }
shipping Element {
  children: 'La Dura Dura',
  tagName: 'div',
  tag: 'div',
  attrs: { class: 'caption', className: 'caption' },
  _Halvalla: 
   { birthName: 'Acolyte Melissa',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
output length 1
reinspect Acolyte Melissa
reinspect Acolyte Melissa
Looking at - Acolyte Melissa
March Halvalla - to component Element {
  children: 'La Dura Dura',
  tagName: 'div',
  tag: 'div',
  attrs: { class: 'caption', className: 'caption' },
  _Halvalla: 
   { birthName: 'Acolyte Melissa',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object div
Looking at - All Done! We close bag now

Element construct Element {
  children: 
   [ Element {
       children: [],
       tagName: 'img',
       tag: 'img',
       attrs: [Object],
       _Halvalla: [Object] },
     Element {
       children: 'La Dura Dura',
       tagName: 'div',
       tag: 'div',
       attrs: [Object],
       _Halvalla: [Object] } ],
  tagName: 'div',
  tag: 'div',
  attrs: { class: 'captioned', className: 'captioned' },
  _Halvalla: 
   { birthName: 'Acolyte Ronald',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'div',
  '1': { class: 'captioned', className: 'captioned' },
  '2': 
   Element {
     children: [],
     tagName: 'img',
     tag: 'img',
     attrs: { src: '/catalonia/IMG_00182.JPG' },
     _Halvalla: 
      { birthName: 'Acolyte Edward',
        tagName: 'img',
        propertyName: 'attrs',
        children: undefined } },
  '3': 
   Element {
     children: 'La Dura Dura',
     tagName: 'div',
     tag: 'div',
     attrs: { class: 'caption', className: 'caption' },
     _Halvalla: 
      { birthName: 'Acolyte Melissa',
        tagName: 'div',
        propertyName: 'attrs',
        children: undefined } } }
shipping Element {
  children: 
   [ Element {
       children: [],
       tagName: 'img',
       tag: 'img',
       attrs: [Object],
       _Halvalla: [Object] },
     Element {
       children: 'La Dura Dura',
       tagName: 'div',
       tag: 'div',
       attrs: [Object],
       _Halvalla: [Object] } ],
  tagName: 'div',
  tag: 'div',
  attrs: { class: 'captioned', className: 'captioned' },
  _Halvalla: 
   { birthName: 'Acolyte Ronald',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Ronald
reinspect Acolyte Ronald
Looking at - Acolyte Ronald
March Halvalla - to component Element {
  children: 
   [ Element {
       children: [],
       tagName: 'img',
       tag: 'img',
       attrs: [Object],
       _Halvalla: [Object] },
     Element {
       children: 'La Dura Dura',
       tagName: 'div',
       tag: 'div',
       attrs: [Object],
       _Halvalla: [Object] } ],
  tagName: 'div',
  tag: 'div',
  attrs: { class: 'captioned', className: 'captioned' },
  _Halvalla: 
   { birthName: 'Acolyte Ronald',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object div
Looking at - All Done! We close bag now

Looking at - Acolyte Ronald
March Teacup Acolyte Ronald
CELL! Element {
  children: 
   [ Element {
       children: [],
       tagName: 'img',
       tag: 'img',
       attrs: [Object],
       _Halvalla: [Object] },
     Element {
       children: 'La Dura Dura',
       tagName: 'div',
       tag: 'div',
       attrs: [Object],
       _Halvalla: [Object] } ],
  tagName: 'div',
  tag: 'div',
  attrs: { class: 'captioned', className: 'captioned' },
  _Halvalla: 
   { birthName: 'Acolyte Ronald',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <div class="captioned">
Looking at - Acolyte Edward
March Teacup Acolyte Edward
shipping <img src="/catalonia/IMG_00182.JPG" />
output length 0
Looking at - All Done! We close bag now

Final Render <img src="/catalonia/IMG_00182.JPG" />
Looking at - Acolyte Melissa
March Teacup Acolyte Melissa
CELL! Element {
  children: 'La Dura Dura',
  tagName: 'div',
  tag: 'div',
  attrs: { class: 'caption', className: 'caption' },
  _Halvalla: 
   { birthName: 'Acolyte Melissa',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <div class="caption">
Teacup::tag final result <div class="caption">La Dura Dura</div>
shipping <div class="caption">La Dura Dura</div>
output length 0
Looking at - All Done! We close bag now

Final Render <div class="caption">La Dura Dura</div>
Teacup::tag final result <div class="captioned"><img src="/catalonia/IMG_00182.JPG" /><div class="caption">La Dura Dura</div></div>
shipping <div class="captioned"><img src="/catalonia/IMG_00182.JPG" /><div class="caption">La Dura Dura</div></div>
output length 0
Looking at - All Done! We close bag now

Final Render <div class="captioned"><img src="/catalonia/IMG_00182.JPG" /><div class="caption">La Dura Dura</div></div>
    ✓ passes along child content
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo function () {
          debugger;
          return closeChild(closureCloseButton);
        }
March Halvalla - to component function () {
          debugger;
          return closeChild(closureCloseButton);
        }
Constructor name Function
shipping close me: 
output length 0
Looking at - some anonymous bozo Close
March Halvalla - to component [String: 'Close']
Constructor name String
shipping [String: 'Close']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: 'Close',
  tagName: 'button',
  tag: 'button',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Deborah',
     tagName: 'button',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'button', '1': {}, '2': 'Close' }
shipping Element {
  children: 'Close',
  tagName: 'button',
  tag: 'button',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Deborah',
     tagName: 'button',
     propertyName: 'attrs',
     children: undefined } }
output length 1
reinspect some anonymous bozo 
Looking at - All Done! We close bag now

Element construct Element {
  children: 
   [ 'close me: ',
     Element {
       children: 'Close',
       tagName: 'button',
       tag: 'button',
       attrs: {},
       _Halvalla: [Object] } ],
  tagName: 'div',
  tag: 'div',
  attrs: { class: 'modal', className: 'modal' },
  _Halvalla: 
   { birthName: 'Acolyte Timothy',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'div',
  '1': { class: 'modal', className: 'modal' },
  '2': 'close me: ',
  '3': 
   Element {
     children: 'Close',
     tagName: 'button',
     tag: 'button',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Deborah',
        tagName: 'button',
        propertyName: 'attrs',
        children: undefined } } }
shipping Element {
  children: 
   [ 'close me: ',
     Element {
       children: 'Close',
       tagName: 'button',
       tag: 'button',
       attrs: {},
       _Halvalla: [Object] } ],
  tagName: 'div',
  tag: 'div',
  attrs: { class: 'modal', className: 'modal' },
  _Halvalla: 
   { birthName: 'Acolyte Timothy',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Timothy
reinspect Acolyte Timothy
Looking at - Acolyte Timothy
March Halvalla - to component Element {
  children: 
   [ 'close me: ',
     Element {
       children: 'Close',
       tagName: 'button',
       tag: 'button',
       attrs: {},
       _Halvalla: [Object] } ],
  tagName: 'div',
  tag: 'div',
  attrs: { class: 'modal', className: 'modal' },
  _Halvalla: 
   { birthName: 'Acolyte Timothy',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object div
Looking at - All Done! We close bag now

Looking at - Acolyte Timothy
March Teacup Acolyte Timothy
CELL! Element {
  children: 
   [ 'close me: ',
     Element {
       children: 'Close',
       tagName: 'button',
       tag: 'button',
       attrs: {},
       _Halvalla: [Object] } ],
  tagName: 'div',
  tag: 'div',
  attrs: { class: 'modal', className: 'modal' },
  _Halvalla: 
   { birthName: 'Acolyte Timothy',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <div class="modal">
Looking at - Acolyte Deborah
March Teacup Acolyte Deborah
CELL! Element {
  children: 'Close',
  tagName: 'button',
  tag: 'button',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Deborah',
     tagName: 'button',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <button>
Teacup::tag final result <button>Close</button>
shipping <button>Close</button>
output length 0
Looking at - All Done! We close bag now

Final Render <button>Close</button>
Teacup::tag final result <div class="modal">close me: <button>Close</button></div>
shipping <div class="modal">close me: <button>Close</button></div>
output length 0
Looking at - All Done! We close bag now

Final Render <div class="modal">close me: <button>Close</button></div>
    ✓ lets components provide give contents to their children

  CSS Selectors
    id selector
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo foo
March Halvalla - to component [String: 'foo']
Constructor name String
shipping [String: 'foo']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: 'foo',
  tagName: 'div',
  tag: 'div',
  attrs: { id: 'myid' },
  _Halvalla: 
   { birthName: 'Acolyte Stephanie',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'div', '1': { id: 'myid' }, '2': 'foo' }
shipping Element {
  children: 'foo',
  tagName: 'div',
  tag: 'div',
  attrs: { id: 'myid' },
  _Halvalla: 
   { birthName: 'Acolyte Stephanie',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Stephanie
reinspect Acolyte Stephanie
Looking at - Acolyte Stephanie
March Halvalla - to component Element {
  children: 'foo',
  tagName: 'div',
  tag: 'div',
  attrs: { id: 'myid' },
  _Halvalla: 
   { birthName: 'Acolyte Stephanie',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object div
Looking at - All Done! We close bag now

Looking at - Acolyte Stephanie
March Teacup Acolyte Stephanie
CELL! Element {
  children: 'foo',
  tagName: 'div',
  tag: 'div',
  attrs: { id: 'myid' },
  _Halvalla: 
   { birthName: 'Acolyte Stephanie',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <div id="myid">
Teacup::tag final result <div id="myid">foo</div>
shipping <div id="myid">foo</div>
output length 0
Looking at - All Done! We close bag now

Final Render <div id="myid">foo</div>
      ✓ sets the id attribute
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo #
March Halvalla - to component [String: '#']
Constructor name String
shipping [String: '#']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: '#',
  tagName: 'div',
  tag: 'div',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Jason',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'div', '1': {}, '2': '#' }
shipping Element {
  children: '#',
  tagName: 'div',
  tag: 'div',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Jason',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Jason
reinspect Acolyte Jason
Looking at - Acolyte Jason
March Halvalla - to component Element {
  children: '#',
  tagName: 'div',
  tag: 'div',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Jason',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object div
Looking at - All Done! We close bag now

Looking at - Acolyte Jason
March Teacup Acolyte Jason
CELL! Element {
  children: '#',
  tagName: 'div',
  tag: 'div',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Jason',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <div>
Teacup::tag final result <div>#</div>
shipping <div>#</div>
output length 0
Looking at - All Done! We close bag now

Final Render <div>#</div>
      ✓ must be greater than length 1
    one class selector
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo foo
March Halvalla - to component [String: 'foo']
Constructor name String
shipping [String: 'foo']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: 'foo',
  tagName: 'div',
  tag: 'div',
  attrs: { class: 'myclass', className: 'myclass' },
  _Halvalla: 
   { birthName: 'Acolyte Laura',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'div',
  '1': { class: 'myclass', className: 'myclass' },
  '2': 'foo' }
shipping Element {
  children: 'foo',
  tagName: 'div',
  tag: 'div',
  attrs: { class: 'myclass', className: 'myclass' },
  _Halvalla: 
   { birthName: 'Acolyte Laura',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Laura
reinspect Acolyte Laura
Looking at - Acolyte Laura
March Halvalla - to component Element {
  children: 'foo',
  tagName: 'div',
  tag: 'div',
  attrs: { class: 'myclass', className: 'myclass' },
  _Halvalla: 
   { birthName: 'Acolyte Laura',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object div
Looking at - All Done! We close bag now

Looking at - Acolyte Laura
March Teacup Acolyte Laura
CELL! Element {
  children: 'foo',
  tagName: 'div',
  tag: 'div',
  attrs: { class: 'myclass', className: 'myclass' },
  _Halvalla: 
   { birthName: 'Acolyte Laura',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <div class="myclass">
Teacup::tag final result <div class="myclass">foo</div>
shipping <div class="myclass">foo</div>
output length 0
Looking at - All Done! We close bag now

Final Render <div class="myclass">foo</div>
      ✓ adds an html class
      and a class attribute
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo foo
March Halvalla - to component [String: 'foo']
Constructor name String
shipping [String: 'foo']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: 'foo',
  tagName: 'div',
  tag: 'div',
  attrs: 
   { class: 'myclass myattrclass',
     className: 'myclass myattrclass' },
  _Halvalla: 
   { birthName: 'Acolyte Jeffrey',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'div',
  '1': 
   { class: 'myclass myattrclass',
     className: 'myclass myattrclass' },
  '2': 'foo' }
shipping Element {
  children: 'foo',
  tagName: 'div',
  tag: 'div',
  attrs: 
   { class: 'myclass myattrclass',
     className: 'myclass myattrclass' },
  _Halvalla: 
   { birthName: 'Acolyte Jeffrey',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Jeffrey
reinspect Acolyte Jeffrey
Looking at - Acolyte Jeffrey
March Halvalla - to component Element {
  children: 'foo',
  tagName: 'div',
  tag: 'div',
  attrs: 
   { class: 'myclass myattrclass',
     className: 'myclass myattrclass' },
  _Halvalla: 
   { birthName: 'Acolyte Jeffrey',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object div
Looking at - All Done! We close bag now

Looking at - Acolyte Jeffrey
March Teacup Acolyte Jeffrey
CELL! Element {
  children: 'foo',
  tagName: 'div',
  tag: 'div',
  attrs: 
   { class: 'myclass myattrclass',
     className: 'myclass myattrclass' },
  _Halvalla: 
   { birthName: 'Acolyte Jeffrey',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <div class="myclass myattrclass">
Teacup::tag final result <div class="myclass myattrclass">foo</div>
shipping <div class="myclass myattrclass">foo</div>
output length 0
Looking at - All Done! We close bag now

Final Render <div class="myclass myattrclass">foo</div>
        ✓ prepends the selector class
    multi-class selector
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo foo
March Halvalla - to component [String: 'foo']
Constructor name String
shipping [String: 'foo']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: 'foo',
  tagName: 'div',
  tag: 'div',
  attrs: 
   { class: 'myclass myclass2 myclass3',
     className: 'myclass myclass2 myclass3' },
  _Halvalla: 
   { birthName: 'Acolyte Rebecca',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'div',
  '1': 
   { class: 'myclass myclass2 myclass3',
     className: 'myclass myclass2 myclass3' },
  '2': 'foo' }
shipping Element {
  children: 'foo',
  tagName: 'div',
  tag: 'div',
  attrs: 
   { class: 'myclass myclass2 myclass3',
     className: 'myclass myclass2 myclass3' },
  _Halvalla: 
   { birthName: 'Acolyte Rebecca',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Rebecca
reinspect Acolyte Rebecca
Looking at - Acolyte Rebecca
March Halvalla - to component Element {
  children: 'foo',
  tagName: 'div',
  tag: 'div',
  attrs: 
   { class: 'myclass myclass2 myclass3',
     className: 'myclass myclass2 myclass3' },
  _Halvalla: 
   { birthName: 'Acolyte Rebecca',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object div
Looking at - All Done! We close bag now

Looking at - Acolyte Rebecca
March Teacup Acolyte Rebecca
CELL! Element {
  children: 'foo',
  tagName: 'div',
  tag: 'div',
  attrs: 
   { class: 'myclass myclass2 myclass3',
     className: 'myclass myclass2 myclass3' },
  _Halvalla: 
   { birthName: 'Acolyte Rebecca',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <div class="myclass myclass2 myclass3">
Teacup::tag final result <div class="myclass myclass2 myclass3">foo</div>
shipping <div class="myclass myclass2 myclass3">foo</div>
output length 0
Looking at - All Done! We close bag now

Final Render <div class="myclass myclass2 myclass3">foo</div>
      ✓ adds all the classes
    with an id and classes, separated by spaces
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Element construct Element {
  children: [],
  tagName: 'div',
  tag: 'div',
  attrs: 
   { id: 'myid',
     class: 'myclass1 myclass2',
     className: 'myclass1 myclass2' },
  _Halvalla: 
   { birthName: 'Acolyte Ryan',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'div',
  '1': 
   { id: 'myid',
     class: 'myclass1 myclass2',
     className: 'myclass1 myclass2' } }
shipping Element {
  children: [],
  tagName: 'div',
  tag: 'div',
  attrs: 
   { id: 'myid',
     class: 'myclass1 myclass2',
     className: 'myclass1 myclass2' },
  _Halvalla: 
   { birthName: 'Acolyte Ryan',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Ryan
reinspect Acolyte Ryan
Looking at - Acolyte Ryan
March Halvalla - to component Element {
  children: [],
  tagName: 'div',
  tag: 'div',
  attrs: 
   { id: 'myid',
     class: 'myclass1 myclass2',
     className: 'myclass1 myclass2' },
  _Halvalla: 
   { birthName: 'Acolyte Ryan',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object div
Looking at - All Done! We close bag now

Looking at - Acolyte Ryan
March Teacup Acolyte Ryan
CELL! Element {
  children: [],
  tagName: 'div',
  tag: 'div',
  attrs: 
   { id: 'myid',
     class: 'myclass1 myclass2',
     className: 'myclass1 myclass2' },
  _Halvalla: 
   { birthName: 'Acolyte Ryan',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <div id="myid" class="myclass1 myclass2">
Looking at - All Done! We close bag now

Final Render 
Teacup::tag final result <div id="myid" class="myclass1 myclass2"></div>
shipping <div id="myid" class="myclass1 myclass2"></div>
output length 0
Looking at - All Done! We close bag now

Final Render <div id="myid" class="myclass1 myclass2"></div>
      ✓ adds ids and classes with minimal whitespace
    without contents
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Element construct Element {
  children: [],
  tagName: 'img',
  tag: 'img',
  attrs: 
   { src: '/pic.png',
     id: 'myid',
     class: 'myclass',
     className: 'myclass' },
  _Halvalla: 
   { birthName: 'Acolyte Sharon',
     tagName: 'img',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'img',
  '1': 
   { src: '/pic.png',
     id: 'myid',
     class: 'myclass',
     className: 'myclass' } }
shipping Element {
  children: [],
  tagName: 'img',
  tag: 'img',
  attrs: 
   { src: '/pic.png',
     id: 'myid',
     class: 'myclass',
     className: 'myclass' },
  _Halvalla: 
   { birthName: 'Acolyte Sharon',
     tagName: 'img',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Sharon
reinspect Acolyte Sharon
Looking at - Acolyte Sharon
March Halvalla - to component Element {
  children: [],
  tagName: 'img',
  tag: 'img',
  attrs: 
   { src: '/pic.png',
     id: 'myid',
     class: 'myclass',
     className: 'myclass' },
  _Halvalla: 
   { birthName: 'Acolyte Sharon',
     tagName: 'img',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object img
Looking at - All Done! We close bag now

Looking at - Acolyte Sharon
March Teacup Acolyte Sharon
shipping <img id="myid" class="myclass" src="/pic.png" />
output length 0
Looking at - All Done! We close bag now

Final Render <img id="myid" class="myclass" src="/pic.png" />
      ✓ still adds attributes

  custom tag
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Element construct Element {
  children: [],
  tagName: 'custom',
  tag: 'custom',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Gary',
     tagName: 'custom',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'custom', '1': {} }
shipping Element {
  children: [],
  tagName: 'custom',
  tag: 'custom',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Gary',
     tagName: 'custom',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Gary
reinspect Acolyte Gary
Looking at - Acolyte Gary
March Halvalla - to component Element {
  children: [],
  tagName: 'custom',
  tag: 'custom',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Gary',
     tagName: 'custom',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object custom
Looking at - All Done! We close bag now

Looking at - Acolyte Gary
March Teacup Acolyte Gary
Component without teacup renderer: custom
CELL! Element {
  children: [],
  tagName: 'custom',
  tag: 'custom',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Gary',
     tagName: 'custom',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <custom>
Looking at - All Done! We close bag now

Final Render 
Teacup::tag final result <custom></custom>
shipping <custom></custom>
output length 0
Looking at - All Done! We close bag now

Final Render <custom></custom>
    ✓ should render
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Element construct Element {
  children: [],
  tagName: 'custom',
  tag: 'custom',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Cynthia',
     tagName: 'custom',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'custom', '1': {} }
shipping Element {
  children: [],
  tagName: 'custom',
  tag: 'custom',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Cynthia',
     tagName: 'custom',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Cynthia
reinspect Acolyte Cynthia
Looking at - Acolyte Cynthia
March Halvalla - to component Element {
  children: [],
  tagName: 'custom',
  tag: 'custom',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Cynthia',
     tagName: 'custom',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object custom
Looking at - All Done! We close bag now

Looking at - Acolyte Cynthia
March Teacup Acolyte Cynthia
Component without teacup renderer: custom
CELL! Element {
  children: [],
  tagName: 'custom',
  tag: 'custom',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Cynthia',
     tagName: 'custom',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <custom>
Looking at - All Done! We close bag now

Final Render 
Teacup::tag final result <custom></custom>
shipping <custom></custom>
output length 0
Looking at - All Done! We close bag now

Final Render <custom></custom>
    ✓ should render empty given null content
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Element construct Element {
  children: [],
  tagName: 'custom',
  tag: 'custom',
  attrs: { foo: 'bar', ping: 'pong' },
  _Halvalla: 
   { birthName: 'Acolyte Jacob',
     tagName: 'custom',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'custom', '1': { foo: 'bar', ping: 'pong' } }
shipping Element {
  children: [],
  tagName: 'custom',
  tag: 'custom',
  attrs: { foo: 'bar', ping: 'pong' },
  _Halvalla: 
   { birthName: 'Acolyte Jacob',
     tagName: 'custom',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Jacob
reinspect Acolyte Jacob
Looking at - Acolyte Jacob
March Halvalla - to component Element {
  children: [],
  tagName: 'custom',
  tag: 'custom',
  attrs: { foo: 'bar', ping: 'pong' },
  _Halvalla: 
   { birthName: 'Acolyte Jacob',
     tagName: 'custom',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object custom
Looking at - All Done! We close bag now

Looking at - Acolyte Jacob
March Teacup Acolyte Jacob
Component without teacup renderer: custom
CELL! Element {
  children: [],
  tagName: 'custom',
  tag: 'custom',
  attrs: { foo: 'bar', ping: 'pong' },
  _Halvalla: 
   { birthName: 'Acolyte Jacob',
     tagName: 'custom',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <custom foo="bar" ping="pong">
Looking at - All Done! We close bag now

Final Render 
Teacup::tag final result <custom foo="bar" ping="pong"></custom>
shipping <custom foo="bar" ping="pong"></custom>
output length 0
Looking at - All Done! We close bag now

Final Render <custom foo="bar" ping="pong"></custom>
    ✓ should render with attributes
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo zag
March Halvalla - to component [String: 'zag']
Constructor name String
shipping [String: 'zag']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: 'zag',
  tagName: 'custom',
  tag: 'custom',
  attrs: { foo: 'bar', ping: 'pong' },
  _Halvalla: 
   { birthName: 'Acolyte Kathleen',
     tagName: 'custom',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'custom', '1': { foo: 'bar', ping: 'pong' }, '2': 'zag' }
shipping Element {
  children: 'zag',
  tagName: 'custom',
  tag: 'custom',
  attrs: { foo: 'bar', ping: 'pong' },
  _Halvalla: 
   { birthName: 'Acolyte Kathleen',
     tagName: 'custom',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Kathleen
reinspect Acolyte Kathleen
Looking at - Acolyte Kathleen
March Halvalla - to component Element {
  children: 'zag',
  tagName: 'custom',
  tag: 'custom',
  attrs: { foo: 'bar', ping: 'pong' },
  _Halvalla: 
   { birthName: 'Acolyte Kathleen',
     tagName: 'custom',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object custom
Looking at - All Done! We close bag now

Looking at - Acolyte Kathleen
March Teacup Acolyte Kathleen
Component without teacup renderer: custom
CELL! Element {
  children: 'zag',
  tagName: 'custom',
  tag: 'custom',
  attrs: { foo: 'bar', ping: 'pong' },
  _Halvalla: 
   { birthName: 'Acolyte Kathleen',
     tagName: 'custom',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <custom foo="bar" ping="pong">
Teacup::tag final result <custom foo="bar" ping="pong">zag</custom>
shipping <custom foo="bar" ping="pong">zag</custom>
output length 0
Looking at - All Done! We close bag now

Final Render <custom foo="bar" ping="pong">zag</custom>
    ✓ should render with attributes and content

  custom tag-like
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Element construct Element {
  children: [],
  tagName: 'input',
  tag: 'input',
  attrs: { type: 'text' },
  _Halvalla: 
   { birthName: 'Acolyte Nicholas',
     tagName: 'input',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'input', '1': { type: 'text' } }
shipping Element {
  children: [],
  tagName: 'input',
  tag: 'input',
  attrs: { type: 'text' },
  _Halvalla: 
   { birthName: 'Acolyte Nicholas',
     tagName: 'input',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Nicholas
reinspect Acolyte Nicholas
Looking at - Acolyte Nicholas
March Halvalla - to component Element {
  children: [],
  tagName: 'input',
  tag: 'input',
  attrs: { type: 'text' },
  _Halvalla: 
   { birthName: 'Acolyte Nicholas',
     tagName: 'input',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object input
Looking at - All Done! We close bag now

Looking at - Acolyte Nicholas
March Teacup Acolyte Nicholas
shipping <input type="text" />
output length 0
Looking at - All Done! We close bag now

Final Render <input type="text" />
    ✓ should render
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Element construct Element {
  children: [],
  tagName: 'input',
  tag: 'input',
  attrs: 
   { placeholder: 'Beep',
     class: 'form-control',
     className: 'form-control',
     type: 'text' },
  _Halvalla: 
   { birthName: 'Acolyte Amy',
     tagName: 'input',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'input',
  '1': 
   { placeholder: 'Beep',
     class: 'form-control',
     className: 'form-control',
     type: 'text' } }
shipping Element {
  children: [],
  tagName: 'input',
  tag: 'input',
  attrs: 
   { placeholder: 'Beep',
     class: 'form-control',
     className: 'form-control',
     type: 'text' },
  _Halvalla: 
   { birthName: 'Acolyte Amy',
     tagName: 'input',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Amy
reinspect Acolyte Amy
Looking at - Acolyte Amy
March Halvalla - to component Element {
  children: [],
  tagName: 'input',
  tag: 'input',
  attrs: 
   { placeholder: 'Beep',
     class: 'form-control',
     className: 'form-control',
     type: 'text' },
  _Halvalla: 
   { birthName: 'Acolyte Amy',
     tagName: 'input',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object input
Looking at - All Done! We close bag now

Looking at - Acolyte Amy
March Teacup Acolyte Amy
shipping <input class="form-control" placeholder="Beep" type="text" />
output length 0
Looking at - All Done! We close bag now

Final Render <input class="form-control" placeholder="Beep" type="text" />
    ✓ should accept a selector and attributes

  doctype
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
doctype request 5
and it is...  { '5': '<!DOCTYPE html>',
  default: '<!DOCTYPE html>',
  html: '<!DOCTYPE html>',
  xml: '<?xml version="1.0" encoding="utf-8" ?>',
  transitional: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">',
  strict: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">',
  frameset: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">',
  '1.1': '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">',
  basic: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML Basic 1.1//EN" "http://www.w3.org/TR/xhtml-basic/xhtml-basic11.dtd">',
  mobile: '<!DOCTYPE html PUBLIC "-//WAPFORUM//DTD XHTML Mobile 1.2//EN" "http://www.openmobilealliance.org/tech/DTD/xhtml-mobile12.dtd">',
  ce: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "ce-html-1.0-transitional.dtd">' }
Element construct Element {
  children: [],
  tagName: 'text',
  tag: 'text',
  attrs: { dangerouslySetInnerHTML: { __html: '<!DOCTYPE html>' } },
  _Halvalla: 
   { birthName: 'Acolyte Eric',
     tagName: 'text',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'text',
  '1': { dangerouslySetInnerHTML: { __html: '<!DOCTYPE html>' } } }
shipping Element {
  children: [],
  tagName: 'text',
  tag: 'text',
  attrs: { dangerouslySetInnerHTML: { __html: '<!DOCTYPE html>' } },
  _Halvalla: 
   { birthName: 'Acolyte Eric',
     tagName: 'text',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Eric
reinspect Acolyte Eric
Looking at - Acolyte Eric
March Halvalla - to component Element {
  children: [],
  tagName: 'text',
  tag: 'text',
  attrs: { dangerouslySetInnerHTML: { __html: '<!DOCTYPE html>' } },
  _Halvalla: 
   { birthName: 'Acolyte Eric',
     tagName: 'text',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object text
Looking at - All Done! We close bag now

Looking at - Acolyte Eric
March Teacup Acolyte Eric
CELL! Element {
  children: [],
  tagName: 'text',
  tag: 'text',
  attrs: { dangerouslySetInnerHTML: { __html: '<!DOCTYPE html>' } },
  _Halvalla: 
   { birthName: 'Acolyte Eric',
     tagName: 'text',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result 
Teacup::tag final result <!DOCTYPE html>
shipping <!DOCTYPE html>
output length 0
Looking at - All Done! We close bag now

Final Render <!DOCTYPE html>
    ✓ default should render html5 doctype
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
doctype request xml
and it is...  { '5': '<!DOCTYPE html>',
  default: '<!DOCTYPE html>',
  html: '<!DOCTYPE html>',
  xml: '<?xml version="1.0" encoding="utf-8" ?>',
  transitional: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">',
  strict: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">',
  frameset: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">',
  '1.1': '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">',
  basic: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML Basic 1.1//EN" "http://www.w3.org/TR/xhtml-basic/xhtml-basic11.dtd">',
  mobile: '<!DOCTYPE html PUBLIC "-//WAPFORUM//DTD XHTML Mobile 1.2//EN" "http://www.openmobilealliance.org/tech/DTD/xhtml-mobile12.dtd">',
  ce: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "ce-html-1.0-transitional.dtd">' }
Element construct Element {
  children: [],
  tagName: 'text',
  tag: 'text',
  attrs: { dangerouslySetInnerHTML: { __html: '<?xml version="1.0" encoding="utf-8" ?>' } },
  _Halvalla: 
   { birthName: 'Acolyte Shirley',
     tagName: 'text',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'text',
  '1': { dangerouslySetInnerHTML: { __html: '<?xml version="1.0" encoding="utf-8" ?>' } } }
shipping Element {
  children: [],
  tagName: 'text',
  tag: 'text',
  attrs: { dangerouslySetInnerHTML: { __html: '<?xml version="1.0" encoding="utf-8" ?>' } },
  _Halvalla: 
   { birthName: 'Acolyte Shirley',
     tagName: 'text',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Shirley
reinspect Acolyte Shirley
Looking at - Acolyte Shirley
March Halvalla - to component Element {
  children: [],
  tagName: 'text',
  tag: 'text',
  attrs: { dangerouslySetInnerHTML: { __html: '<?xml version="1.0" encoding="utf-8" ?>' } },
  _Halvalla: 
   { birthName: 'Acolyte Shirley',
     tagName: 'text',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object text
Looking at - All Done! We close bag now

Looking at - Acolyte Shirley
March Teacup Acolyte Shirley
CELL! Element {
  children: [],
  tagName: 'text',
  tag: 'text',
  attrs: { dangerouslySetInnerHTML: { __html: '<?xml version="1.0" encoding="utf-8" ?>' } },
  _Halvalla: 
   { birthName: 'Acolyte Shirley',
     tagName: 'text',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result 
Teacup::tag final result <?xml version="1.0" encoding="utf-8" ?>
shipping <?xml version="1.0" encoding="utf-8" ?>
output length 0
Looking at - All Done! We close bag now

Final Render <?xml version="1.0" encoding="utf-8" ?>
    ✓ xml should render xml header
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
doctype request 5
and it is...  { '5': '<!DOCTYPE html>',
  default: '<!DOCTYPE html>',
  html: '<!DOCTYPE html>',
  xml: '<?xml version="1.0" encoding="utf-8" ?>',
  transitional: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">',
  strict: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">',
  frameset: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">',
  '1.1': '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">',
  basic: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML Basic 1.1//EN" "http://www.w3.org/TR/xhtml-basic/xhtml-basic11.dtd">',
  mobile: '<!DOCTYPE html PUBLIC "-//WAPFORUM//DTD XHTML Mobile 1.2//EN" "http://www.openmobilealliance.org/tech/DTD/xhtml-mobile12.dtd">',
  ce: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "ce-html-1.0-transitional.dtd">' }
Element construct Element {
  children: [],
  tagName: 'text',
  tag: 'text',
  attrs: { dangerouslySetInnerHTML: { __html: '<!DOCTYPE html>' } },
  _Halvalla: 
   { birthName: 'Acolyte Stephen',
     tagName: 'text',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'text',
  '1': { dangerouslySetInnerHTML: { __html: '<!DOCTYPE html>' } } }
shipping Element {
  children: [],
  tagName: 'text',
  tag: 'text',
  attrs: { dangerouslySetInnerHTML: { __html: '<!DOCTYPE html>' } },
  _Halvalla: 
   { birthName: 'Acolyte Stephen',
     tagName: 'text',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Stephen
reinspect Acolyte Stephen
Looking at - Acolyte Stephen
March Halvalla - to component Element {
  children: [],
  tagName: 'text',
  tag: 'text',
  attrs: { dangerouslySetInnerHTML: { __html: '<!DOCTYPE html>' } },
  _Halvalla: 
   { birthName: 'Acolyte Stephen',
     tagName: 'text',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object text
Looking at - All Done! We close bag now

Looking at - Acolyte Stephen
March Teacup Acolyte Stephen
CELL! Element {
  children: [],
  tagName: 'text',
  tag: 'text',
  attrs: { dangerouslySetInnerHTML: { __html: '<!DOCTYPE html>' } },
  _Halvalla: 
   { birthName: 'Acolyte Stephen',
     tagName: 'text',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result 
Teacup::tag final result <!DOCTYPE html>
shipping <!DOCTYPE html>
output length 0
Looking at - All Done! We close bag now

Final Render <!DOCTYPE html>
    ✓ 5 should render html 5 doctype
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
doctype request transitional
and it is...  { '5': '<!DOCTYPE html>',
  default: '<!DOCTYPE html>',
  html: '<!DOCTYPE html>',
  xml: '<?xml version="1.0" encoding="utf-8" ?>',
  transitional: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">',
  strict: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">',
  frameset: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">',
  '1.1': '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">',
  basic: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML Basic 1.1//EN" "http://www.w3.org/TR/xhtml-basic/xhtml-basic11.dtd">',
  mobile: '<!DOCTYPE html PUBLIC "-//WAPFORUM//DTD XHTML Mobile 1.2//EN" "http://www.openmobilealliance.org/tech/DTD/xhtml-mobile12.dtd">',
  ce: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "ce-html-1.0-transitional.dtd">' }
Element construct Element {
  children: [],
  tagName: 'text',
  tag: 'text',
  attrs: { dangerouslySetInnerHTML: { __html: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">' } },
  _Halvalla: 
   { birthName: 'Acolyte Anna',
     tagName: 'text',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'text',
  '1': { dangerouslySetInnerHTML: { __html: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">' } } }
shipping Element {
  children: [],
  tagName: 'text',
  tag: 'text',
  attrs: { dangerouslySetInnerHTML: { __html: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">' } },
  _Halvalla: 
   { birthName: 'Acolyte Anna',
     tagName: 'text',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Anna
reinspect Acolyte Anna
Looking at - Acolyte Anna
March Halvalla - to component Element {
  children: [],
  tagName: 'text',
  tag: 'text',
  attrs: { dangerouslySetInnerHTML: { __html: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">' } },
  _Halvalla: 
   { birthName: 'Acolyte Anna',
     tagName: 'text',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object text
Looking at - All Done! We close bag now

Looking at - Acolyte Anna
March Teacup Acolyte Anna
CELL! Element {
  children: [],
  tagName: 'text',
  tag: 'text',
  attrs: { dangerouslySetInnerHTML: { __html: '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">' } },
  _Halvalla: 
   { birthName: 'Acolyte Anna',
     tagName: 'text',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result 
Teacup::tag final result <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
shipping <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
output length 0
Looking at - All Done! We close bag now

Final Render <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
    ✓ transitional should render transitional doctype

  Auto escaping
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Element construct Element {
  children: [],
  tagName: 'input',
  tag: 'input',
  attrs: { name: '"pwned' },
  _Halvalla: 
   { birthName: 'Acolyte Jonathan',
     tagName: 'input',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'input', '1': { name: '"pwned' } }
shipping Element {
  children: [],
  tagName: 'input',
  tag: 'input',
  attrs: { name: '"pwned' },
  _Halvalla: 
   { birthName: 'Acolyte Jonathan',
     tagName: 'input',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Jonathan
reinspect Acolyte Jonathan
Looking at - Acolyte Jonathan
March Halvalla - to component Element {
  children: [],
  tagName: 'input',
  tag: 'input',
  attrs: { name: '"pwned' },
  _Halvalla: 
   { birthName: 'Acolyte Jonathan',
     tagName: 'input',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object input
Looking at - All Done! We close bag now

Looking at - Acolyte Jonathan
March Teacup Acolyte Jonathan
shipping <input name="&quot;pwned" />
output length 0
Looking at - All Done! We close bag now

Final Render <input name="&quot;pwned" />
    ✓ escapes tag attributes
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Element construct Element {
  children: [],
  tagName: 'input',
  tag: 'input',
  attrs: { name: '\'pwned' },
  _Halvalla: 
   { birthName: 'Acolyte Angela',
     tagName: 'input',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'input', '1': { name: '\'pwned' } }
shipping Element {
  children: [],
  tagName: 'input',
  tag: 'input',
  attrs: { name: '\'pwned' },
  _Halvalla: 
   { birthName: 'Acolyte Angela',
     tagName: 'input',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Angela
reinspect Acolyte Angela
Looking at - Acolyte Angela
March Halvalla - to component Element {
  children: [],
  tagName: 'input',
  tag: 'input',
  attrs: { name: '\'pwned' },
  _Halvalla: 
   { birthName: 'Acolyte Angela',
     tagName: 'input',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object input
Looking at - All Done! We close bag now

Looking at - Acolyte Angela
March Teacup Acolyte Angela
shipping <input name="'pwned" />
output length 0
Looking at - All Done! We close bag now

Final Render <input name="'pwned" />
    ✓ does not escape single quotes in tag attributes
    a script tag
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo <script>alert('"owned" by c&a &copy;')</script>
March Halvalla - to component [String: '<script>alert(\'"owned" by c&a &copy;\')</script>']
Constructor name String
shipping [String: '<script>alert(\'"owned" by c&a &copy;\')</script>']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: '<script>alert(\'"owned" by c&a &copy;\')</script>',
  tagName: 'h1',
  tag: 'h1',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Larry',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'h1',
  '1': {},
  '2': '<script>alert(\'"owned" by c&a &copy;\')</script>' }
shipping Element {
  children: '<script>alert(\'"owned" by c&a &copy;\')</script>',
  tagName: 'h1',
  tag: 'h1',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Larry',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Larry
reinspect Acolyte Larry
Looking at - Acolyte Larry
March Halvalla - to component Element {
  children: '<script>alert(\'"owned" by c&a &copy;\')</script>',
  tagName: 'h1',
  tag: 'h1',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Larry',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object h1
Looking at - All Done! We close bag now

Looking at - Acolyte Larry
March Teacup Acolyte Larry
CELL! Element {
  children: '<script>alert(\'"owned" by c&a &copy;\')</script>',
  tagName: 'h1',
  tag: 'h1',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Larry',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <h1>
Teacup::tag final result <h1>&lt;script&gt;alert('&quot;owned&quot; by c&amp;a &amp;copy;')&lt;/script&gt;</h1>
shipping <h1>&lt;script&gt;alert('&quot;owned&quot; by c&amp;a &amp;copy;')&lt;/script&gt;</h1>
output length 0
Looking at - All Done! We close bag now

Final Render <h1>&lt;script&gt;alert('&quot;owned&quot; by c&amp;a &amp;copy;')&lt;/script&gt;</h1>
      ✓ adds HTML entities for sensitive characters

  raw filter
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Element construct Element {
  children: [],
  tagName: 'text',
  tag: 'text',
  attrs: { dangerouslySetInnerHTML: { __html: '<script>alert(\'on purpose\')</script>' } },
  _Halvalla: 
   { birthName: 'Acolyte Ruth',
     tagName: 'text',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'text',
  '1': { dangerouslySetInnerHTML: { __html: '<script>alert(\'on purpose\')</script>' } } }
shipping Element {
  children: [],
  tagName: 'text',
  tag: 'text',
  attrs: { dangerouslySetInnerHTML: { __html: '<script>alert(\'on purpose\')</script>' } },
  _Halvalla: 
   { birthName: 'Acolyte Ruth',
     tagName: 'text',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Ruth
reinspect Acolyte Ruth
Looking at - Acolyte Ruth
March Halvalla - to component Element {
  children: [],
  tagName: 'text',
  tag: 'text',
  attrs: { dangerouslySetInnerHTML: { __html: '<script>alert(\'on purpose\')</script>' } },
  _Halvalla: 
   { birthName: 'Acolyte Ruth',
     tagName: 'text',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object text
Looking at - All Done! We close bag now

Looking at - Acolyte Ruth
March Teacup Acolyte Ruth
CELL! Element {
  children: [],
  tagName: 'text',
  tag: 'text',
  attrs: { dangerouslySetInnerHTML: { __html: '<script>alert(\'on purpose\')</script>' } },
  _Halvalla: 
   { birthName: 'Acolyte Ruth',
     tagName: 'text',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result 
Teacup::tag final result <script>alert('on purpose')</script>
shipping <script>alert('on purpose')</script>
output length 0
Looking at - All Done! We close bag now

Final Render <script>alert('on purpose')</script>
    ✓ prints sensitive characters verbatim
    combined with the escape filter
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Element construct Element {
  children: [],
  tagName: 'text',
  tag: 'text',
  attrs: { dangerouslySetInnerHTML: { __html: '<script>alert(\'perfect &lt;3\')</script>' } },
  _Halvalla: 
   { birthName: 'Acolyte Justin',
     tagName: 'text',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'text',
  '1': { dangerouslySetInnerHTML: { __html: '<script>alert(\'perfect &lt;3\')</script>' } } }
shipping Element {
  children: [],
  tagName: 'text',
  tag: 'text',
  attrs: { dangerouslySetInnerHTML: { __html: '<script>alert(\'perfect &lt;3\')</script>' } },
  _Halvalla: 
   { birthName: 'Acolyte Justin',
     tagName: 'text',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Justin
reinspect Acolyte Justin
Looking at - Acolyte Justin
March Halvalla - to component Element {
  children: [],
  tagName: 'text',
  tag: 'text',
  attrs: { dangerouslySetInnerHTML: { __html: '<script>alert(\'perfect &lt;3\')</script>' } },
  _Halvalla: 
   { birthName: 'Acolyte Justin',
     tagName: 'text',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object text
Looking at - All Done! We close bag now

Looking at - Acolyte Justin
March Teacup Acolyte Justin
CELL! Element {
  children: [],
  tagName: 'text',
  tag: 'text',
  attrs: { dangerouslySetInnerHTML: { __html: '<script>alert(\'perfect &lt;3\')</script>' } },
  _Halvalla: 
   { birthName: 'Acolyte Justin',
     tagName: 'text',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result 
Teacup::tag final result <script>alert('perfect &lt;3')</script>
shipping <script>alert('perfect &lt;3')</script>
output length 0
Looking at - All Done! We close bag now

Final Render <script>alert('perfect &lt;3')</script>
      ✓ gives the author granular control of escaping

  script tag
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo window.user = {"name":"</script><script>alert(\"alert\");</script>"}
March Halvalla - to component [String: 'window.user = {"name":"</script><script>alert(\\"alert\\");</script>"}']
Constructor name String
shipping [String: 'window.user = {"name":"</script><script>alert(\\"alert\\");</script>"}']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: 'window.user = {"name":"</script><script>alert(\\"alert\\");</script>"}',
  tagName: 'script',
  tag: 'script',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Brenda',
     tagName: 'script',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'script',
  '1': {},
  '2': 'window.user = {"name":"</script><script>alert(\\"alert\\");</script>"}' }
shipping Element {
  children: 'window.user = {"name":"</script><script>alert(\\"alert\\");</script>"}',
  tagName: 'script',
  tag: 'script',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Brenda',
     tagName: 'script',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Brenda
reinspect Acolyte Brenda
Looking at - Acolyte Brenda
March Halvalla - to component Element {
  children: 'window.user = {"name":"</script><script>alert(\\"alert\\");</script>"}',
  tagName: 'script',
  tag: 'script',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Brenda',
     tagName: 'script',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object script
Looking at - All Done! We close bag now

Looking at - Acolyte Brenda
March Teacup Acolyte Brenda
shipping <script>window.user = {"name":"</script><script>alert(\"alert\");</script>"}</script>
output length 0
Looking at - All Done! We close bag now

Final Render <script>window.user = {"name":"</script><script>alert(\"alert\");</script>"}</script>
    1) escapes /

  HereDocs
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo $(document).ready(function(){
  alert('test');
});
March Halvalla - to component [String: '$(document).ready(function(){\n  alert(\'test\');\n});']
Constructor name String
shipping [String: '$(document).ready(function(){\n  alert(\'test\');\n});']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: '$(document).ready(function(){\n  alert(\'test\');\n});',
  tagName: 'script',
  tag: 'script',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Scott',
     tagName: 'script',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'script',
  '1': {},
  '2': '$(document).ready(function(){\n  alert(\'test\');\n});' }
shipping Element {
  children: '$(document).ready(function(){\n  alert(\'test\');\n});',
  tagName: 'script',
  tag: 'script',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Scott',
     tagName: 'script',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Scott
reinspect Acolyte Scott
Looking at - Acolyte Scott
March Halvalla - to component Element {
  children: '$(document).ready(function(){\n  alert(\'test\');\n});',
  tagName: 'script',
  tag: 'script',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Scott',
     tagName: 'script',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object script
Looking at - All Done! We close bag now

Looking at - Acolyte Scott
March Teacup Acolyte Scott
shipping <script>$(document).ready(function(){
  alert('test');
});</script>
output length 0
Looking at - All Done! We close bag now

Final Render <script>$(document).ready(function(){
  alert('test');
});</script>
    ✓ preserves line breaks

  IE conditionals
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo function () {
          return link({
            href: 'ie.css',
            rel: 'stylesheet'
          });
        }
March Halvalla - to component function () {
          return link({
            href: 'ie.css',
            rel: 'stylesheet'
          });
        }
Constructor name Function
Element construct Element {
  children: [],
  tagName: 'link',
  tag: 'link',
  attrs: { href: 'ie.css', rel: 'stylesheet' },
  _Halvalla: 
   { birthName: 'Acolyte Pamela',
     tagName: 'link',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'link', '1': { href: 'ie.css', rel: 'stylesheet' } }
shipping Element {
  children: [],
  tagName: 'link',
  tag: 'link',
  attrs: { href: 'ie.css', rel: 'stylesheet' },
  _Halvalla: 
   { birthName: 'Acolyte Pamela',
     tagName: 'link',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Pamela
reinspect Acolyte Pamela
Looking at - Acolyte Pamela
March Halvalla - to component Element {
  children: [],
  tagName: 'link',
  tag: 'link',
  attrs: { href: 'ie.css', rel: 'stylesheet' },
  _Halvalla: 
   { birthName: 'Acolyte Pamela',
     tagName: 'link',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object link
Looking at - All Done! We close bag now

Element construct Element {
  children: 
   Element {
     children: [],
     tagName: 'link',
     tag: 'link',
     attrs: { href: 'ie.css', rel: 'stylesheet' },
     _Halvalla: 
      { birthName: 'Acolyte Pamela',
        tagName: 'link',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'ie',
  tag: 'ie',
  attrs: { condition: 'gte IE8' },
  _Halvalla: 
   { birthName: 'Acolyte Frank',
     tagName: 'ie',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'ie',
  '1': { condition: 'gte IE8' },
  '2': 
   Element {
     children: [],
     tagName: 'link',
     tag: 'link',
     attrs: { href: 'ie.css', rel: 'stylesheet' },
     _Halvalla: 
      { birthName: 'Acolyte Pamela',
        tagName: 'link',
        propertyName: 'attrs',
        children: undefined } } }
shipping Element {
  children: 
   Element {
     children: [],
     tagName: 'link',
     tag: 'link',
     attrs: { href: 'ie.css', rel: 'stylesheet' },
     _Halvalla: 
      { birthName: 'Acolyte Pamela',
        tagName: 'link',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'ie',
  tag: 'ie',
  attrs: { condition: 'gte IE8' },
  _Halvalla: 
   { birthName: 'Acolyte Frank',
     tagName: 'ie',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Frank
reinspect Acolyte Frank
Looking at - Acolyte Frank
March Halvalla - to component Element {
  children: 
   Element {
     children: [],
     tagName: 'link',
     tag: 'link',
     attrs: { href: 'ie.css', rel: 'stylesheet' },
     _Halvalla: 
      { birthName: 'Acolyte Pamela',
        tagName: 'link',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'ie',
  tag: 'ie',
  attrs: { condition: 'gte IE8' },
  _Halvalla: 
   { birthName: 'Acolyte Frank',
     tagName: 'ie',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object ie
Looking at - All Done! We close bag now

Looking at - Acolyte Frank
March Teacup Acolyte Frank
Looking at - Acolyte Pamela
March Teacup Acolyte Pamela
shipping <link href="ie.css" rel="stylesheet" />
output length 0
Looking at - All Done! We close bag now

Final Render <link href="ie.css" rel="stylesheet" />
shipping <!--[if gte IE8]><link href="ie.css" rel="stylesheet" /><![endif]-->
output length 0
Looking at - All Done! We close bag now

Final Render <!--[if gte IE8]><link href="ie.css" rel="stylesheet" /><![endif]-->
    ✓ renders conditional comments

  nesting templates
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo function () {
          return nameHelper(user);
        }
March Halvalla - to component function () {
          return nameHelper(user);
        }
Constructor name Function
Looking at - some anonymous bozo Huevo Bueno
March Halvalla - to component [String: 'Huevo Bueno']
Constructor name String
shipping [String: 'Huevo Bueno']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: 'Huevo Bueno',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Nicole',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'p', '1': {}, '2': 'Huevo Bueno' }
shipping Element {
  children: 'Huevo Bueno',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Nicole',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Nicole
reinspect Acolyte Nicole
Looking at - Acolyte Nicole
March Halvalla - to component Element {
  children: 'Huevo Bueno',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Nicole',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object p
Looking at - All Done! We close bag now

Element construct Element {
  children: 
   Element {
     children: 'Huevo Bueno',
     tagName: 'p',
     tag: 'p',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Nicole',
        tagName: 'p',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'div',
  tag: 'div',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Brandon',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'div',
  '1': {},
  '2': 
   Element {
     children: 'Huevo Bueno',
     tagName: 'p',
     tag: 'p',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Nicole',
        tagName: 'p',
        propertyName: 'attrs',
        children: undefined } } }
shipping Element {
  children: 
   Element {
     children: 'Huevo Bueno',
     tagName: 'p',
     tag: 'p',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Nicole',
        tagName: 'p',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'div',
  tag: 'div',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Brandon',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Brandon
reinspect Acolyte Brandon
Looking at - Acolyte Brandon
March Halvalla - to component Element {
  children: 
   Element {
     children: 'Huevo Bueno',
     tagName: 'p',
     tag: 'p',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Nicole',
        tagName: 'p',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'div',
  tag: 'div',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Brandon',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object div
Looking at - All Done! We close bag now

Looking at - Acolyte Brandon
March Teacup Acolyte Brandon
CELL! Element {
  children: 
   Element {
     children: 'Huevo Bueno',
     tagName: 'p',
     tag: 'p',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Nicole',
        tagName: 'p',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'div',
  tag: 'div',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Brandon',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <div>
Looking at - Acolyte Nicole
March Teacup Acolyte Nicole
CELL! Element {
  children: 'Huevo Bueno',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Nicole',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <p>
Teacup::tag final result <p>Huevo Bueno</p>
shipping <p>Huevo Bueno</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>Huevo Bueno</p>
Teacup::tag final result <div><p>Huevo Bueno</p></div>
shipping <div><p>Huevo Bueno</p></div>
output length 0
Looking at - All Done! We close bag now

Final Render <div><p>Huevo Bueno</p></div>
    ✓ renders nested template in the same output

  plugins
    ✓ are applied via use

  render
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo function () {
          a(d, "link 1");
          return a(d, "link 2");
        }
March Halvalla - to component function () {
          a(d, "link 1");
          return a(d, "link 2");
        }
Constructor name Function
Looking at - some anonymous bozo link 1
March Halvalla - to component [String: 'link 1']
Constructor name String
shipping [String: 'link 1']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: 'link 1',
  tagName: 'a',
  tag: 'a',
  attrs: { id: 'foobar', class: 'myclass', href: 'http://example.com' },
  _Halvalla: 
   { birthName: 'Acolyte Katherine',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'a',
  '1': { id: 'foobar', class: 'myclass', href: 'http://example.com' },
  '2': 'link 1' }
shipping Element {
  children: 'link 1',
  tagName: 'a',
  tag: 'a',
  attrs: { id: 'foobar', class: 'myclass', href: 'http://example.com' },
  _Halvalla: 
   { birthName: 'Acolyte Katherine',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
output length 0
Looking at - some anonymous bozo link 2
March Halvalla - to component [String: 'link 2']
Constructor name String
shipping [String: 'link 2']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: 'link 2',
  tagName: 'a',
  tag: 'a',
  attrs: { id: 'foobar', class: 'myclass', href: 'http://example.com' },
  _Halvalla: 
   { birthName: 'Acolyte Raymond',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'a',
  '1': { id: 'foobar', class: 'myclass', href: 'http://example.com' },
  '2': 'link 2' }
shipping Element {
  children: 'link 2',
  tagName: 'a',
  tag: 'a',
  attrs: { id: 'foobar', class: 'myclass', href: 'http://example.com' },
  _Halvalla: 
   { birthName: 'Acolyte Raymond',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
output length 1
reinspect Acolyte Raymond
reinspect Acolyte Raymond
Looking at - Acolyte Raymond
March Halvalla - to component Element {
  children: 'link 2',
  tagName: 'a',
  tag: 'a',
  attrs: { id: 'foobar', class: 'myclass', href: 'http://example.com' },
  _Halvalla: 
   { birthName: 'Acolyte Raymond',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object a
Looking at - All Done! We close bag now

Element construct Element {
  children: 
   [ Element {
       children: 'link 1',
       tagName: 'a',
       tag: 'a',
       attrs: [Object],
       _Halvalla: [Object] },
     Element {
       children: 'link 2',
       tagName: 'a',
       tag: 'a',
       attrs: [Object],
       _Halvalla: [Object] } ],
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Virginia',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'p',
  '1': {},
  '2': 
   Element {
     children: 'link 1',
     tagName: 'a',
     tag: 'a',
     attrs: { id: 'foobar', class: 'myclass', href: 'http://example.com' },
     _Halvalla: 
      { birthName: 'Acolyte Katherine',
        tagName: 'a',
        propertyName: 'attrs',
        children: undefined } },
  '3': 
   Element {
     children: 'link 2',
     tagName: 'a',
     tag: 'a',
     attrs: { id: 'foobar', class: 'myclass', href: 'http://example.com' },
     _Halvalla: 
      { birthName: 'Acolyte Raymond',
        tagName: 'a',
        propertyName: 'attrs',
        children: undefined } } }
shipping Element {
  children: 
   [ Element {
       children: 'link 1',
       tagName: 'a',
       tag: 'a',
       attrs: [Object],
       _Halvalla: [Object] },
     Element {
       children: 'link 2',
       tagName: 'a',
       tag: 'a',
       attrs: [Object],
       _Halvalla: [Object] } ],
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Virginia',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Virginia
reinspect Acolyte Virginia
Looking at - Acolyte Virginia
March Halvalla - to component Element {
  children: 
   [ Element {
       children: 'link 1',
       tagName: 'a',
       tag: 'a',
       attrs: [Object],
       _Halvalla: [Object] },
     Element {
       children: 'link 2',
       tagName: 'a',
       tag: 'a',
       attrs: [Object],
       _Halvalla: [Object] } ],
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Virginia',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object p
Looking at - All Done! We close bag now

Looking at - Acolyte Virginia
March Teacup Acolyte Virginia
CELL! Element {
  children: 
   [ Element {
       children: 'link 1',
       tagName: 'a',
       tag: 'a',
       attrs: [Object],
       _Halvalla: [Object] },
     Element {
       children: 'link 2',
       tagName: 'a',
       tag: 'a',
       attrs: [Object],
       _Halvalla: [Object] } ],
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Virginia',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <p>
Looking at - Acolyte Katherine
March Teacup Acolyte Katherine
CELL! Element {
  children: 'link 1',
  tagName: 'a',
  tag: 'a',
  attrs: { id: 'foobar', class: 'myclass', href: 'http://example.com' },
  _Halvalla: 
   { birthName: 'Acolyte Katherine',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <a id="foobar" class="myclass" href="http://example.com">
Teacup::tag final result <a id="foobar" class="myclass" href="http://example.com">link 1</a>
shipping <a id="foobar" class="myclass" href="http://example.com">link 1</a>
output length 0
Looking at - All Done! We close bag now

Final Render <a id="foobar" class="myclass" href="http://example.com">link 1</a>
Looking at - Acolyte Raymond
March Teacup Acolyte Raymond
CELL! Element {
  children: 'link 2',
  tagName: 'a',
  tag: 'a',
  attrs: { id: 'foobar', class: 'myclass', href: 'http://example.com' },
  _Halvalla: 
   { birthName: 'Acolyte Raymond',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <a id="foobar" class="myclass" href="http://example.com">
Teacup::tag final result <a id="foobar" class="myclass" href="http://example.com">link 2</a>
shipping <a id="foobar" class="myclass" href="http://example.com">link 2</a>
output length 0
Looking at - All Done! We close bag now

Final Render <a id="foobar" class="myclass" href="http://example.com">link 2</a>
Teacup::tag final result <p><a id="foobar" class="myclass" href="http://example.com">link 1</a><a id="foobar" class="myclass" href="http://example.com">link 2</a></p>
shipping <p><a id="foobar" class="myclass" href="http://example.com">link 1</a><a id="foobar" class="myclass" href="http://example.com">link 2</a></p>
output length 0
Looking at - All Done! We close bag now

Final Render <p><a id="foobar" class="myclass" href="http://example.com">link 1</a><a id="foobar" class="myclass" href="http://example.com">link 2</a></p>
    ✓ doesn't modify the attributes object
    nested in a template
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo function () {
            return raw("This text could use " + (render(function() {
              return strong(function() {
                return a({
                  href: '/'
                }, 'a link');
              });
            })) + ".");
          }
March Halvalla - to component function () {
            return raw("This text could use " + (render(function() {
              return strong(function() {
                return a({
                  href: '/'
                }, 'a link');
              });
            })) + ".");
          }
Constructor name Function
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo function () {
                return a({
                  href: '/'
                }, 'a link');
              }
March Halvalla - to component function () {
                return a({
                  href: '/'
                }, 'a link');
              }
Constructor name Function
Looking at - some anonymous bozo a link
March Halvalla - to component [String: 'a link']
Constructor name String
shipping [String: 'a link']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: 'a link',
  tagName: 'a',
  tag: 'a',
  attrs: { href: '/' },
  _Halvalla: 
   { birthName: 'Acolyte Gregory',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'a', '1': { href: '/' }, '2': 'a link' }
shipping Element {
  children: 'a link',
  tagName: 'a',
  tag: 'a',
  attrs: { href: '/' },
  _Halvalla: 
   { birthName: 'Acolyte Gregory',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Gregory
reinspect Acolyte Gregory
Looking at - Acolyte Gregory
March Halvalla - to component Element {
  children: 'a link',
  tagName: 'a',
  tag: 'a',
  attrs: { href: '/' },
  _Halvalla: 
   { birthName: 'Acolyte Gregory',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object a
Looking at - All Done! We close bag now

Element construct Element {
  children: 
   Element {
     children: 'a link',
     tagName: 'a',
     tag: 'a',
     attrs: { href: '/' },
     _Halvalla: 
      { birthName: 'Acolyte Gregory',
        tagName: 'a',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'strong',
  tag: 'strong',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Catherine',
     tagName: 'strong',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'strong',
  '1': {},
  '2': 
   Element {
     children: 'a link',
     tagName: 'a',
     tag: 'a',
     attrs: { href: '/' },
     _Halvalla: 
      { birthName: 'Acolyte Gregory',
        tagName: 'a',
        propertyName: 'attrs',
        children: undefined } } }
shipping Element {
  children: 
   Element {
     children: 'a link',
     tagName: 'a',
     tag: 'a',
     attrs: { href: '/' },
     _Halvalla: 
      { birthName: 'Acolyte Gregory',
        tagName: 'a',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'strong',
  tag: 'strong',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Catherine',
     tagName: 'strong',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Catherine
reinspect Acolyte Catherine
Looking at - Acolyte Catherine
March Halvalla - to component Element {
  children: 
   Element {
     children: 'a link',
     tagName: 'a',
     tag: 'a',
     attrs: { href: '/' },
     _Halvalla: 
      { birthName: 'Acolyte Gregory',
        tagName: 'a',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'strong',
  tag: 'strong',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Catherine',
     tagName: 'strong',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object strong
Looking at - All Done! We close bag now

Looking at - Acolyte Catherine
March Teacup Acolyte Catherine
CELL! Element {
  children: 
   Element {
     children: 'a link',
     tagName: 'a',
     tag: 'a',
     attrs: { href: '/' },
     _Halvalla: 
      { birthName: 'Acolyte Gregory',
        tagName: 'a',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'strong',
  tag: 'strong',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Catherine',
     tagName: 'strong',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <strong>
Looking at - Acolyte Gregory
March Teacup Acolyte Gregory
CELL! Element {
  children: 'a link',
  tagName: 'a',
  tag: 'a',
  attrs: { href: '/' },
  _Halvalla: 
   { birthName: 'Acolyte Gregory',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <a href="/">
Teacup::tag final result <a href="/">a link</a>
shipping <a href="/">a link</a>
output length 0
Looking at - All Done! We close bag now

Final Render <a href="/">a link</a>
Teacup::tag final result <strong><a href="/">a link</a></strong>
shipping <strong><a href="/">a link</a></strong>
output length 0
Looking at - All Done! We close bag now

Final Render <strong><a href="/">a link</a></strong>
Element construct Element {
  children: [],
  tagName: 'text',
  tag: 'text',
  attrs: { dangerouslySetInnerHTML: { __html: 'This text could use <strong><a href="/">a link</a></strong>.' } },
  _Halvalla: 
   { birthName: 'Acolyte Benjamin',
     tagName: 'text',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'text',
  '1': { dangerouslySetInnerHTML: { __html: 'This text could use <strong><a href="/">a link</a></strong>.' } } }
shipping Element {
  children: [],
  tagName: 'text',
  tag: 'text',
  attrs: { dangerouslySetInnerHTML: { __html: 'This text could use <strong><a href="/">a link</a></strong>.' } },
  _Halvalla: 
   { birthName: 'Acolyte Benjamin',
     tagName: 'text',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Benjamin
reinspect Acolyte Benjamin
Looking at - Acolyte Benjamin
March Halvalla - to component Element {
  children: [],
  tagName: 'text',
  tag: 'text',
  attrs: { dangerouslySetInnerHTML: { __html: 'This text could use <strong><a href="/">a link</a></strong>.' } },
  _Halvalla: 
   { birthName: 'Acolyte Benjamin',
     tagName: 'text',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object text
Looking at - All Done! We close bag now

Element construct Element {
  children: 
   Element {
     children: [],
     tagName: 'text',
     tag: 'text',
     attrs: { dangerouslySetInnerHTML: [Object] },
     _Halvalla: 
      { birthName: 'Acolyte Benjamin',
        tagName: 'text',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Christine',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'p',
  '1': {},
  '2': 
   Element {
     children: [],
     tagName: 'text',
     tag: 'text',
     attrs: { dangerouslySetInnerHTML: [Object] },
     _Halvalla: 
      { birthName: 'Acolyte Benjamin',
        tagName: 'text',
        propertyName: 'attrs',
        children: undefined } } }
shipping Element {
  children: 
   Element {
     children: [],
     tagName: 'text',
     tag: 'text',
     attrs: { dangerouslySetInnerHTML: [Object] },
     _Halvalla: 
      { birthName: 'Acolyte Benjamin',
        tagName: 'text',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Christine',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Christine
reinspect Acolyte Christine
Looking at - Acolyte Christine
March Halvalla - to component Element {
  children: 
   Element {
     children: [],
     tagName: 'text',
     tag: 'text',
     attrs: { dangerouslySetInnerHTML: [Object] },
     _Halvalla: 
      { birthName: 'Acolyte Benjamin',
        tagName: 'text',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Christine',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object p
Looking at - All Done! We close bag now

Looking at - Acolyte Christine
March Teacup Acolyte Christine
CELL! Element {
  children: 
   Element {
     children: [],
     tagName: 'text',
     tag: 'text',
     attrs: { dangerouslySetInnerHTML: [Object] },
     _Halvalla: 
      { birthName: 'Acolyte Benjamin',
        tagName: 'text',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Christine',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <p>
Looking at - Acolyte Benjamin
March Teacup Acolyte Benjamin
CELL! Element {
  children: [],
  tagName: 'text',
  tag: 'text',
  attrs: { dangerouslySetInnerHTML: { __html: 'This text could use <strong><a href="/">a link</a></strong>.' } },
  _Halvalla: 
   { birthName: 'Acolyte Benjamin',
     tagName: 'text',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result 
Teacup::tag final result This text could use <strong><a href="/">a link</a></strong>.
shipping This text could use <strong><a href="/">a link</a></strong>.
output length 0
Looking at - All Done! We close bag now

Final Render This text could use <strong><a href="/">a link</a></strong>.
Teacup::tag final result <p>This text could use <strong><a href="/">a link</a></strong>.</p>
shipping <p>This text could use <strong><a href="/">a link</a></strong>.</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>This text could use <strong><a href="/">a link</a></strong>.</p>
      ✓ returns the nested template without clobbering the parent result
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo function () {
            return raw("This text could use " + (cede(function() {
              return strong(function() {
                return a({
                  href: '/'
                }, 'a link');
              });
            })) + ".");
          }
March Halvalla - to component function () {
            return raw("This text could use " + (cede(function() {
              return strong(function() {
                return a({
                  href: '/'
                }, 'a link');
              });
            })) + ".");
          }
Constructor name Function
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo function () {
                return a({
                  href: '/'
                }, 'a link');
              }
March Halvalla - to component function () {
                return a({
                  href: '/'
                }, 'a link');
              }
Constructor name Function
Looking at - some anonymous bozo a link
March Halvalla - to component [String: 'a link']
Constructor name String
shipping [String: 'a link']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: 'a link',
  tagName: 'a',
  tag: 'a',
  attrs: { href: '/' },
  _Halvalla: 
   { birthName: 'Acolyte Samuel',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'a', '1': { href: '/' }, '2': 'a link' }
shipping Element {
  children: 'a link',
  tagName: 'a',
  tag: 'a',
  attrs: { href: '/' },
  _Halvalla: 
   { birthName: 'Acolyte Samuel',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Samuel
reinspect Acolyte Samuel
Looking at - Acolyte Samuel
March Halvalla - to component Element {
  children: 'a link',
  tagName: 'a',
  tag: 'a',
  attrs: { href: '/' },
  _Halvalla: 
   { birthName: 'Acolyte Samuel',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object a
Looking at - All Done! We close bag now

Element construct Element {
  children: 
   Element {
     children: 'a link',
     tagName: 'a',
     tag: 'a',
     attrs: { href: '/' },
     _Halvalla: 
      { birthName: 'Acolyte Samuel',
        tagName: 'a',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'strong',
  tag: 'strong',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Samantha',
     tagName: 'strong',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'strong',
  '1': {},
  '2': 
   Element {
     children: 'a link',
     tagName: 'a',
     tag: 'a',
     attrs: { href: '/' },
     _Halvalla: 
      { birthName: 'Acolyte Samuel',
        tagName: 'a',
        propertyName: 'attrs',
        children: undefined } } }
shipping Element {
  children: 
   Element {
     children: 'a link',
     tagName: 'a',
     tag: 'a',
     attrs: { href: '/' },
     _Halvalla: 
      { birthName: 'Acolyte Samuel',
        tagName: 'a',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'strong',
  tag: 'strong',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Samantha',
     tagName: 'strong',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Samantha
reinspect Acolyte Samantha
Looking at - Acolyte Samantha
March Halvalla - to component Element {
  children: 
   Element {
     children: 'a link',
     tagName: 'a',
     tag: 'a',
     attrs: { href: '/' },
     _Halvalla: 
      { birthName: 'Acolyte Samuel',
        tagName: 'a',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'strong',
  tag: 'strong',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Samantha',
     tagName: 'strong',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object strong
Looking at - All Done! We close bag now

Looking at - Acolyte Samantha
March Teacup Acolyte Samantha
CELL! Element {
  children: 
   Element {
     children: 'a link',
     tagName: 'a',
     tag: 'a',
     attrs: { href: '/' },
     _Halvalla: 
      { birthName: 'Acolyte Samuel',
        tagName: 'a',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'strong',
  tag: 'strong',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Samantha',
     tagName: 'strong',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <strong>
Looking at - Acolyte Samuel
March Teacup Acolyte Samuel
CELL! Element {
  children: 'a link',
  tagName: 'a',
  tag: 'a',
  attrs: { href: '/' },
  _Halvalla: 
   { birthName: 'Acolyte Samuel',
     tagName: 'a',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <a href="/">
Teacup::tag final result <a href="/">a link</a>
shipping <a href="/">a link</a>
output length 0
Looking at - All Done! We close bag now

Final Render <a href="/">a link</a>
Teacup::tag final result <strong><a href="/">a link</a></strong>
shipping <strong><a href="/">a link</a></strong>
output length 0
Looking at - All Done! We close bag now

Final Render <strong><a href="/">a link</a></strong>
Element construct Element {
  children: [],
  tagName: 'text',
  tag: 'text',
  attrs: { dangerouslySetInnerHTML: { __html: 'This text could use <strong><a href="/">a link</a></strong>.' } },
  _Halvalla: 
   { birthName: 'Acolyte Patrick',
     tagName: 'text',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'text',
  '1': { dangerouslySetInnerHTML: { __html: 'This text could use <strong><a href="/">a link</a></strong>.' } } }
shipping Element {
  children: [],
  tagName: 'text',
  tag: 'text',
  attrs: { dangerouslySetInnerHTML: { __html: 'This text could use <strong><a href="/">a link</a></strong>.' } },
  _Halvalla: 
   { birthName: 'Acolyte Patrick',
     tagName: 'text',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Patrick
reinspect Acolyte Patrick
Looking at - Acolyte Patrick
March Halvalla - to component Element {
  children: [],
  tagName: 'text',
  tag: 'text',
  attrs: { dangerouslySetInnerHTML: { __html: 'This text could use <strong><a href="/">a link</a></strong>.' } },
  _Halvalla: 
   { birthName: 'Acolyte Patrick',
     tagName: 'text',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object text
Looking at - All Done! We close bag now

Element construct Element {
  children: 
   Element {
     children: [],
     tagName: 'text',
     tag: 'text',
     attrs: { dangerouslySetInnerHTML: [Object] },
     _Halvalla: 
      { birthName: 'Acolyte Patrick',
        tagName: 'text',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Debra',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'p',
  '1': {},
  '2': 
   Element {
     children: [],
     tagName: 'text',
     tag: 'text',
     attrs: { dangerouslySetInnerHTML: [Object] },
     _Halvalla: 
      { birthName: 'Acolyte Patrick',
        tagName: 'text',
        propertyName: 'attrs',
        children: undefined } } }
shipping Element {
  children: 
   Element {
     children: [],
     tagName: 'text',
     tag: 'text',
     attrs: { dangerouslySetInnerHTML: [Object] },
     _Halvalla: 
      { birthName: 'Acolyte Patrick',
        tagName: 'text',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Debra',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Debra
reinspect Acolyte Debra
Looking at - Acolyte Debra
March Halvalla - to component Element {
  children: 
   Element {
     children: [],
     tagName: 'text',
     tag: 'text',
     attrs: { dangerouslySetInnerHTML: [Object] },
     _Halvalla: 
      { birthName: 'Acolyte Patrick',
        tagName: 'text',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Debra',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object p
Looking at - All Done! We close bag now

Looking at - Acolyte Debra
March Teacup Acolyte Debra
CELL! Element {
  children: 
   Element {
     children: [],
     tagName: 'text',
     tag: 'text',
     attrs: { dangerouslySetInnerHTML: [Object] },
     _Halvalla: 
      { birthName: 'Acolyte Patrick',
        tagName: 'text',
        propertyName: 'attrs',
        children: undefined } },
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Debra',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <p>
Looking at - Acolyte Patrick
March Teacup Acolyte Patrick
CELL! Element {
  children: [],
  tagName: 'text',
  tag: 'text',
  attrs: { dangerouslySetInnerHTML: { __html: 'This text could use <strong><a href="/">a link</a></strong>.' } },
  _Halvalla: 
   { birthName: 'Acolyte Patrick',
     tagName: 'text',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result 
Teacup::tag final result This text could use <strong><a href="/">a link</a></strong>.
shipping This text could use <strong><a href="/">a link</a></strong>.
output length 0
Looking at - All Done! We close bag now

Final Render This text could use <strong><a href="/">a link</a></strong>.
Teacup::tag final result <p>This text could use <strong><a href="/">a link</a></strong>.</p>
shipping <p>This text could use <strong><a href="/">a link</a></strong>.</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>This text could use <strong><a href="/">a link</a></strong>.</p>
      ✓ is aliased as cede

  renderable decorator
RENDERABLE Called  [ 'a', 'b', 'c' ]
Looking at - some anonymous bozo a
March Halvalla - to component [String: 'a']
Constructor name String
shipping [String: 'a']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: 'a',
  tagName: 'div',
  tag: 'div',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Alexander',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'div', '1': {}, '2': 'a' }
Looking at - some anonymous bozo b
March Halvalla - to component [String: 'b']
Constructor name String
shipping [String: 'b']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: 'b',
  tagName: 'div',
  tag: 'div',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Janet',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'div', '1': {}, '2': 'b' }
Looking at - some anonymous bozo c
March Halvalla - to component [String: 'c']
Constructor name String
shipping [String: 'c']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: 'c',
  tagName: 'div',
  tag: 'div',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Jack',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'div', '1': {}, '2': 'c' }
Looking at - Acolyte Alexander
March Teacup Acolyte Alexander
CELL! Element {
  children: 'a',
  tagName: 'div',
  tag: 'div',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Alexander',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <div>
Teacup::tag final result <div>a</div>
shipping <div>a</div>
output length 0
Looking at - All Done! We close bag now

Final Render <div>a</div>
Looking at - Acolyte Janet
March Teacup Acolyte Janet
CELL! Element {
  children: 'b',
  tagName: 'div',
  tag: 'div',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Janet',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <div>
Teacup::tag final result <div>b</div>
shipping <div>b</div>
output length 0
Looking at - All Done! We close bag now

Final Render <div>b</div>
Looking at - Acolyte Jack
March Teacup Acolyte Jack
CELL! Element {
  children: 'c',
  tagName: 'div',
  tag: 'div',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Jack',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <div>
Teacup::tag final result <div>c</div>
shipping <div>c</div>
output length 0
Looking at - All Done! We close bag now

Final Render <div>c</div>
    ✓ makes a template directly callable
RENDERABLE Called  { first: 'Huevo', last: 'Bueno' }
Looking at - some anonymous bozo function () {
          renderableHelper(user);
          return vanillaHelper(user);
        }
March Halvalla - to component function () {
          renderableHelper(user);
          return vanillaHelper(user);
        }
Constructor name Function
RENDERABLE Called  { first: 'Huevo', last: 'Bueno' }
Looking at - some anonymous bozo Huevo
March Halvalla - to component [String: 'Huevo']
Constructor name String
shipping [String: 'Huevo']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: 'Huevo',
  tagName: 'span',
  tag: 'span',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Rachel',
     tagName: 'span',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'span', '1': {}, '2': 'Huevo' }
shipping Element {
  children: 'Huevo',
  tagName: 'span',
  tag: 'span',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Rachel',
     tagName: 'span',
     propertyName: 'attrs',
     children: undefined } }
output length 0
Looking at - some anonymous bozo Bueno
March Halvalla - to component [String: 'Bueno']
Constructor name String
shipping [String: 'Bueno']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: 'Bueno',
  tagName: 'span',
  tag: 'span',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Dennis',
     tagName: 'span',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'span', '1': {}, '2': 'Bueno' }
shipping Element {
  children: 'Bueno',
  tagName: 'span',
  tag: 'span',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Dennis',
     tagName: 'span',
     propertyName: 'attrs',
     children: undefined } }
output length 1
reinspect Acolyte Dennis
reinspect Acolyte Dennis
Looking at - Acolyte Dennis
March Halvalla - to component Element {
  children: 'Bueno',
  tagName: 'span',
  tag: 'span',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Dennis',
     tagName: 'span',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object span
Looking at - All Done! We close bag now

Element construct Element {
  children: 
   [ Element {
       children: 'Huevo',
       tagName: 'span',
       tag: 'span',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: 'Bueno',
       tagName: 'span',
       tag: 'span',
       attrs: {},
       _Halvalla: [Object] } ],
  tagName: 'div',
  tag: 'div',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Carolyn',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'div',
  '1': {},
  '2': 
   Element {
     children: 'Huevo',
     tagName: 'span',
     tag: 'span',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Rachel',
        tagName: 'span',
        propertyName: 'attrs',
        children: undefined } },
  '3': 
   Element {
     children: 'Bueno',
     tagName: 'span',
     tag: 'span',
     attrs: {},
     _Halvalla: 
      { birthName: 'Acolyte Dennis',
        tagName: 'span',
        propertyName: 'attrs',
        children: undefined } } }
Looking at - Acolyte Carolyn
March Teacup Acolyte Carolyn
CELL! Element {
  children: 
   [ Element {
       children: 'Huevo',
       tagName: 'span',
       tag: 'span',
       attrs: {},
       _Halvalla: [Object] },
     Element {
       children: 'Bueno',
       tagName: 'span',
       tag: 'span',
       attrs: {},
       _Halvalla: [Object] } ],
  tagName: 'div',
  tag: 'div',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Carolyn',
     tagName: 'div',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <div>
Looking at - Acolyte Rachel
March Teacup Acolyte Rachel
CELL! Element {
  children: 'Huevo',
  tagName: 'span',
  tag: 'span',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Rachel',
     tagName: 'span',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <span>
Teacup::tag final result <span>Huevo</span>
shipping <span>Huevo</span>
output length 0
Looking at - All Done! We close bag now

Final Render <span>Huevo</span>
Looking at - Acolyte Dennis
March Teacup Acolyte Dennis
CELL! Element {
  children: 'Bueno',
  tagName: 'span',
  tag: 'span',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Dennis',
     tagName: 'span',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <span>
Teacup::tag final result <span>Bueno</span>
shipping <span>Bueno</span>
output length 0
Looking at - All Done! We close bag now

Final Render <span>Bueno</span>
Teacup::tag final result <div><span>Huevo</span><span>Bueno</span></div>
shipping <div><span>Huevo</span><span>Bueno</span></div>
output length 0
Looking at - All Done! We close bag now

Final Render <div><span>Huevo</span><span>Bueno</span></div>
    ✓ supports composition with renderable and non-renderable helpers

  Self Closing Tags
    <img />
RENDERABLE Called 
Element construct Element {
  children: [],
  tagName: 'img',
  tag: 'img',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Jerry',
     tagName: 'img',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'img', '1': {} }
Looking at - Acolyte Jerry
March Teacup Acolyte Jerry
shipping <img />
output length 0
Looking at - All Done! We close bag now

Final Render <img />
      ✓ should render
RENDERABLE Called  { src: 'http://foo.jpg.to' }
Element construct Element {
  children: [],
  tagName: 'img',
  tag: 'img',
  attrs: { src: 'http://foo.jpg.to' },
  _Halvalla: 
   { birthName: 'Acolyte Emma',
     tagName: 'img',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'img', '1': { src: 'http://foo.jpg.to' } }
Looking at - Acolyte Emma
March Teacup Acolyte Emma
shipping <img src="http://foo.jpg.to" />
output length 0
Looking at - All Done! We close bag now

Final Render <img src="http://foo.jpg.to" />
      ✓ should render with attributes
RENDERABLE Called 
      ✓ should throw when passed content
    <br />
RENDERABLE Called 
Element construct Element {
  children: [],
  tagName: 'br',
  tag: 'br',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Tyler',
     tagName: 'br',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'br', '1': {} }
Looking at - Acolyte Tyler
March Teacup Acolyte Tyler
shipping <br />
output length 0
Looking at - All Done! We close bag now

Final Render <br />
      ✓ should render
    <link />
RENDERABLE Called  { href: '/foo.css', rel: 'stylesheet' }
Element construct Element {
  children: [],
  tagName: 'link',
  tag: 'link',
  attrs: { href: '/foo.css', rel: 'stylesheet' },
  _Halvalla: 
   { birthName: 'Acolyte Maria',
     tagName: 'link',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'link', '1': { href: '/foo.css', rel: 'stylesheet' } }
Looking at - Acolyte Maria
March Teacup Acolyte Maria
shipping <link href="/foo.css" rel="stylesheet" />
output length 0
Looking at - All Done! We close bag now

Final Render <link href="/foo.css" rel="stylesheet" />
      ✓ should render with attributes

  stack trace
RENDERABLE Called 
Looking at - some anonymous bozo function () {
          return p(function() {
            throw new Error();
          });
        }
March Halvalla - to component function () {
          return p(function() {
            throw new Error();
          });
        }
Constructor name Function
Looking at - some anonymous bozo function () {
            throw new Error();
          }
March Halvalla - to component function () {
            throw new Error();
          }
Constructor name Function
    ✓ should contain tag names

  tag
RENDERABLE Called  2013-01-31T14:00:00.000Z
Looking at - some anonymous bozo Fri Feb 01 2013 00:00:00 GMT+1000 (ChST)
March Halvalla - to component Fri Feb 01 2013 00:00:00 GMT+1000 (ChST)
Constructor name String
shipping Fri Feb 01 2013 00:00:00 GMT+1000 (ChST)
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: 'Fri Feb 01 2013 00:00:00 GMT+1000 (ChST)',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Aaron',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'p',
  '1': {},
  '2': 'Fri Feb 01 2013 00:00:00 GMT+1000 (ChST)' }
shipping Element {
  children: 'Fri Feb 01 2013 00:00:00 GMT+1000 (ChST)',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Aaron',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 0
Looking at - Acolyte Aaron
March Teacup Acolyte Aaron
CELL! Element {
  children: 'Fri Feb 01 2013 00:00:00 GMT+1000 (ChST)',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Aaron',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <p>
Teacup::tag final result <p>Fri Feb 01 2013 00:00:00 GMT+1000 (ChST)</p>
shipping <p>Fri Feb 01 2013 00:00:00 GMT+1000 (ChST)</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>Fri Feb 01 2013 00:00:00 GMT+1000 (ChST)</p>
    ✓ renders Dates
RENDERABLE Called  foobar
Looking at - some anonymous bozo foobar
March Halvalla - to component [String: 'foobar']
Constructor name String
shipping [String: 'foobar']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: 'foobar',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Heather',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'p', '1': {}, '2': 'foobar' }
shipping Element {
  children: 'foobar',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Heather',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 1
Looking at - Acolyte Heather
March Teacup Acolyte Heather
CELL! Element {
  children: 'foobar',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Heather',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <p>
Teacup::tag final result <p>foobar</p>
shipping <p>foobar</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>foobar</p>
    ✓ renders text verbatim
RENDERABLE Called  1
Looking at - some anonymous bozo 1
March Halvalla - to component [String: '1']
Constructor name String
shipping [String: '1']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: '1',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Henry',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'p', '1': {}, '2': '1' }
shipping Element {
  children: '1',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Henry',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 2
Looking at - Acolyte Henry
March Teacup Acolyte Henry
CELL! Element {
  children: '1',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Henry',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <p>
Teacup::tag final result <p>1</p>
shipping <p>1</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>1</p>
RENDERABLE Called  0
Looking at - some anonymous bozo 0
March Halvalla - to component [String: '0']
Constructor name String
shipping [String: '0']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: '0',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Diane',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'p', '1': {}, '2': '0' }
shipping Element {
  children: '0',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Diane',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 3
Looking at - Acolyte Diane
March Teacup Acolyte Diane
CELL! Element {
  children: '0',
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Diane',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <p>
Teacup::tag final result <p>0</p>
shipping <p>0</p>
output length 0
Looking at - All Done! We close bag now

Final Render <p>0</p>
    ✓ renders numbers
RENDERABLE Called  undefined
Element construct Element {
  children: [],
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Douglas',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'p', '1': {} }
shipping Element {
  children: [],
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Douglas',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
output length 4
Looking at - Acolyte Douglas
March Teacup Acolyte Douglas
CELL! Element {
  children: [],
  tagName: 'p',
  tag: 'p',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Douglas',
     tagName: 'p',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <p>
Looking at - All Done! We close bag now

Final Render 
Teacup::tag final result <p></p>
shipping <p></p>
output length 0
Looking at - All Done! We close bag now

Final Render <p></p>
    ✓ renders undefined as ''
RENDERABLE Called 
Element construct Element {
  children: [],
  tagName: 'script',
  tag: 'script',
  attrs: { src: 'js/app.js' },
  _Halvalla: 
   { birthName: 'Acolyte Julie',
     tagName: 'script',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'script', '1': { src: 'js/app.js' } }
shipping Element {
  children: [],
  tagName: 'script',
  tag: 'script',
  attrs: { src: 'js/app.js' },
  _Halvalla: 
   { birthName: 'Acolyte Julie',
     tagName: 'script',
     propertyName: 'attrs',
     children: undefined } }
output length 5
Looking at - Acolyte Julie
March Teacup Acolyte Julie
shipping <script src="js/app.js"></script>
output length 0
Looking at - All Done! We close bag now

Final Render <script src="js/app.js"></script>
    ✓ renders empty tags

  text
RENDERABLE Called  foobar
shipping foobar
output length 6
Looking at - some anonymous bozo f
March Teacup f
shipping f
output length 0
Looking at - All Done! We close bag now

Final Render f
Looking at - some anonymous bozo o
March Teacup o
shipping o
output length 0
Looking at - All Done! We close bag now

Final Render o
Looking at - some anonymous bozo o
March Teacup o
shipping o
output length 0
Looking at - All Done! We close bag now

Final Render o
Looking at - some anonymous bozo b
March Teacup b
shipping b
output length 0
Looking at - All Done! We close bag now

Final Render b
Looking at - some anonymous bozo a
March Teacup a
shipping a
output length 0
Looking at - All Done! We close bag now

Final Render a
Looking at - some anonymous bozo r
March Teacup r
shipping r
output length 0
Looking at - All Done! We close bag now

Final Render r
    ✓ renders text verbatim
RENDERABLE Called  1
shipping 1
output length 7
Looking at - some anonymous bozo 1
March Teacup 1
shipping 1
output length 0
Looking at - All Done! We close bag now

Final Render 1
RENDERABLE Called  0
shipping 0
output length 8
Looking at - some anonymous bozo 0
March Teacup 0
shipping 0
output length 0
Looking at - All Done! We close bag now

Final Render 0
    ✓ renders numbers
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo function () {
          return 'hello world';
        }
March Halvalla - to component function () {
          return 'hello world';
        }
Constructor name Function
reinspect some anonymous bozo hello world
reinspect some anonymous bozo hello world
illegal input in instantiation bag #{eachItem}
Looking at - some anonymous bozo hello world
March Halvalla - to component hello world
Constructor name String
shipping hello world
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: 'hello world',
  tagName: 'h1',
  tag: 'h1',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Jose',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'h1', '1': {}, '2': 'hello world' }
shipping Element {
  children: 'hello world',
  tagName: 'h1',
  tag: 'h1',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Jose',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Jose
reinspect Acolyte Jose
Looking at - Acolyte Jose
March Halvalla - to component Element {
  children: 'hello world',
  tagName: 'h1',
  tag: 'h1',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Jose',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object h1
Looking at - All Done! We close bag now

Looking at - Acolyte Jose
March Teacup Acolyte Jose
CELL! Element {
  children: 'hello world',
  tagName: 'h1',
  tag: 'h1',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Jose',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <h1>
Teacup::tag final result <h1>hello world</h1>
shipping <h1>hello world</h1>
output length 0
Looking at - All Done! We close bag now

Final Render <h1>hello world</h1>
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo function () {
          return 'hello world';
        }
March Halvalla - to component function () {
          return 'hello world';
        }
Constructor name Function
reinspect some anonymous bozo hello world
reinspect some anonymous bozo hello world
illegal input in instantiation bag #{eachItem}
Looking at - some anonymous bozo hello world
March Halvalla - to component hello world
Constructor name String
shipping hello world
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: 'hello world',
  tagName: 'h1',
  tag: 'h1',
  attrs: { class: 'title', className: 'title' },
  _Halvalla: 
   { birthName: 'Acolyte Joyce',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'h1',
  '1': { class: 'title', className: 'title' },
  '2': 'hello world' }
shipping Element {
  children: 'hello world',
  tagName: 'h1',
  tag: 'h1',
  attrs: { class: 'title', className: 'title' },
  _Halvalla: 
   { birthName: 'Acolyte Joyce',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Joyce
reinspect Acolyte Joyce
Looking at - Acolyte Joyce
March Halvalla - to component Element {
  children: 'hello world',
  tagName: 'h1',
  tag: 'h1',
  attrs: { class: 'title', className: 'title' },
  _Halvalla: 
   { birthName: 'Acolyte Joyce',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object h1
Looking at - All Done! We close bag now

Looking at - Acolyte Joyce
March Teacup Acolyte Joyce
CELL! Element {
  children: 'hello world',
  tagName: 'h1',
  tag: 'h1',
  attrs: { class: 'title', className: 'title' },
  _Halvalla: 
   { birthName: 'Acolyte Joyce',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <h1 class="title">
Teacup::tag final result <h1 class="title">hello world</h1>
shipping <h1 class="title">hello world</h1>
output length 0
Looking at - All Done! We close bag now

Final Render <h1 class="title">hello world</h1>
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo function () {
          return 'hello world';
        }
March Halvalla - to component function () {
          return 'hello world';
        }
Constructor name Function
reinspect some anonymous bozo hello world
reinspect some anonymous bozo hello world
illegal input in instantiation bag #{eachItem}
Looking at - some anonymous bozo hello world
March Halvalla - to component hello world
Constructor name String
shipping hello world
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: 'hello world',
  tagName: 'h1',
  tag: 'h1',
  attrs: { class: 'title' },
  _Halvalla: 
   { birthName: 'Acolyte Peter',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'h1', '1': { class: 'title' }, '2': 'hello world' }
shipping Element {
  children: 'hello world',
  tagName: 'h1',
  tag: 'h1',
  attrs: { class: 'title' },
  _Halvalla: 
   { birthName: 'Acolyte Peter',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Peter
reinspect Acolyte Peter
Looking at - Acolyte Peter
March Halvalla - to component Element {
  children: 'hello world',
  tagName: 'h1',
  tag: 'h1',
  attrs: { class: 'title' },
  _Halvalla: 
   { birthName: 'Acolyte Peter',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object h1
Looking at - All Done! We close bag now

Looking at - Acolyte Peter
March Teacup Acolyte Peter
CELL! Element {
  children: 'hello world',
  tagName: 'h1',
  tag: 'h1',
  attrs: { class: 'title' },
  _Halvalla: 
   { birthName: 'Acolyte Peter',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <h1 class="title">
Teacup::tag final result <h1 class="title">hello world</h1>
shipping <h1 class="title">hello world</h1>
output length 0
Looking at - All Done! We close bag now

Final Render <h1 class="title">hello world</h1>
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo function () {
          return text('hello world');
        }
March Halvalla - to component function () {
          return text('hello world');
        }
Constructor name Function
shipping hello world
output length 0
reinspect some anonymous bozo hello world
reinspect some anonymous bozo hello world
illegal input in instantiation bag #{eachItem}
Looking at - some anonymous bozo hello world
March Halvalla - to component hello world
Constructor name String
Looking at - All Done! We close bag now

Element construct Element {
  children: 'hello world',
  tagName: 'h1',
  tag: 'h1',
  attrs: { class: 'title', className: 'title' },
  _Halvalla: 
   { birthName: 'Acolyte Evelyn',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'h1',
  '1': { class: 'title', className: 'title' },
  '2': 'hello world' }
shipping Element {
  children: 'hello world',
  tagName: 'h1',
  tag: 'h1',
  attrs: { class: 'title', className: 'title' },
  _Halvalla: 
   { birthName: 'Acolyte Evelyn',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Evelyn
reinspect Acolyte Evelyn
Looking at - Acolyte Evelyn
March Halvalla - to component Element {
  children: 'hello world',
  tagName: 'h1',
  tag: 'h1',
  attrs: { class: 'title', className: 'title' },
  _Halvalla: 
   { birthName: 'Acolyte Evelyn',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object h1
Looking at - All Done! We close bag now

Looking at - Acolyte Evelyn
March Teacup Acolyte Evelyn
CELL! Element {
  children: 'hello world',
  tagName: 'h1',
  tag: 'h1',
  attrs: { class: 'title', className: 'title' },
  _Halvalla: 
   { birthName: 'Acolyte Evelyn',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <h1 class="title">
Teacup::tag final result <h1 class="title">hello world</h1>
shipping <h1 class="title">hello world</h1>
output length 0
Looking at - All Done! We close bag now

Final Render <h1 class="title">hello world</h1>
    ✓ is assumed when it is returned from contents

  Context data
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo bar
March Halvalla - to component [String: 'bar']
Constructor name String
shipping [String: 'bar']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: 'bar',
  tagName: 'h1',
  tag: 'h1',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Adam',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'h1', '1': {}, '2': 'bar' }
shipping Element {
  children: 'bar',
  tagName: 'h1',
  tag: 'h1',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Adam',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Adam
reinspect Acolyte Adam
Looking at - Acolyte Adam
March Halvalla - to component Element {
  children: 'bar',
  tagName: 'h1',
  tag: 'h1',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Adam',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object h1
Looking at - All Done! We close bag now

Looking at - Acolyte Adam
March Teacup Acolyte Adam
CELL! Element {
  children: 'bar',
  tagName: 'h1',
  tag: 'h1',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Adam',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <h1>
Teacup::tag final result <h1>bar</h1>
shipping <h1>bar</h1>
output length 0
Looking at - All Done! We close bag now

Final Render <h1>bar</h1>
    ✓ is an argument to the template function

  Local vars
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo dynamic: bar
March Halvalla - to component [String: 'dynamic: bar']
Constructor name String
shipping [String: 'dynamic: bar']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: 'dynamic: bar',
  tagName: 'h1',
  tag: 'h1',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Frances',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'h1', '1': {}, '2': 'dynamic: bar' }
shipping Element {
  children: 'dynamic: bar',
  tagName: 'h1',
  tag: 'h1',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Frances',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Frances
reinspect Acolyte Frances
Looking at - Acolyte Frances
March Halvalla - to component Element {
  children: 'dynamic: bar',
  tagName: 'h1',
  tag: 'h1',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Frances',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object h1
Looking at - All Done! We close bag now

Looking at - Acolyte Frances
March Teacup Acolyte Frances
CELL! Element {
  children: 'dynamic: bar',
  tagName: 'h1',
  tag: 'h1',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Frances',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <h1>
Teacup::tag final result <h1>dynamic: bar</h1>
shipping <h1>dynamic: bar</h1>
output length 0
Looking at - All Done! We close bag now

Final Render <h1>dynamic: bar</h1>
Looking at - some anonymous bozo function () {
            return node.apply(null, rest);
          }
March Halvalla - to component function () {
            return node.apply(null, rest);
          }
Constructor name Function
Looking at - some anonymous bozo dynamic: baz
March Halvalla - to component [String: 'dynamic: baz']
Constructor name String
shipping [String: 'dynamic: baz']
output length 0
Looking at - All Done! We close bag now

Element construct Element {
  children: 'dynamic: baz',
  tagName: 'h1',
  tag: 'h1',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Zachary',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
Element attrs should be object, typeof this.attrs =  object
Element arguments { '0': 'h1', '1': {}, '2': 'dynamic: baz' }
shipping Element {
  children: 'dynamic: baz',
  tagName: 'h1',
  tag: 'h1',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Zachary',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
output length 0
reinspect Acolyte Zachary
reinspect Acolyte Zachary
Looking at - Acolyte Zachary
March Halvalla - to component Element {
  children: 'dynamic: baz',
  tagName: 'h1',
  tag: 'h1',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Zachary',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
Constructor name Element
Tagname of March component type object h1
Looking at - All Done! We close bag now

Looking at - Acolyte Zachary
March Teacup Acolyte Zachary
CELL! Element {
  children: 'dynamic: baz',
  tagName: 'h1',
  tag: 'h1',
  attrs: {},
  _Halvalla: 
   { birthName: 'Acolyte Zachary',
     tagName: 'h1',
     propertyName: 'attrs',
     children: undefined } }
Teacup::tag Typeof props to render object
Teacup::tag early result <h1>
Teacup::tag final result <h1>dynamic: baz</h1>
shipping <h1>dynamic: baz</h1>
output length 0
Looking at - All Done! We close bag now

Final Render <h1>dynamic: baz</h1>
    ✓ are in the template function closure


  62 passing (432ms)
  1 failing

  1) script tag
       escapes /:
     Error: expected '<script>window.user = {"name":"</script><script>alert(\\"alert\\");</script>"}</script>' to equal '<script>window.user = {&quot;name&quot;:&quot;&lt;/script&gt;&lt;script&gt;alert(\\&quot;alert\\&quot;);&lt;/script&gt;&quot;}</script>'
      at Assertion.assert (node_modules/expect.js/index.js:96:13)
      at Assertion.be.Assertion.equal (node_modules/expect.js/index.js:216:10)
      at Context.<anonymous> (test-teacup/escaping.coffee:37:32)
  



